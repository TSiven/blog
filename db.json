{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/uploads/alipay.jpg","path":"uploads/alipay.jpg","modified":0,"renderable":0},{"_id":"source/uploads/avatar.jpg","path":"uploads/avatar.jpg","modified":0,"renderable":0},{"_id":"source/uploads/wechatpay.jpg","path":"uploads/wechatpay.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1505560615000},{"_id":"source/CNAME","hash":"1743d42d47c5305ed34c5c91167aa5f2c06615d8","modified":1505560615000},{"_id":"source/baidu_verify_Ocz3tW2x0D.html","hash":"43676b2b6e455df5625311c07cf09197307c2815","modified":1505560615000},{"_id":"source/favicon.ico","hash":"c500e5038985b5500a5754643926c180b75c2fec","modified":1505560615000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1505560615000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1505560615000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1505560615000},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1501574194000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1505560615000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1505560615000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1505560615000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1505560615000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1505560615000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1505560615000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1505560615000},{"_id":"themes/next/README.en.md","hash":"32d6cdfec1447f54aae1d7f1365ce6733dfcec8f","modified":1505560615000},{"_id":"themes/next/_config.yml","hash":"4467b2ab51487fe92a523983d946361398476601","modified":1505560615000},{"_id":"themes/next/bower.json","hash":"7d7938f9da896fe710aa0e9120140e528bf058df","modified":1505560615000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1505560615000},{"_id":"themes/next/package.json","hash":"193dad6f59a588908fac082cc46fe067dac1b84d","modified":1505560615000},{"_id":"source/_posts/Intellij-IDEA使用MyBatis-generator自动生成MyBatis代码.md","hash":"4d55ebb66e69bc3774a1779933d20f9299eb0fdc","modified":1505560615000},{"_id":"source/_posts/Redis-Sentinel集群方案-单机版.md","hash":"1cf5b3315e212e28f9034e8ee38472b85dfcfea1","modified":1505560615000},{"_id":"source/_posts/Redis配置 & 常规操作类封装.md","hash":"5383343f20b156134b801466e555cfe3e33c61d9","modified":1505560615000},{"_id":"source/_posts/Spring3-整合MyBatis3-配置多数据源-动态选择SqlSessionFactory.md","hash":"3c23814b95eac516e412bcae53287b36646a1329","modified":1505560615000},{"_id":"source/_posts/Spring通过ApplicationContext主动获取bean.md","hash":"ade7b7d278ae918c78523d821c486c15949385e3","modified":1505560615000},{"_id":"source/_posts/hello-world.md","hash":"ef118b27eb9052854ec656d4e61809ef562bf5c1","modified":1505560615000},{"_id":"source/_posts/idea无法下载依赖包的source-使用maven下载source.md","hash":"226222e7e2bda3d5504c1b7845c229a93aceb2d2","modified":1505560615000},{"_id":"source/_posts/两台Linux服务器之间通过SCP传输文件夹（无须密码验证）.md","hash":"6cdee74915b1be9193bde418d839ca6c76c0d2a0","modified":1505560615000},{"_id":"source/_posts/使用AOP-实现Redis缓存注解，支持SPEL.md","hash":"e236beec18e7545c83e9b113748e29051adef88a","modified":1505560615000},{"_id":"source/_posts/让Mac也能拥有apt-get类似的功能——Brew.md","hash":"a7535602e150caca91432477d90b43c1238e7307","modified":1505560615000},{"_id":"source/about/index.md","hash":"6bb8e10201302888e08534aec48bcf19eda3c83a","modified":1505560615000},{"_id":"source/categories/index.md","hash":"107a7c9cf7a8fe7a7f5ecee2ba7ffffd3ce247d3","modified":1505560615000},{"_id":"source/tags/index.md","hash":"bd687d50ec41b75c9248f4eec223baaa8ef78339","modified":1505560615000},{"_id":"source/uploads/alipay.jpg","hash":"bd38d85420ab11e7d21c0ea01a76046ed5a25db8","modified":1505560615000},{"_id":"source/uploads/avatar.jpg","hash":"f96d11a7d8b2285b8f18be3c656aa92aa04ad797","modified":1505560615000},{"_id":"source/uploads/wechatpay.jpg","hash":"3a161996a2799c83308483132ed772a52ca206f3","modified":1505560615000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1505560615000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b56c01cdfc6ee7ffea8a8a9fa149263f368caef6","modified":1505560615000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"37bd0ec1d655c601946fc5f5ac2fe8ed1e529b77","modified":1505560615000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1505560615000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1505560615000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1505560615000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1505560615000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1505560615000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1505560615000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1505560615000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1505560615000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1505560615000},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1505560615000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1505560615000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1505560615000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1505560615000},{"_id":"themes/next/layout/_layout.swig","hash":"06b1eab2e00273e0b94bd32dc682bd92c1e0a747","modified":1505560615000},{"_id":"themes/next/layout/archive.swig","hash":"383f64deab105724fd5512371963bd9e9aafbffd","modified":1505560615000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1505560615000},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1505560615000},{"_id":"themes/next/layout/page.swig","hash":"37c874cd720acf0eda8d26e063278f2b6ae8d3a6","modified":1505560615000},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1505560615000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1505560615000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1505560615000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1505560615000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1505560615000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1505560615000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1505560615000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1505560615000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505560615000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1505560615000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1505560615000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1505560615000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"53d4f83b2b7fb4387dfc9fe81519abd56fbce4ae","modified":1505560615000},{"_id":"themes/next/layout/_macro/post.swig","hash":"911363776867d9523a3e322cdf591d49cd166403","modified":1505560615000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"5d5f70deb6074cb4dd0438463e14ccf89213c282","modified":1505560615000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"faa7886ccf986890cd776f4e9d70cb89fe9fda5f","modified":1505560615000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1505560615000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"ce7094ee05878161e7568a6dfae5b56ff3fbd6e1","modified":1505560615000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1505560615000},{"_id":"themes/next/layout/_partials/head.swig","hash":"1f14d3f494b2dbbcee802fd6f6d1abd5b7e2304c","modified":1505560615000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1505560615000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1505560615000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1505560615000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1505560615000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1505560615000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1505560615000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1505560615000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1505560615000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1505560615000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1505560615000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1505560615000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1505560615000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1505560615000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1505560615000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1505560615000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1505560615000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1505560615000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1505560615000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1505560615000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1505560615000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1505560615000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1505560615000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1505560615000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1505560615000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1505560615000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1505560615000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1505560615000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1505560615000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1505560615000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1505560615000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1505560615000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1505560615000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1505560615000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1505560615000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1505560615000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1505560615000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1505560615000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505560615000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505560615000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505560615000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505560615000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505560615000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505560615000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505560615000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1505560615000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1505560615000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1505560615000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1505560615000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1505560615000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1505560615000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1505560615000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1505560615000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1505560615000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1505560615000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1505560615000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1505560615000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1505560615000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1505560615000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1505560615000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1505560615000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1505560615000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1505560615000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1505560615000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1505560615000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1505560615000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1505560615000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1505560615000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1505560615000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1505560615000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1505560615000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"ee63aa2e49507b884a2d56778479cf01c723d751","modified":1505560615000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1505560615000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1505560615000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1505560615000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1505560615000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1505560615000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"8b44a766e7127dd229c275d23ef2a0ee4fc1c8ee","modified":1505560615000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1505560615000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1505560615000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1505560615000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"eaedfaf06dae94ba77a8f4893e2e434bf8859bac","modified":1505560615000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1505560615000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"49b5210fa62d6cbc6a98f57d89d5067a06ab3561","modified":1505560615000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1505560615000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"cfee25d790e4f9b7d57f0dc7e2ea9c1649f08f11","modified":1505560615000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d477196c5699c8261b08e993a77ef67054d86166","modified":1505560615000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1505560615000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1505560615000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1505560615000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1505560615000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1505560615000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1505560615000},{"_id":"themes/next/source/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1505560615000},{"_id":"themes/next/source/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1505560615000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1505560615000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1505560615000},{"_id":"themes/next/source/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1505560615000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1505560615000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1505560615000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1501574194000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1501574194000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1505560615000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1505560615000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1505560615000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1501574194000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1505560615000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1505560615000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1505560615000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1505560615000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1505560615000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1505560615000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1505560615000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1505560615000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1505560615000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1505560615000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1505560615000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1505560615000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1505560615000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1505560615000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1505560615000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1505560615000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1505560615000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1505560615000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1505560615000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d026c8489f66ab6c12ad04bd37f1d5b6f2f3f0d1","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1505560615000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1505560615000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"2915df7152ea095a6290ef69157fd67669e0e793","modified":1505560615000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1505560615000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"86b6fd7f1b1be3ae98f8af6b23a6b1299c670ce9","modified":1505560615000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1505560615000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1505560615000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"bc8c388553bbcf95897459a466ba35bffd5ec5f0","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"65baacd5f04f292abcb7395f914d6ceba8d3405b","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1505560615000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1505560615000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1505560615000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1505560615000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1505560615000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1505560615000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1505560615000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1505560615000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1505560615000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1505560615000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ee554b1031ef0070a5916477939021800e3c9d27","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"51eca243220cf57133a4becae9b78514bcfdc723","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"65a64d5662637b66e2f039a5f58217afe7a6e800","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"45df0cf4c97b47e05573bcd41028ee50f3fdf432","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1505560615000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1505560615000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1505560615000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1505560615000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1505560615000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1505560615000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1505560615000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1505560615000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1505560615000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1505560615000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1505560615000},{"_id":"public/search.xml","hash":"312f232065baf34718d2aa5427c2e54f562fba88","modified":1505561234502},{"_id":"public/404.html","hash":"e0635b51f98daca3fd33e74c13fea697534ba581","modified":1505561234526},{"_id":"public/baidu_verify_Ocz3tW2x0D.html","hash":"dc3e589d10af74c45179db0d549b260bfe658ac3","modified":1505561234526},{"_id":"public/about/index.html","hash":"ac204c999d9728966aff234374c0e3b79bfe8356","modified":1505561234527},{"_id":"public/categories/index.html","hash":"9dcf5ec86469df6bd02c17d736d8e9cdc6aa324d","modified":1505561234527},{"_id":"public/tags/index.html","hash":"c86ef80ab5c9f7b18b5feba0d02457c4a147af03","modified":1505561234527},{"_id":"public/2017/09/15/Redis-Sentinel集群方案-单机版/index.html","hash":"35a796f822641f8d179bd6ab2a41b25a040501eb","modified":1505561234527},{"_id":"public/2017/09/12/Intellij-IDEA使用MyBatis-generator自动生成MyBatis代码/index.html","hash":"961adb647deb32ab0ea9850b16f5bf006961f54c","modified":1505561234527},{"_id":"public/2017/09/10/Redis配置 & 常规操作类封装/index.html","hash":"5360d0199107426234a7bf50ad113aa23cbfe1a3","modified":1505561234527},{"_id":"public/2017/09/10/使用AOP-实现Redis缓存注解，支持SPEL/index.html","hash":"11aefbcb1ee39b720ec64a088fb23493cb349e48","modified":1505561234528},{"_id":"public/2017/09/10/idea无法下载依赖包的source-使用maven下载source/index.html","hash":"36154440f79f3e8e0ef2711c7eb240a7668c3ebb","modified":1505561234528},{"_id":"public/2017/09/10/Spring通过ApplicationContext主动获取bean/index.html","hash":"01a590cb238582630f3ed3f80eca00e3ea27a25d","modified":1505561234528},{"_id":"public/2017/09/10/Spring3-整合MyBatis3-配置多数据源-动态选择SqlSessionFactory/index.html","hash":"f792fc2fbe7c0d35f1eb96a5bb27cf713d5b9fc5","modified":1505561234528},{"_id":"public/2017/09/05/让Mac也能拥有apt-get类似的功能——Brew/index.html","hash":"34a9a20b5b554813e4d1fe93a3b61b7b6f10ff15","modified":1505561234528},{"_id":"public/2017/09/05/两台Linux服务器之间通过SCP传输文件夹（无须密码验证）/index.html","hash":"92155c99bfa99c91b9e61043223dfbaf73b4c8b2","modified":1505561234528},{"_id":"public/2017/09/05/hello-world/index.html","hash":"3240140fe16bcd162ca99af9cf259dad39a91b9c","modified":1505561234528},{"_id":"public/archives/index.html","hash":"e5180e481275d03c56d96cf3bd2442e810f2ecdd","modified":1505561234528},{"_id":"public/archives/2017/index.html","hash":"1574c263f40b79d8bc0f45cf4036a1820af084a8","modified":1505561234528},{"_id":"public/archives/2017/09/index.html","hash":"96351ea4afdc1108deea014c6a33d49f6fd14ac9","modified":1505561234528},{"_id":"public/categories/JAVA/index.html","hash":"4f82c13ac82a60b7660a7863b323d571ce4a504a","modified":1505561234528},{"_id":"public/categories/Redis/index.html","hash":"38294c7ee4dfab46fbf6f006b78b8c962f2fcf6f","modified":1505561234528},{"_id":"public/categories/JAVA/Mybatis/index.html","hash":"779210b99458b8ad9f57506a630a22be8e6bede9","modified":1505561234528},{"_id":"public/categories/JAVA/Maven/index.html","hash":"e7a78033296b22c9ff3b4e63bd9115e580f6932f","modified":1505561234528},{"_id":"public/categories/JAVA/Spring/index.html","hash":"b79de71457c29d7d29f0a25026ef0651d975237c","modified":1505561234528},{"_id":"public/categories/随笔/index.html","hash":"7fc0433600758b7ace8c3e25c9b1639dc2ec4d01","modified":1505561234528},{"_id":"public/categories/JAVA/Redis/index.html","hash":"9568679e22dad0688d2bb234e2a9bc37e1114a72","modified":1505561234529},{"_id":"public/categories/Linux/index.html","hash":"8e97b59369370c5fc275833473248ea312d57992","modified":1505561234530},{"_id":"public/categories/Redis/Sentinel/index.html","hash":"538c8e21cf3329a56d38eff1ff21f36b1272decf","modified":1505561234531},{"_id":"public/categories/MAC-OS/index.html","hash":"55c9ce476f03967d2716d48ac8a2245eb97c974e","modified":1505561234531},{"_id":"public/categories/Linux/SCP/index.html","hash":"47c96aff5fe1ccd5901c5691dd11973f76fc792f","modified":1505561234531},{"_id":"public/categories/JAVA/Spring/AOP/index.html","hash":"29032cf897c2fbb8407eb8a9e258255a2246af7b","modified":1505561234531},{"_id":"public/index.html","hash":"1a7e719ea703696732fa7fe1c9bc9b360e918253","modified":1505561234531},{"_id":"public/tags/IDEA/index.html","hash":"452aaf579509aa7c4afec9880d20c1b4a6cf6dfa","modified":1505561234531},{"_id":"public/tags/Maven/index.html","hash":"d1abcf4b110fa64472f25a55f4aa5d1ee634bb05","modified":1505561234531},{"_id":"public/tags/MyBatis/index.html","hash":"f5365a7bad9afbd556475c24c26ecf365d54b212","modified":1505561234531},{"_id":"public/tags/JAVA/index.html","hash":"784701219f3f3453d8c63c6fb3274c4229f4d04a","modified":1505561234531},{"_id":"public/tags/Redis/index.html","hash":"b997416e1d9f2c05d25629355985676e8f093723","modified":1505561234531},{"_id":"public/tags/Sentinel/index.html","hash":"7c613919613ac71cd0154e9c939abc179390e6d3","modified":1505561234531},{"_id":"public/tags/Redis-集群/index.html","hash":"e49c996ea5ae6c1028c5f41ef788203e7cf83e2a","modified":1505561234531},{"_id":"public/tags/Spring/index.html","hash":"2bbb81f30f6b1aa09b7073837e008c150e4c72a9","modified":1505561234531},{"_id":"public/tags/Mybatis/index.html","hash":"4dbc5ea4af721d178ef3bf94421569b0c7ae76f2","modified":1505561234531},{"_id":"public/tags/HEXO/index.html","hash":"0f0baa9160dab2e52b8e0ee43e7d6c4dc89f1384","modified":1505561234531},{"_id":"public/tags/Linux/index.html","hash":"895fb04d9dae480c81c40a5ea48efa1ec0bd5dbe","modified":1505561234531},{"_id":"public/tags/SCP/index.html","hash":"fa248141bc2b7b3cf2e5f60baf4876e1d40853e3","modified":1505561234531},{"_id":"public/tags/AOP/index.html","hash":"0dab49ef75bfe4ea26e5a5864ab5334de7f95d65","modified":1505561234531},{"_id":"public/tags/MAC-OS/index.html","hash":"b0ec9735a97735d80f112dc27339e39e3f8a7638","modified":1505561234531},{"_id":"public/tags/Brew/index.html","hash":"cde58483158c94f19f0cbb1bc27909210f12c56f","modified":1505561234531}],"Category":[{"name":"JAVA","_id":"cj7n84lkd0006zxrx1598ot66"},{"name":"Redis","_id":"cj7n84lkq000fzxrxrcik1ywr"},{"name":"Mybatis","parent":"cj7n84lkd0006zxrx1598ot66","_id":"cj7n84lkv000kzxrxol0d53n8"},{"name":"Maven","parent":"cj7n84lkd0006zxrx1598ot66","_id":"cj7n84lkz000pzxrxz7j1i46h"},{"name":"Spring","parent":"cj7n84lkd0006zxrx1598ot66","_id":"cj7n84ll0000uzxrxb9ejuqb8"},{"name":"随笔","_id":"cj7n84ll20010zxrxyftspf7q"},{"name":"Redis","parent":"cj7n84lkd0006zxrx1598ot66","_id":"cj7n84ll30014zxrxkdehjack"},{"name":"Linux","_id":"cj7n84ll4001dzxrxa5og02yw"},{"name":"Sentinel","parent":"cj7n84lkq000fzxrxrcik1ywr","_id":"cj7n84ll5001izxrxpsudqryw"},{"name":"MAC OS","_id":"cj7n84llb001qzxrx5v9qwpoz"},{"name":"SCP","parent":"cj7n84ll4001dzxrxa5og02yw","_id":"cj7n84lld001vzxrxvdbgo0w4"},{"name":"AOP","parent":"cj7n84ll0000uzxrxb9ejuqb8","_id":"cj7n84lle0020zxrx6dookm13"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2017-09-16T11:16:55.000Z","updated":"2017-09-16T11:16:55.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cj7n84lig0000zxrxw1ewb0ig","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>"},{"_content":"Ocz3tW2x0D","source":"baidu_verify_Ocz3tW2x0D.html","raw":"Ocz3tW2x0D","date":"2017-09-16T11:16:55.000Z","updated":"2017-09-16T11:16:55.000Z","path":"baidu_verify_Ocz3tW2x0D.html","title":"","comments":1,"layout":"page","_id":"cj7n84lii0001zxrx5ftakrb2","content":"Ocz3tW2x0D","site":{"data":{}},"excerpt":"","more":"Ocz3tW2x0D"},{"title":"about","date":"2017-09-05T08:32:08.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-09-05 16:32:08\n---\n","updated":"2017-09-16T11:16:55.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj7n84lka0003zxrx4g6fggfe","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2017-09-05T06:10:02.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-09-05 14:10:02\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-09-16T11:16:55.000Z","path":"categories/index.html","layout":"page","_id":"cj7n84lkc0005zxrxqq6v0oxl","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","type":"tags","date":"2017-09-05T06:04:31.000Z","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ntype: \"tags\"\ndate: 2017-09-05 14:04:31\ncomments: false\n---\n","updated":"2017-09-16T11:16:55.000Z","path":"tags/index.html","layout":"page","_id":"cj7n84lrb002mzxrx9rm6zvij","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Intellij IDEA使用MyBatis-generator自动生成MyBatis代码","date":"2017-09-12T06:07:12.000Z","_content":"\n# STEP 1. 新增maven插件\n在maven项目的pom.xml 添加mybatis-generator-maven-plugin 插件\n```xml\n<build>  \n  <finalName>xxx</finalName>  \n  <plugins>  \n    <plugin>  \n      <groupId>org.mybatis.generator</groupId>  \n      <artifactId>mybatis-generator-maven-plugin</artifactId>  \n      <version>1.3.2</version>  \n      <configuration>  \n        <verbose>true</verbose>  \n        <overwrite>true</overwrite>  \n      </configuration>  \n    </plugin>  \n  </plugins>  \n</build>  \n```\n\n<!-- more -->\n\n# STEP 2. 新建generatorConfig.xml的配置文件\n在maven项目下的src/main/resources 目录下建立名为 generatorConfig.xml的配置文件，作为mybatis-generator-maven-plugin 插件的执行目标，模板如下：\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<!DOCTYPE generatorConfiguration  \n        PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"  \n        \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\">  \n<generatorConfiguration>  \n    <!--导入属性配置 -->  \n    <properties resource=\"generator.properties\"></properties>  \n  \n    <!--指定特定数据库的jdbc驱动jar包的位置 -->  \n    <classPathEntry location=\"${jdbc.driverLocation}\"/>  \n  \n    <context id=\"default\" targetRuntime=\"MyBatis3\">  \n  \n  \n        <!-- optional，旨在创建class时，对注释进行控制 -->  \n        <commentGenerator>  \n            <property name=\"suppressDate\" value=\"true\" />  \n        </commentGenerator>  \n  \n  \n        <!--jdbc的数据库连接 -->  \n        <jdbcConnection driverClass=\"${jdbc.driverClass}\" connectionURL=\"${jdbc.connectionURL}\" userId=\"${jdbc.userId}\" password=\"${jdbc.password}\">  \n        </jdbcConnection>  \n  \n  \n  \n        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->  \n        <javaTypeResolver >  \n            <property name=\"forceBigDecimals\" value=\"false\" />  \n        </javaTypeResolver>  \n  \n        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类  \n            targetPackage     指定生成的model生成所在的包名  \n            targetProject     指定在该项目下所在的路径  \n        -->  \n        <javaModelGenerator targetPackage=\"org.louis.hometutor.po\" targetProject=\"src/main/java\">  \n            <!-- 是否对model添加 构造函数 -->  \n            <property name=\"constructorBased\" value=\"true\"/>  \n  \n            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->  \n            <property name=\"enableSubPackages\" value=\"false\"/>  \n  \n            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->  \n            <property name=\"immutable\" value=\"true\"/>  \n  \n            <!-- 给Model添加一个父类 -->  \n            <property name=\"rootClass\" value=\"com.foo.louis.Hello\"/>  \n  \n            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->  \n            <property name=\"trimStrings\" value=\"true\"/>  \n        </javaModelGenerator>  \n  \n        <!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->  \n        <sqlMapGenerator targetPackage=\"org.louis.hometutor.domain\" targetProject=\"src/main/java\">  \n            <property name=\"enableSubPackages\" value=\"false\"/>  \n        </sqlMapGenerator>  \n  \n  \n        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码  \n                type=\"ANNOTATEDMAPPER\",生成Java Model 和基于注解的Mapper对象  \n                type=\"MIXEDMAPPER\",生成基于注解的Java Model 和相应的Mapper对象  \n                type=\"XMLMAPPER\",生成SQLMap XML文件和独立的Mapper接口  \n        -->  \n        <javaClientGenerator targetPackage=\"com.foo.tourist.dao\" targetProject=\"src/main/java\" type=\"MIXEDMAPPER\">  \n            <property name=\"enableSubPackages\" value=\"\"/>  \n            <!--  \n                    定义Maper.java 源代码中的ByExample() 方法的可视性，可选的值有：  \n                    public;  \n                    private;  \n                    protected;  \n                    default  \n                    注意：如果 targetRuntime=\"MyBatis3\",此参数被忽略  \n             -->  \n            <property name=\"exampleMethodVisibility\" value=\"\"/>  \n            <!--  \n                                           方法名计数器  \n              Important note: this property is ignored if the target runtime is MyBatis3.  \n             -->  \n            <property name=\"methodNameCalculator\" value=\"\"/>  \n  \n            <!-- \n                                                为生成的接口添加父接口 \n             -->  \n            <property name=\"rootInterface\" value=\"\"/>  \n  \n        </javaClientGenerator>  \n  \n  \n  \n        <table tableName=\"lession\" schema=\"louis\">  \n  \n            <!-- optional   , only for mybatis3 runtime  \n                 自动生成的键值（identity,或者序列值）  \n               如果指定此元素，MBG将会生成<selectKey>元素，然后将此元素插入到SQL Map的<insert> 元素之中  \n               sqlStatement 的语句将会返回新的值  \n               如果是一个自增主键的话，你可以使用预定义的语句,或者添加自定义的SQL语句. 预定义的值如下:  \n                  Cloudscape    This will translate to: VALUES IDENTITY_VAL_LOCAL()  \n                  DB2:      VALUES IDENTITY_VAL_LOCAL()  \n                  DB2_MF:       SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1  \n                  Derby:        VALUES IDENTITY_VAL_LOCAL()  \n                  HSQLDB:   CALL IDENTITY()  \n                  Informix:     select dbinfo('sqlca.sqlerrd1') from systables where tabid=1  \n                  MySql:        SELECT LAST_INSERT_ID()  \n                  SqlServer:    SELECT SCOPE_IDENTITY()  \n                  SYBASE:   SELECT @@IDENTITY  \n                  JDBC:     This will configure MBG to generate code for MyBatis3 suport of JDBC standard generated keys. This is a database independent method of obtaining the value from identity columns.  \n                  identity: 自增主键  If true, then the column is flagged as an identity column and the generated <selectKey> element will be placed after the insert (for an identity column). If false, then the generated <selectKey> will be placed before the insert (typically for a sequence).  \n  \n            -->  \n            <generatedKey column=\"\" sqlStatement=\"\" identity=\"\" type=\"\"/>  \n  \n  \n            <!-- optional.  \n                    列的命名规则：  \n                    MBG使用 <columnRenamingRule> 元素在计算列名的对应 名称之前，先对列名进行重命名，  \n                    作用：一般需要对BUSI_CLIENT_NO 前的BUSI_进行过滤  \n                    支持正在表达式  \n                     searchString 表示要被换掉的字符串  \n                     replaceString 则是要换成的字符串，默认情况下为空字符串，可选  \n            -->  \n            <columnRenamingRule searchString=\"\" replaceString=\"\"/>  \n  \n  \n  \n            <!-- optional.告诉 MBG 忽略某一列  \n                    column，需要忽略的列  \n                    delimitedColumnName:true ,匹配column的值和数据库列的名称 大小写完全匹配，false 忽略大小写匹配  \n                    是否限定表的列名，即固定表列在Model中的名称  \n            -->  \n            <ignoreColumn column=\"PLAN_ID\"  delimitedColumnName=\"true\" />  \n  \n  \n            <!--optional.覆盖MBG对Model 的生成规则  \n                 column: 数据库的列名  \n                 javaType: 对应的Java数据类型的完全限定名  \n                 在必要的时候可以覆盖由JavaTypeResolver计算得到的java数据类型. For some databases, this is necessary to handle \"odd\" database types (e.g. MySql's unsigned bigint type should be mapped to java.lang.Object).  \n                 jdbcType:该列的JDBC数据类型(INTEGER, DECIMAL, NUMERIC, VARCHAR, etc.)，该列可以覆盖由JavaTypeResolver计算得到的Jdbc类型，对某些数据库而言，对于处理特定的JDBC 驱动癖好 很有必要(e.g. DB2's LONGVARCHAR type should be mapped to VARCHAR for iBATIS).  \n                 typeHandler:  \n  \n            -->  \n            <columnOverride column=\"\" javaType=\"\"    jdbcType=\"\" typeHandler=\"\"  delimitedColumnName=\"\" />  \n  \n        </table>  \n    </context>  \n</generatorConfiguration>\n```\n\n## 配置文件generator.properties属性文件\n这里使用了外置的配置文件generator.properties，可以将一下属性配置到properties文件之中，增加配置的灵活性：\n```\njdbc.driverLocation=D:\\\\maven\\\\com\\\\oracle\\\\ojdbc14\\\\10.2.0.4.0\\\\ojdbc14-10.2.0.4.0.jar  \njdbc.driverClass=oracle.jdbc.driver.OracleDriver  \njdbc.connectionURL=jdbc:oracle:thin:@//localhost:1521/XE  \njdbc.userId=LOUIS  \njdbc.password=123456  \n```\n## 项目目录\n\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_38.jpg)\n\n# STEP 3. 新增maven运行选项\n在Intellij IDEA添加一个“Run运行”选项，使用maven运行mybatis-generator-maven-plugin插件 ：\n![步骤1](http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_39.jpg)\n\n![步骤2](http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_40-1.jpg)\n\n之后弹出运行配置框，为当前配置配置一个名称，这里其名为\"generator\",然后在 “Command line” 选项中输入“`mybatis-generator:generate  -e`”\n\n这里加了“-e ”选项是为了让该插件输出详细信息，这样可以帮助我们定位问题。\n![步骤3](http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-061534.jpg)\n\n![步骤4](http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-061541.jpg)\n\n如果添加成功，则会在run 选项中有“generator” 选项，如下：\n![步骤5](http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_41-1.jpg)\n\n点击运行，然后不出意外的话，会在控制台输出：\n```\nC:\\Java\\jdk1.7.0_71\\bin\\java -Dmaven.home=D:\\software\\apache-maven-3.0.5-bin -Dclassworlds.conf=D:\\software\\apache-maven-3.0.5-bin\\bin\\m2.conf -Didea.launcher.port=7533 \"-Didea.launcher.bin.path=D:\\applications\\JetBrains\\IntelliJ IDEA 14.0.2\\bin\" -Dfile.encoding=UTF-8 -classpath \"D:\\software\\apache-maven-3.0.5-bin\\boot\\plexus-classworlds-2.4.jar;D:\\applications\\JetBrains\\IntelliJ IDEA 14.0.2\\lib\\idea_rt.jar\" com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher -Didea.version=14.0.2 -s D:\\software\\apache-maven-3.0.5-bin\\conf\\settings.xml mybatis-generator:generate -e  \n[INFO] Error stacktraces are turned on.  \n[INFO] Scanning for projects...  \n[INFO]                                                                           \n[INFO] ------------------------------------------------------------------------  \n[INFO] Building hometutor Maven Webapp 1.0-SNAPSHOT  \n[INFO] ------------------------------------------------------------------------  \n[INFO]   \n[INFO] --- mybatis-generator-maven-plugin:1.3.2:generate (default-cli) @ hometutor ---  \n[INFO] Connecting to the Database  \n[INFO] Introspecting table louis.lession  \nlog4j:WARN No appenders could be found for logger (org.mybatis.generator.internal.db.DatabaseIntrospector).  \nlog4j:WARN Please initialize the log4j system properly.  \nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.  \n[INFO] Generating Example class for table LOUIS.LESSION  \n[INFO] Generating Record class for table LOUIS.LESSION  \n[INFO] Generating Mapper Interface for table LOUIS.LESSION  \n[INFO] Generating SQL Map for table LOUIS.LESSION  \n[INFO] Saving file LessionMapper.xml  \n[INFO] Saving file LessionExample.java  \n[INFO] Saving file Lession.java  \n[INFO] Saving file LessionMapper.java  \n[WARNING] Root class com.foo.louis.Hello cannot be loaded, checking for member overrides is disabled for this class   \n[WARNING] Existing file E:\\sources\\tutor\\src\\main\\java\\org\\louis\\hometutor\\po\\Lession.java was overwritten  \n[WARNING] Existing file E:\\sources\\tutor\\src\\main\\java\\com\\foo\\tourist\\dao\\LessionMapper.java was overwritten  \n[INFO] ------------------------------------------------------------------------  \n[INFO] BUILD SUCCESS  \n[INFO] ------------------------------------------------------------------------  \n[INFO] Total time: 2.334s  \n[INFO] Finished at: Tue Jan 27 12:04:08 CST 2015  \n[INFO] Final Memory: 8M/107M  \n[INFO] ------------------------------------------------------------------------  \n  \nProcess finished with exit code 0  \n```\n好，看到BUILD SUCCESS，则大功告成，如果有错误的话，由于添加了-e 选项，会把具体的详细错误信息打印出来的，根据错误信息修改即可\n\n","source":"_posts/Intellij-IDEA使用MyBatis-generator自动生成MyBatis代码.md","raw":"---\ntitle: Intellij IDEA使用MyBatis-generator自动生成MyBatis代码\ndate: 2017-09-12 14:07:12\ntags:\n- IDEA\n- Maven\n- MyBatis\ncategories: \n- JAVA\n- Maven\n---\n\n# STEP 1. 新增maven插件\n在maven项目的pom.xml 添加mybatis-generator-maven-plugin 插件\n```xml\n<build>  \n  <finalName>xxx</finalName>  \n  <plugins>  \n    <plugin>  \n      <groupId>org.mybatis.generator</groupId>  \n      <artifactId>mybatis-generator-maven-plugin</artifactId>  \n      <version>1.3.2</version>  \n      <configuration>  \n        <verbose>true</verbose>  \n        <overwrite>true</overwrite>  \n      </configuration>  \n    </plugin>  \n  </plugins>  \n</build>  \n```\n\n<!-- more -->\n\n# STEP 2. 新建generatorConfig.xml的配置文件\n在maven项目下的src/main/resources 目录下建立名为 generatorConfig.xml的配置文件，作为mybatis-generator-maven-plugin 插件的执行目标，模板如下：\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<!DOCTYPE generatorConfiguration  \n        PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"  \n        \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\">  \n<generatorConfiguration>  \n    <!--导入属性配置 -->  \n    <properties resource=\"generator.properties\"></properties>  \n  \n    <!--指定特定数据库的jdbc驱动jar包的位置 -->  \n    <classPathEntry location=\"${jdbc.driverLocation}\"/>  \n  \n    <context id=\"default\" targetRuntime=\"MyBatis3\">  \n  \n  \n        <!-- optional，旨在创建class时，对注释进行控制 -->  \n        <commentGenerator>  \n            <property name=\"suppressDate\" value=\"true\" />  \n        </commentGenerator>  \n  \n  \n        <!--jdbc的数据库连接 -->  \n        <jdbcConnection driverClass=\"${jdbc.driverClass}\" connectionURL=\"${jdbc.connectionURL}\" userId=\"${jdbc.userId}\" password=\"${jdbc.password}\">  \n        </jdbcConnection>  \n  \n  \n  \n        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->  \n        <javaTypeResolver >  \n            <property name=\"forceBigDecimals\" value=\"false\" />  \n        </javaTypeResolver>  \n  \n        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类  \n            targetPackage     指定生成的model生成所在的包名  \n            targetProject     指定在该项目下所在的路径  \n        -->  \n        <javaModelGenerator targetPackage=\"org.louis.hometutor.po\" targetProject=\"src/main/java\">  \n            <!-- 是否对model添加 构造函数 -->  \n            <property name=\"constructorBased\" value=\"true\"/>  \n  \n            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->  \n            <property name=\"enableSubPackages\" value=\"false\"/>  \n  \n            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->  \n            <property name=\"immutable\" value=\"true\"/>  \n  \n            <!-- 给Model添加一个父类 -->  \n            <property name=\"rootClass\" value=\"com.foo.louis.Hello\"/>  \n  \n            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->  \n            <property name=\"trimStrings\" value=\"true\"/>  \n        </javaModelGenerator>  \n  \n        <!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->  \n        <sqlMapGenerator targetPackage=\"org.louis.hometutor.domain\" targetProject=\"src/main/java\">  \n            <property name=\"enableSubPackages\" value=\"false\"/>  \n        </sqlMapGenerator>  \n  \n  \n        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码  \n                type=\"ANNOTATEDMAPPER\",生成Java Model 和基于注解的Mapper对象  \n                type=\"MIXEDMAPPER\",生成基于注解的Java Model 和相应的Mapper对象  \n                type=\"XMLMAPPER\",生成SQLMap XML文件和独立的Mapper接口  \n        -->  \n        <javaClientGenerator targetPackage=\"com.foo.tourist.dao\" targetProject=\"src/main/java\" type=\"MIXEDMAPPER\">  \n            <property name=\"enableSubPackages\" value=\"\"/>  \n            <!--  \n                    定义Maper.java 源代码中的ByExample() 方法的可视性，可选的值有：  \n                    public;  \n                    private;  \n                    protected;  \n                    default  \n                    注意：如果 targetRuntime=\"MyBatis3\",此参数被忽略  \n             -->  \n            <property name=\"exampleMethodVisibility\" value=\"\"/>  \n            <!--  \n                                           方法名计数器  \n              Important note: this property is ignored if the target runtime is MyBatis3.  \n             -->  \n            <property name=\"methodNameCalculator\" value=\"\"/>  \n  \n            <!-- \n                                                为生成的接口添加父接口 \n             -->  \n            <property name=\"rootInterface\" value=\"\"/>  \n  \n        </javaClientGenerator>  \n  \n  \n  \n        <table tableName=\"lession\" schema=\"louis\">  \n  \n            <!-- optional   , only for mybatis3 runtime  \n                 自动生成的键值（identity,或者序列值）  \n               如果指定此元素，MBG将会生成<selectKey>元素，然后将此元素插入到SQL Map的<insert> 元素之中  \n               sqlStatement 的语句将会返回新的值  \n               如果是一个自增主键的话，你可以使用预定义的语句,或者添加自定义的SQL语句. 预定义的值如下:  \n                  Cloudscape    This will translate to: VALUES IDENTITY_VAL_LOCAL()  \n                  DB2:      VALUES IDENTITY_VAL_LOCAL()  \n                  DB2_MF:       SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1  \n                  Derby:        VALUES IDENTITY_VAL_LOCAL()  \n                  HSQLDB:   CALL IDENTITY()  \n                  Informix:     select dbinfo('sqlca.sqlerrd1') from systables where tabid=1  \n                  MySql:        SELECT LAST_INSERT_ID()  \n                  SqlServer:    SELECT SCOPE_IDENTITY()  \n                  SYBASE:   SELECT @@IDENTITY  \n                  JDBC:     This will configure MBG to generate code for MyBatis3 suport of JDBC standard generated keys. This is a database independent method of obtaining the value from identity columns.  \n                  identity: 自增主键  If true, then the column is flagged as an identity column and the generated <selectKey> element will be placed after the insert (for an identity column). If false, then the generated <selectKey> will be placed before the insert (typically for a sequence).  \n  \n            -->  \n            <generatedKey column=\"\" sqlStatement=\"\" identity=\"\" type=\"\"/>  \n  \n  \n            <!-- optional.  \n                    列的命名规则：  \n                    MBG使用 <columnRenamingRule> 元素在计算列名的对应 名称之前，先对列名进行重命名，  \n                    作用：一般需要对BUSI_CLIENT_NO 前的BUSI_进行过滤  \n                    支持正在表达式  \n                     searchString 表示要被换掉的字符串  \n                     replaceString 则是要换成的字符串，默认情况下为空字符串，可选  \n            -->  \n            <columnRenamingRule searchString=\"\" replaceString=\"\"/>  \n  \n  \n  \n            <!-- optional.告诉 MBG 忽略某一列  \n                    column，需要忽略的列  \n                    delimitedColumnName:true ,匹配column的值和数据库列的名称 大小写完全匹配，false 忽略大小写匹配  \n                    是否限定表的列名，即固定表列在Model中的名称  \n            -->  \n            <ignoreColumn column=\"PLAN_ID\"  delimitedColumnName=\"true\" />  \n  \n  \n            <!--optional.覆盖MBG对Model 的生成规则  \n                 column: 数据库的列名  \n                 javaType: 对应的Java数据类型的完全限定名  \n                 在必要的时候可以覆盖由JavaTypeResolver计算得到的java数据类型. For some databases, this is necessary to handle \"odd\" database types (e.g. MySql's unsigned bigint type should be mapped to java.lang.Object).  \n                 jdbcType:该列的JDBC数据类型(INTEGER, DECIMAL, NUMERIC, VARCHAR, etc.)，该列可以覆盖由JavaTypeResolver计算得到的Jdbc类型，对某些数据库而言，对于处理特定的JDBC 驱动癖好 很有必要(e.g. DB2's LONGVARCHAR type should be mapped to VARCHAR for iBATIS).  \n                 typeHandler:  \n  \n            -->  \n            <columnOverride column=\"\" javaType=\"\"    jdbcType=\"\" typeHandler=\"\"  delimitedColumnName=\"\" />  \n  \n        </table>  \n    </context>  \n</generatorConfiguration>\n```\n\n## 配置文件generator.properties属性文件\n这里使用了外置的配置文件generator.properties，可以将一下属性配置到properties文件之中，增加配置的灵活性：\n```\njdbc.driverLocation=D:\\\\maven\\\\com\\\\oracle\\\\ojdbc14\\\\10.2.0.4.0\\\\ojdbc14-10.2.0.4.0.jar  \njdbc.driverClass=oracle.jdbc.driver.OracleDriver  \njdbc.connectionURL=jdbc:oracle:thin:@//localhost:1521/XE  \njdbc.userId=LOUIS  \njdbc.password=123456  \n```\n## 项目目录\n\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_38.jpg)\n\n# STEP 3. 新增maven运行选项\n在Intellij IDEA添加一个“Run运行”选项，使用maven运行mybatis-generator-maven-plugin插件 ：\n![步骤1](http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_39.jpg)\n\n![步骤2](http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_40-1.jpg)\n\n之后弹出运行配置框，为当前配置配置一个名称，这里其名为\"generator\",然后在 “Command line” 选项中输入“`mybatis-generator:generate  -e`”\n\n这里加了“-e ”选项是为了让该插件输出详细信息，这样可以帮助我们定位问题。\n![步骤3](http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-061534.jpg)\n\n![步骤4](http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-061541.jpg)\n\n如果添加成功，则会在run 选项中有“generator” 选项，如下：\n![步骤5](http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_41-1.jpg)\n\n点击运行，然后不出意外的话，会在控制台输出：\n```\nC:\\Java\\jdk1.7.0_71\\bin\\java -Dmaven.home=D:\\software\\apache-maven-3.0.5-bin -Dclassworlds.conf=D:\\software\\apache-maven-3.0.5-bin\\bin\\m2.conf -Didea.launcher.port=7533 \"-Didea.launcher.bin.path=D:\\applications\\JetBrains\\IntelliJ IDEA 14.0.2\\bin\" -Dfile.encoding=UTF-8 -classpath \"D:\\software\\apache-maven-3.0.5-bin\\boot\\plexus-classworlds-2.4.jar;D:\\applications\\JetBrains\\IntelliJ IDEA 14.0.2\\lib\\idea_rt.jar\" com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher -Didea.version=14.0.2 -s D:\\software\\apache-maven-3.0.5-bin\\conf\\settings.xml mybatis-generator:generate -e  \n[INFO] Error stacktraces are turned on.  \n[INFO] Scanning for projects...  \n[INFO]                                                                           \n[INFO] ------------------------------------------------------------------------  \n[INFO] Building hometutor Maven Webapp 1.0-SNAPSHOT  \n[INFO] ------------------------------------------------------------------------  \n[INFO]   \n[INFO] --- mybatis-generator-maven-plugin:1.3.2:generate (default-cli) @ hometutor ---  \n[INFO] Connecting to the Database  \n[INFO] Introspecting table louis.lession  \nlog4j:WARN No appenders could be found for logger (org.mybatis.generator.internal.db.DatabaseIntrospector).  \nlog4j:WARN Please initialize the log4j system properly.  \nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.  \n[INFO] Generating Example class for table LOUIS.LESSION  \n[INFO] Generating Record class for table LOUIS.LESSION  \n[INFO] Generating Mapper Interface for table LOUIS.LESSION  \n[INFO] Generating SQL Map for table LOUIS.LESSION  \n[INFO] Saving file LessionMapper.xml  \n[INFO] Saving file LessionExample.java  \n[INFO] Saving file Lession.java  \n[INFO] Saving file LessionMapper.java  \n[WARNING] Root class com.foo.louis.Hello cannot be loaded, checking for member overrides is disabled for this class   \n[WARNING] Existing file E:\\sources\\tutor\\src\\main\\java\\org\\louis\\hometutor\\po\\Lession.java was overwritten  \n[WARNING] Existing file E:\\sources\\tutor\\src\\main\\java\\com\\foo\\tourist\\dao\\LessionMapper.java was overwritten  \n[INFO] ------------------------------------------------------------------------  \n[INFO] BUILD SUCCESS  \n[INFO] ------------------------------------------------------------------------  \n[INFO] Total time: 2.334s  \n[INFO] Finished at: Tue Jan 27 12:04:08 CST 2015  \n[INFO] Final Memory: 8M/107M  \n[INFO] ------------------------------------------------------------------------  \n  \nProcess finished with exit code 0  \n```\n好，看到BUILD SUCCESS，则大功告成，如果有错误的话，由于添加了-e 选项，会把具体的详细错误信息打印出来的，根据错误信息修改即可\n\n","slug":"Intellij-IDEA使用MyBatis-generator自动生成MyBatis代码","published":1,"updated":"2017-09-16T11:16:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7n84lk30002zxrxctq8k01b","content":"<h1 id=\"STEP-1-新增maven插件\"><a href=\"#STEP-1-新增maven插件\" class=\"headerlink\" title=\"STEP 1. 新增maven插件\"></a>STEP 1. 新增maven插件</h1><p>在maven项目的pom.xml 添加mybatis-generator-maven-plugin 插件<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span>  </div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">finalName</span>&gt;</span>xxx<span class=\"tag\">&lt;/<span class=\"name\">finalName</span>&gt;</span>  </div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.generator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">verbose</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">verbose</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">overwrite</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">overwrite</span>&gt;</span>  </div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h1 id=\"STEP-2-新建generatorConfig-xml的配置文件\"><a href=\"#STEP-2-新建generatorConfig-xml的配置文件\" class=\"headerlink\" title=\"STEP 2. 新建generatorConfig.xml的配置文件\"></a>STEP 2. 新建generatorConfig.xml的配置文件</h1><p>在maven项目下的src/main/resources 目录下建立名为 generatorConfig.xml的配置文件，作为mybatis-generator-maven-plugin 插件的执行目标，模板如下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;  </div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE generatorConfiguration  </span></div><div class=\"line\"><span class=\"meta\">        PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"  </span></div><div class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">generatorConfiguration</span>&gt;</span>  </div><div class=\"line\">    <span class=\"comment\">&lt;!--导入属性配置 --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"generator.properties\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"comment\">&lt;!--指定特定数据库的jdbc驱动jar包的位置 --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">classPathEntry</span> <span class=\"attr\">location</span>=<span class=\"string\">\"$&#123;jdbc.driverLocation&#125;\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context</span> <span class=\"attr\">id</span>=<span class=\"string\">\"default\"</span> <span class=\"attr\">targetRuntime</span>=<span class=\"string\">\"MyBatis3\"</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- optional，旨在创建class时，对注释进行控制 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">commentGenerator</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"suppressDate\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">commentGenerator</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"comment\">&lt;!--jdbc的数据库连接 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jdbcConnection</span> <span class=\"attr\">driverClass</span>=<span class=\"string\">\"$&#123;jdbc.driverClass&#125;\"</span> <span class=\"attr\">connectionURL</span>=<span class=\"string\">\"$&#123;jdbc.connectionURL&#125;\"</span> <span class=\"attr\">userId</span>=<span class=\"string\">\"$&#123;jdbc.userId&#125;\"</span> <span class=\"attr\">password</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">jdbcConnection</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制--&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaTypeResolver</span> &gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"forceBigDecimals\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaTypeResolver</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类  </span></div><div class=\"line\"><span class=\"comment\">            targetPackage     指定生成的model生成所在的包名  </span></div><div class=\"line\"><span class=\"comment\">            targetProject     指定在该项目下所在的路径  </span></div><div class=\"line\"><span class=\"comment\">        --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaModelGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"org.louis.hometutor.po\"</span> <span class=\"attr\">targetProject</span>=<span class=\"string\">\"src/main/java\"</span>&gt;</span>  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- 是否对model添加 构造函数 --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"constructorBased\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- 是否允许子包，即targetPackage.schemaName.tableName --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"immutable\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- 给Model添加一个父类 --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"rootClass\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.foo.louis.Hello\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- 是否对类CHAR类型的列的数据进行trim操作 --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"trimStrings\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaModelGenerator</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"comment\">&lt;!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sqlMapGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"org.louis.hometutor.domain\"</span> <span class=\"attr\">targetProject</span>=<span class=\"string\">\"src/main/java\"</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sqlMapGenerator</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码  </span></div><div class=\"line\"><span class=\"comment\">                type=\"ANNOTATEDMAPPER\",生成Java Model 和基于注解的Mapper对象  </span></div><div class=\"line\"><span class=\"comment\">                type=\"MIXEDMAPPER\",生成基于注解的Java Model 和相应的Mapper对象  </span></div><div class=\"line\"><span class=\"comment\">                type=\"XMLMAPPER\",生成SQLMap XML文件和独立的Mapper接口  </span></div><div class=\"line\"><span class=\"comment\">        --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaClientGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"com.foo.tourist.dao\"</span> <span class=\"attr\">targetProject</span>=<span class=\"string\">\"src/main/java\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"MIXEDMAPPER\"</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>/&gt;</span>  </div><div class=\"line\">            <span class=\"comment\">&lt;!--  </span></div><div class=\"line\"><span class=\"comment\">                    定义Maper.java 源代码中的ByExample() 方法的可视性，可选的值有：  </span></div><div class=\"line\"><span class=\"comment\">                    public;  </span></div><div class=\"line\"><span class=\"comment\">                    private;  </span></div><div class=\"line\"><span class=\"comment\">                    protected;  </span></div><div class=\"line\"><span class=\"comment\">                    default  </span></div><div class=\"line\"><span class=\"comment\">                    注意：如果 targetRuntime=\"MyBatis3\",此参数被忽略  </span></div><div class=\"line\"><span class=\"comment\">             --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"exampleMethodVisibility\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>/&gt;</span>  </div><div class=\"line\">            <span class=\"comment\">&lt;!--  </span></div><div class=\"line\"><span class=\"comment\">                                           方法名计数器  </span></div><div class=\"line\"><span class=\"comment\">              Important <span class=\"doctag\">note:</span> this property is ignored if the target runtime is MyBatis3.  </span></div><div class=\"line\"><span class=\"comment\">             --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"methodNameCalculator\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- </span></div><div class=\"line\"><span class=\"comment\">                                                为生成的接口添加父接口 </span></div><div class=\"line\"><span class=\"comment\">             --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"rootInterface\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaClientGenerator</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"lession\"</span> <span class=\"attr\">schema</span>=<span class=\"string\">\"louis\"</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- optional   , only for mybatis3 runtime  </span></div><div class=\"line\"><span class=\"comment\">                 自动生成的键值（identity,或者序列值）  </span></div><div class=\"line\"><span class=\"comment\">               如果指定此元素，MBG将会生成&lt;selectKey&gt;元素，然后将此元素插入到SQL Map的&lt;insert&gt; 元素之中  </span></div><div class=\"line\"><span class=\"comment\">               sqlStatement 的语句将会返回新的值  </span></div><div class=\"line\"><span class=\"comment\">               如果是一个自增主键的话，你可以使用预定义的语句,或者添加自定义的SQL语句. 预定义的值如下:  </span></div><div class=\"line\"><span class=\"comment\">                  Cloudscape    This will translate to: VALUES IDENTITY_VAL_LOCAL()  </span></div><div class=\"line\"><span class=\"comment\">                  DB2:      VALUES IDENTITY_VAL_LOCAL()  </span></div><div class=\"line\"><span class=\"comment\">                  DB2_MF:       SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1  </span></div><div class=\"line\"><span class=\"comment\">                  Derby:        VALUES IDENTITY_VAL_LOCAL()  </span></div><div class=\"line\"><span class=\"comment\">                  HSQLDB:   CALL IDENTITY()  </span></div><div class=\"line\"><span class=\"comment\">                  Informix:     select dbinfo('sqlca.sqlerrd1') from systables where tabid=1  </span></div><div class=\"line\"><span class=\"comment\">                  MySql:        SELECT LAST_INSERT_ID()  </span></div><div class=\"line\"><span class=\"comment\">                  SqlServer:    SELECT SCOPE_IDENTITY()  </span></div><div class=\"line\"><span class=\"comment\">                  SYBASE:   SELECT @@IDENTITY  </span></div><div class=\"line\"><span class=\"comment\">                  JDBC:     This will configure MBG to generate code for MyBatis3 suport of JDBC standard generated keys. This is a database independent method of obtaining the value from identity columns.  </span></div><div class=\"line\"><span class=\"comment\">                  identity: 自增主键  If true, then the column is flagged as an identity column and the generated &lt;selectKey&gt; element will be placed after the insert (for an identity column). If false, then the generated &lt;selectKey&gt; will be placed before the insert (typically for a sequence).  </span></div><div class=\"line\"><span class=\"comment\">  </span></div><div class=\"line\"><span class=\"comment\">            --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">generatedKey</span> <span class=\"attr\">column</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">sqlStatement</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">identity</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- optional.  </span></div><div class=\"line\"><span class=\"comment\">                    列的命名规则：  </span></div><div class=\"line\"><span class=\"comment\">                    MBG使用 &lt;columnRenamingRule&gt; 元素在计算列名的对应 名称之前，先对列名进行重命名，  </span></div><div class=\"line\"><span class=\"comment\">                    作用：一般需要对BUSI_CLIENT_NO 前的BUSI_进行过滤  </span></div><div class=\"line\"><span class=\"comment\">                    支持正在表达式  </span></div><div class=\"line\"><span class=\"comment\">                     searchString 表示要被换掉的字符串  </span></div><div class=\"line\"><span class=\"comment\">                     replaceString 则是要换成的字符串，默认情况下为空字符串，可选  </span></div><div class=\"line\"><span class=\"comment\">            --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">columnRenamingRule</span> <span class=\"attr\">searchString</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">replaceString</span>=<span class=\"string\">\"\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- optional.告诉 MBG 忽略某一列  </span></div><div class=\"line\"><span class=\"comment\">                    column，需要忽略的列  </span></div><div class=\"line\"><span class=\"comment\">                    delimitedColumnName:true ,匹配column的值和数据库列的名称 大小写完全匹配，false 忽略大小写匹配  </span></div><div class=\"line\"><span class=\"comment\">                    是否限定表的列名，即固定表列在Model中的名称  </span></div><div class=\"line\"><span class=\"comment\">            --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ignoreColumn</span> <span class=\"attr\">column</span>=<span class=\"string\">\"PLAN_ID\"</span>  <span class=\"attr\">delimitedColumnName</span>=<span class=\"string\">\"true\"</span> /&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!--optional.覆盖MBG对Model 的生成规则  </span></div><div class=\"line\"><span class=\"comment\">                 column: 数据库的列名  </span></div><div class=\"line\"><span class=\"comment\">                 javaType: 对应的Java数据类型的完全限定名  </span></div><div class=\"line\"><span class=\"comment\">                 在必要的时候可以覆盖由JavaTypeResolver计算得到的java数据类型. For some databases, this is necessary to handle \"odd\" database types (e.g. MySql's unsigned bigint type should be mapped to java.lang.Object).  </span></div><div class=\"line\"><span class=\"comment\">                 jdbcType:该列的JDBC数据类型(INTEGER, DECIMAL, NUMERIC, VARCHAR, etc.)，该列可以覆盖由JavaTypeResolver计算得到的Jdbc类型，对某些数据库而言，对于处理特定的JDBC 驱动癖好 很有必要(e.g. DB2's LONGVARCHAR type should be mapped to VARCHAR for iBATIS).  </span></div><div class=\"line\"><span class=\"comment\">                 typeHandler:  </span></div><div class=\"line\"><span class=\"comment\">  </span></div><div class=\"line\"><span class=\"comment\">            --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">columnOverride</span> <span class=\"attr\">column</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">javaType</span>=<span class=\"string\">\"\"</span>    <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">typeHandler</span>=<span class=\"string\">\"\"</span>  <span class=\"attr\">delimitedColumnName</span>=<span class=\"string\">\"\"</span> /&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">context</span>&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">generatorConfiguration</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"配置文件generator-properties属性文件\"><a href=\"#配置文件generator-properties属性文件\" class=\"headerlink\" title=\"配置文件generator.properties属性文件\"></a>配置文件generator.properties属性文件</h2><p>这里使用了外置的配置文件generator.properties，可以将一下属性配置到properties文件之中，增加配置的灵活性：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc.driverLocation=D:\\\\maven\\\\com\\\\oracle\\\\ojdbc14\\\\10.2.0.4.0\\\\ojdbc14-10.2.0.4.0.jar  </div><div class=\"line\">jdbc.driverClass=oracle.jdbc.driver.OracleDriver  </div><div class=\"line\">jdbc.connectionURL=jdbc:oracle:thin:@//localhost:1521/XE  </div><div class=\"line\">jdbc.userId=LOUIS  </div><div class=\"line\">jdbc.password=123456</div></pre></td></tr></table></figure></p>\n<h2 id=\"项目目录\"><a href=\"#项目目录\" class=\"headerlink\" title=\"项目目录\"></a>项目目录</h2><p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_38.jpg\" alt=\"\"></p>\n<h1 id=\"STEP-3-新增maven运行选项\"><a href=\"#STEP-3-新增maven运行选项\" class=\"headerlink\" title=\"STEP 3. 新增maven运行选项\"></a>STEP 3. 新增maven运行选项</h1><p>在Intellij IDEA添加一个“Run运行”选项，使用maven运行mybatis-generator-maven-plugin插件 ：<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_39.jpg\" alt=\"步骤1\"></p>\n<p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_40-1.jpg\" alt=\"步骤2\"></p>\n<p>之后弹出运行配置框，为当前配置配置一个名称，这里其名为”generator”,然后在 “Command line” 选项中输入“<code>mybatis-generator:generate  -e</code>”</p>\n<p>这里加了“-e ”选项是为了让该插件输出详细信息，这样可以帮助我们定位问题。<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-061534.jpg\" alt=\"步骤3\"></p>\n<p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-061541.jpg\" alt=\"步骤4\"></p>\n<p>如果添加成功，则会在run 选项中有“generator” 选项，如下：<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_41-1.jpg\" alt=\"步骤5\"></p>\n<p>点击运行，然后不出意外的话，会在控制台输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:\\Java\\jdk1.7.0_71\\bin\\java -Dmaven.home=D:\\software\\apache-maven-3.0.5-bin -Dclassworlds.conf=D:\\software\\apache-maven-3.0.5-bin\\bin\\m2.conf -Didea.launcher.port=7533 &quot;-Didea.launcher.bin.path=D:\\applications\\JetBrains\\IntelliJ IDEA 14.0.2\\bin&quot; -Dfile.encoding=UTF-8 -classpath &quot;D:\\software\\apache-maven-3.0.5-bin\\boot\\plexus-classworlds-2.4.jar;D:\\applications\\JetBrains\\IntelliJ IDEA 14.0.2\\lib\\idea_rt.jar&quot; com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher -Didea.version=14.0.2 -s D:\\software\\apache-maven-3.0.5-bin\\conf\\settings.xml mybatis-generator:generate -e  </div><div class=\"line\">[INFO] Error stacktraces are turned on.  </div><div class=\"line\">[INFO] Scanning for projects...  </div><div class=\"line\">[INFO]                                                                           </div><div class=\"line\">[INFO] ------------------------------------------------------------------------  </div><div class=\"line\">[INFO] Building hometutor Maven Webapp 1.0-SNAPSHOT  </div><div class=\"line\">[INFO] ------------------------------------------------------------------------  </div><div class=\"line\">[INFO]   </div><div class=\"line\">[INFO] --- mybatis-generator-maven-plugin:1.3.2:generate (default-cli) @ hometutor ---  </div><div class=\"line\">[INFO] Connecting to the Database  </div><div class=\"line\">[INFO] Introspecting table louis.lession  </div><div class=\"line\">log4j:WARN No appenders could be found for logger (org.mybatis.generator.internal.db.DatabaseIntrospector).  </div><div class=\"line\">log4j:WARN Please initialize the log4j system properly.  </div><div class=\"line\">log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.  </div><div class=\"line\">[INFO] Generating Example class for table LOUIS.LESSION  </div><div class=\"line\">[INFO] Generating Record class for table LOUIS.LESSION  </div><div class=\"line\">[INFO] Generating Mapper Interface for table LOUIS.LESSION  </div><div class=\"line\">[INFO] Generating SQL Map for table LOUIS.LESSION  </div><div class=\"line\">[INFO] Saving file LessionMapper.xml  </div><div class=\"line\">[INFO] Saving file LessionExample.java  </div><div class=\"line\">[INFO] Saving file Lession.java  </div><div class=\"line\">[INFO] Saving file LessionMapper.java  </div><div class=\"line\">[WARNING] Root class com.foo.louis.Hello cannot be loaded, checking for member overrides is disabled for this class   </div><div class=\"line\">[WARNING] Existing file E:\\sources\\tutor\\src\\main\\java\\org\\louis\\hometutor\\po\\Lession.java was overwritten  </div><div class=\"line\">[WARNING] Existing file E:\\sources\\tutor\\src\\main\\java\\com\\foo\\tourist\\dao\\LessionMapper.java was overwritten  </div><div class=\"line\">[INFO] ------------------------------------------------------------------------  </div><div class=\"line\">[INFO] BUILD SUCCESS  </div><div class=\"line\">[INFO] ------------------------------------------------------------------------  </div><div class=\"line\">[INFO] Total time: 2.334s  </div><div class=\"line\">[INFO] Finished at: Tue Jan 27 12:04:08 CST 2015  </div><div class=\"line\">[INFO] Final Memory: 8M/107M  </div><div class=\"line\">[INFO] ------------------------------------------------------------------------  </div><div class=\"line\">  </div><div class=\"line\">Process finished with exit code 0</div></pre></td></tr></table></figure></p>\n<p>好，看到BUILD SUCCESS，则大功告成，如果有错误的话，由于添加了-e 选项，会把具体的详细错误信息打印出来的，根据错误信息修改即可</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"STEP-1-新增maven插件\"><a href=\"#STEP-1-新增maven插件\" class=\"headerlink\" title=\"STEP 1. 新增maven插件\"></a>STEP 1. 新增maven插件</h1><p>在maven项目的pom.xml 添加mybatis-generator-maven-plugin 插件<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span>  </div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">finalName</span>&gt;</span>xxx<span class=\"tag\">&lt;/<span class=\"name\">finalName</span>&gt;</span>  </div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.generator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">verbose</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">verbose</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">overwrite</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">overwrite</span>&gt;</span>  </div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure></p>","more":"<h1 id=\"STEP-2-新建generatorConfig-xml的配置文件\"><a href=\"#STEP-2-新建generatorConfig-xml的配置文件\" class=\"headerlink\" title=\"STEP 2. 新建generatorConfig.xml的配置文件\"></a>STEP 2. 新建generatorConfig.xml的配置文件</h1><p>在maven项目下的src/main/resources 目录下建立名为 generatorConfig.xml的配置文件，作为mybatis-generator-maven-plugin 插件的执行目标，模板如下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;  </div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE generatorConfiguration  </span></div><div class=\"line\"><span class=\"meta\">        PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"  </span></div><div class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">generatorConfiguration</span>&gt;</span>  </div><div class=\"line\">    <span class=\"comment\">&lt;!--导入属性配置 --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"generator.properties\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"comment\">&lt;!--指定特定数据库的jdbc驱动jar包的位置 --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">classPathEntry</span> <span class=\"attr\">location</span>=<span class=\"string\">\"$&#123;jdbc.driverLocation&#125;\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context</span> <span class=\"attr\">id</span>=<span class=\"string\">\"default\"</span> <span class=\"attr\">targetRuntime</span>=<span class=\"string\">\"MyBatis3\"</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- optional，旨在创建class时，对注释进行控制 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">commentGenerator</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"suppressDate\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">commentGenerator</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"comment\">&lt;!--jdbc的数据库连接 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jdbcConnection</span> <span class=\"attr\">driverClass</span>=<span class=\"string\">\"$&#123;jdbc.driverClass&#125;\"</span> <span class=\"attr\">connectionURL</span>=<span class=\"string\">\"$&#123;jdbc.connectionURL&#125;\"</span> <span class=\"attr\">userId</span>=<span class=\"string\">\"$&#123;jdbc.userId&#125;\"</span> <span class=\"attr\">password</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">jdbcConnection</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制--&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaTypeResolver</span> &gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"forceBigDecimals\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaTypeResolver</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类  </span></div><div class=\"line\"><span class=\"comment\">            targetPackage     指定生成的model生成所在的包名  </span></div><div class=\"line\"><span class=\"comment\">            targetProject     指定在该项目下所在的路径  </span></div><div class=\"line\"><span class=\"comment\">        --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaModelGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"org.louis.hometutor.po\"</span> <span class=\"attr\">targetProject</span>=<span class=\"string\">\"src/main/java\"</span>&gt;</span>  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- 是否对model添加 构造函数 --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"constructorBased\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- 是否允许子包，即targetPackage.schemaName.tableName --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"immutable\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- 给Model添加一个父类 --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"rootClass\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.foo.louis.Hello\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- 是否对类CHAR类型的列的数据进行trim操作 --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"trimStrings\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaModelGenerator</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"comment\">&lt;!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sqlMapGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"org.louis.hometutor.domain\"</span> <span class=\"attr\">targetProject</span>=<span class=\"string\">\"src/main/java\"</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sqlMapGenerator</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码  </span></div><div class=\"line\"><span class=\"comment\">                type=\"ANNOTATEDMAPPER\",生成Java Model 和基于注解的Mapper对象  </span></div><div class=\"line\"><span class=\"comment\">                type=\"MIXEDMAPPER\",生成基于注解的Java Model 和相应的Mapper对象  </span></div><div class=\"line\"><span class=\"comment\">                type=\"XMLMAPPER\",生成SQLMap XML文件和独立的Mapper接口  </span></div><div class=\"line\"><span class=\"comment\">        --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaClientGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"com.foo.tourist.dao\"</span> <span class=\"attr\">targetProject</span>=<span class=\"string\">\"src/main/java\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"MIXEDMAPPER\"</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>/&gt;</span>  </div><div class=\"line\">            <span class=\"comment\">&lt;!--  </span></div><div class=\"line\"><span class=\"comment\">                    定义Maper.java 源代码中的ByExample() 方法的可视性，可选的值有：  </span></div><div class=\"line\"><span class=\"comment\">                    public;  </span></div><div class=\"line\"><span class=\"comment\">                    private;  </span></div><div class=\"line\"><span class=\"comment\">                    protected;  </span></div><div class=\"line\"><span class=\"comment\">                    default  </span></div><div class=\"line\"><span class=\"comment\">                    注意：如果 targetRuntime=\"MyBatis3\",此参数被忽略  </span></div><div class=\"line\"><span class=\"comment\">             --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"exampleMethodVisibility\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>/&gt;</span>  </div><div class=\"line\">            <span class=\"comment\">&lt;!--  </span></div><div class=\"line\"><span class=\"comment\">                                           方法名计数器  </span></div><div class=\"line\"><span class=\"comment\">              Important <span class=\"doctag\">note:</span> this property is ignored if the target runtime is MyBatis3.  </span></div><div class=\"line\"><span class=\"comment\">             --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"methodNameCalculator\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- </span></div><div class=\"line\"><span class=\"comment\">                                                为生成的接口添加父接口 </span></div><div class=\"line\"><span class=\"comment\">             --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"rootInterface\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaClientGenerator</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"lession\"</span> <span class=\"attr\">schema</span>=<span class=\"string\">\"louis\"</span>&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- optional   , only for mybatis3 runtime  </span></div><div class=\"line\"><span class=\"comment\">                 自动生成的键值（identity,或者序列值）  </span></div><div class=\"line\"><span class=\"comment\">               如果指定此元素，MBG将会生成&lt;selectKey&gt;元素，然后将此元素插入到SQL Map的&lt;insert&gt; 元素之中  </span></div><div class=\"line\"><span class=\"comment\">               sqlStatement 的语句将会返回新的值  </span></div><div class=\"line\"><span class=\"comment\">               如果是一个自增主键的话，你可以使用预定义的语句,或者添加自定义的SQL语句. 预定义的值如下:  </span></div><div class=\"line\"><span class=\"comment\">                  Cloudscape    This will translate to: VALUES IDENTITY_VAL_LOCAL()  </span></div><div class=\"line\"><span class=\"comment\">                  DB2:      VALUES IDENTITY_VAL_LOCAL()  </span></div><div class=\"line\"><span class=\"comment\">                  DB2_MF:       SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1  </span></div><div class=\"line\"><span class=\"comment\">                  Derby:        VALUES IDENTITY_VAL_LOCAL()  </span></div><div class=\"line\"><span class=\"comment\">                  HSQLDB:   CALL IDENTITY()  </span></div><div class=\"line\"><span class=\"comment\">                  Informix:     select dbinfo('sqlca.sqlerrd1') from systables where tabid=1  </span></div><div class=\"line\"><span class=\"comment\">                  MySql:        SELECT LAST_INSERT_ID()  </span></div><div class=\"line\"><span class=\"comment\">                  SqlServer:    SELECT SCOPE_IDENTITY()  </span></div><div class=\"line\"><span class=\"comment\">                  SYBASE:   SELECT @@IDENTITY  </span></div><div class=\"line\"><span class=\"comment\">                  JDBC:     This will configure MBG to generate code for MyBatis3 suport of JDBC standard generated keys. This is a database independent method of obtaining the value from identity columns.  </span></div><div class=\"line\"><span class=\"comment\">                  identity: 自增主键  If true, then the column is flagged as an identity column and the generated &lt;selectKey&gt; element will be placed after the insert (for an identity column). If false, then the generated &lt;selectKey&gt; will be placed before the insert (typically for a sequence).  </span></div><div class=\"line\"><span class=\"comment\">  </span></div><div class=\"line\"><span class=\"comment\">            --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">generatedKey</span> <span class=\"attr\">column</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">sqlStatement</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">identity</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- optional.  </span></div><div class=\"line\"><span class=\"comment\">                    列的命名规则：  </span></div><div class=\"line\"><span class=\"comment\">                    MBG使用 &lt;columnRenamingRule&gt; 元素在计算列名的对应 名称之前，先对列名进行重命名，  </span></div><div class=\"line\"><span class=\"comment\">                    作用：一般需要对BUSI_CLIENT_NO 前的BUSI_进行过滤  </span></div><div class=\"line\"><span class=\"comment\">                    支持正在表达式  </span></div><div class=\"line\"><span class=\"comment\">                     searchString 表示要被换掉的字符串  </span></div><div class=\"line\"><span class=\"comment\">                     replaceString 则是要换成的字符串，默认情况下为空字符串，可选  </span></div><div class=\"line\"><span class=\"comment\">            --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">columnRenamingRule</span> <span class=\"attr\">searchString</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">replaceString</span>=<span class=\"string\">\"\"</span>/&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!-- optional.告诉 MBG 忽略某一列  </span></div><div class=\"line\"><span class=\"comment\">                    column，需要忽略的列  </span></div><div class=\"line\"><span class=\"comment\">                    delimitedColumnName:true ,匹配column的值和数据库列的名称 大小写完全匹配，false 忽略大小写匹配  </span></div><div class=\"line\"><span class=\"comment\">                    是否限定表的列名，即固定表列在Model中的名称  </span></div><div class=\"line\"><span class=\"comment\">            --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ignoreColumn</span> <span class=\"attr\">column</span>=<span class=\"string\">\"PLAN_ID\"</span>  <span class=\"attr\">delimitedColumnName</span>=<span class=\"string\">\"true\"</span> /&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">  </div><div class=\"line\">            <span class=\"comment\">&lt;!--optional.覆盖MBG对Model 的生成规则  </span></div><div class=\"line\"><span class=\"comment\">                 column: 数据库的列名  </span></div><div class=\"line\"><span class=\"comment\">                 javaType: 对应的Java数据类型的完全限定名  </span></div><div class=\"line\"><span class=\"comment\">                 在必要的时候可以覆盖由JavaTypeResolver计算得到的java数据类型. For some databases, this is necessary to handle \"odd\" database types (e.g. MySql's unsigned bigint type should be mapped to java.lang.Object).  </span></div><div class=\"line\"><span class=\"comment\">                 jdbcType:该列的JDBC数据类型(INTEGER, DECIMAL, NUMERIC, VARCHAR, etc.)，该列可以覆盖由JavaTypeResolver计算得到的Jdbc类型，对某些数据库而言，对于处理特定的JDBC 驱动癖好 很有必要(e.g. DB2's LONGVARCHAR type should be mapped to VARCHAR for iBATIS).  </span></div><div class=\"line\"><span class=\"comment\">                 typeHandler:  </span></div><div class=\"line\"><span class=\"comment\">  </span></div><div class=\"line\"><span class=\"comment\">            --&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">columnOverride</span> <span class=\"attr\">column</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">javaType</span>=<span class=\"string\">\"\"</span>    <span class=\"attr\">jdbcType</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">typeHandler</span>=<span class=\"string\">\"\"</span>  <span class=\"attr\">delimitedColumnName</span>=<span class=\"string\">\"\"</span> /&gt;</span>  </div><div class=\"line\">  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">context</span>&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">generatorConfiguration</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"配置文件generator-properties属性文件\"><a href=\"#配置文件generator-properties属性文件\" class=\"headerlink\" title=\"配置文件generator.properties属性文件\"></a>配置文件generator.properties属性文件</h2><p>这里使用了外置的配置文件generator.properties，可以将一下属性配置到properties文件之中，增加配置的灵活性：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc.driverLocation=D:\\\\maven\\\\com\\\\oracle\\\\ojdbc14\\\\10.2.0.4.0\\\\ojdbc14-10.2.0.4.0.jar  </div><div class=\"line\">jdbc.driverClass=oracle.jdbc.driver.OracleDriver  </div><div class=\"line\">jdbc.connectionURL=jdbc:oracle:thin:@//localhost:1521/XE  </div><div class=\"line\">jdbc.userId=LOUIS  </div><div class=\"line\">jdbc.password=123456</div></pre></td></tr></table></figure></p>\n<h2 id=\"项目目录\"><a href=\"#项目目录\" class=\"headerlink\" title=\"项目目录\"></a>项目目录</h2><p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_38.jpg\" alt=\"\"></p>\n<h1 id=\"STEP-3-新增maven运行选项\"><a href=\"#STEP-3-新增maven运行选项\" class=\"headerlink\" title=\"STEP 3. 新增maven运行选项\"></a>STEP 3. 新增maven运行选项</h1><p>在Intellij IDEA添加一个“Run运行”选项，使用maven运行mybatis-generator-maven-plugin插件 ：<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_39.jpg\" alt=\"步骤1\"></p>\n<p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_40-1.jpg\" alt=\"步骤2\"></p>\n<p>之后弹出运行配置框，为当前配置配置一个名称，这里其名为”generator”,然后在 “Command line” 选项中输入“<code>mybatis-generator:generate  -e</code>”</p>\n<p>这里加了“-e ”选项是为了让该插件输出详细信息，这样可以帮助我们定位问题。<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-061534.jpg\" alt=\"步骤3\"></p>\n<p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-061541.jpg\" alt=\"步骤4\"></p>\n<p>如果添加成功，则会在run 选项中有“generator” 选项，如下：<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-12-%E7%B2%98%E8%B4%B4%E7%9A%84%E5%9B%BE%E7%89%8717_9_12_%E4%B8%8B%E5%8D%882_41-1.jpg\" alt=\"步骤5\"></p>\n<p>点击运行，然后不出意外的话，会在控制台输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:\\Java\\jdk1.7.0_71\\bin\\java -Dmaven.home=D:\\software\\apache-maven-3.0.5-bin -Dclassworlds.conf=D:\\software\\apache-maven-3.0.5-bin\\bin\\m2.conf -Didea.launcher.port=7533 &quot;-Didea.launcher.bin.path=D:\\applications\\JetBrains\\IntelliJ IDEA 14.0.2\\bin&quot; -Dfile.encoding=UTF-8 -classpath &quot;D:\\software\\apache-maven-3.0.5-bin\\boot\\plexus-classworlds-2.4.jar;D:\\applications\\JetBrains\\IntelliJ IDEA 14.0.2\\lib\\idea_rt.jar&quot; com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher -Didea.version=14.0.2 -s D:\\software\\apache-maven-3.0.5-bin\\conf\\settings.xml mybatis-generator:generate -e  </div><div class=\"line\">[INFO] Error stacktraces are turned on.  </div><div class=\"line\">[INFO] Scanning for projects...  </div><div class=\"line\">[INFO]                                                                           </div><div class=\"line\">[INFO] ------------------------------------------------------------------------  </div><div class=\"line\">[INFO] Building hometutor Maven Webapp 1.0-SNAPSHOT  </div><div class=\"line\">[INFO] ------------------------------------------------------------------------  </div><div class=\"line\">[INFO]   </div><div class=\"line\">[INFO] --- mybatis-generator-maven-plugin:1.3.2:generate (default-cli) @ hometutor ---  </div><div class=\"line\">[INFO] Connecting to the Database  </div><div class=\"line\">[INFO] Introspecting table louis.lession  </div><div class=\"line\">log4j:WARN No appenders could be found for logger (org.mybatis.generator.internal.db.DatabaseIntrospector).  </div><div class=\"line\">log4j:WARN Please initialize the log4j system properly.  </div><div class=\"line\">log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.  </div><div class=\"line\">[INFO] Generating Example class for table LOUIS.LESSION  </div><div class=\"line\">[INFO] Generating Record class for table LOUIS.LESSION  </div><div class=\"line\">[INFO] Generating Mapper Interface for table LOUIS.LESSION  </div><div class=\"line\">[INFO] Generating SQL Map for table LOUIS.LESSION  </div><div class=\"line\">[INFO] Saving file LessionMapper.xml  </div><div class=\"line\">[INFO] Saving file LessionExample.java  </div><div class=\"line\">[INFO] Saving file Lession.java  </div><div class=\"line\">[INFO] Saving file LessionMapper.java  </div><div class=\"line\">[WARNING] Root class com.foo.louis.Hello cannot be loaded, checking for member overrides is disabled for this class   </div><div class=\"line\">[WARNING] Existing file E:\\sources\\tutor\\src\\main\\java\\org\\louis\\hometutor\\po\\Lession.java was overwritten  </div><div class=\"line\">[WARNING] Existing file E:\\sources\\tutor\\src\\main\\java\\com\\foo\\tourist\\dao\\LessionMapper.java was overwritten  </div><div class=\"line\">[INFO] ------------------------------------------------------------------------  </div><div class=\"line\">[INFO] BUILD SUCCESS  </div><div class=\"line\">[INFO] ------------------------------------------------------------------------  </div><div class=\"line\">[INFO] Total time: 2.334s  </div><div class=\"line\">[INFO] Finished at: Tue Jan 27 12:04:08 CST 2015  </div><div class=\"line\">[INFO] Final Memory: 8M/107M  </div><div class=\"line\">[INFO] ------------------------------------------------------------------------  </div><div class=\"line\">  </div><div class=\"line\">Process finished with exit code 0</div></pre></td></tr></table></figure></p>\n<p>好，看到BUILD SUCCESS，则大功告成，如果有错误的话，由于添加了-e 选项，会把具体的详细错误信息打印出来的，根据错误信息修改即可</p>"},{"title":"Redis配置 & 常规操作类封装","date":"2017-09-10T04:21:32.000Z","_content":"\n\n直接上代码吧!!\n\n## 抽象基础类\n``` java\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.core.StringRedisTemplate;\nimport org.springframework.data.redis.serializer.RedisSerializer;\n\npublic abstract class AbstractBaseRedis<K, V> {\n\n    @Autowired\n    protected RedisTemplate<K, V> redisTemplate;\n\n    @Autowired\n    StringRedisTemplate stringRedisTemplate;\n\n    /**\n     * 设置redisTemplate\n     * @param redisTemplate the redisTemplate to set\n     */\n    public void setRedisTemplate(RedisTemplate<K, V> redisTemplate) {\n        this.redisTemplate = redisTemplate;\n    }\n\n    /**\n     * 获取 String  RedisSerializer\n     * <br>------------------------------<br>\n     */\n    protected RedisSerializer<String> getStringSerializer() {\n        return redisTemplate.getStringSerializer();\n    }\n\n}\n```\n\n<!-- more -->\n\n## JsonMapper\n```java\n\nimport java.io.IOException;\nimport java.util.TimeZone;\n\nimport org.apache.commons.lang3.StringEscapeUtils;\nimport org.apache.commons.lang3.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport com.alibaba.fastjson.JSON;\nimport com.fasterxml.jackson.annotation.JsonInclude.Include;\nimport com.fasterxml.jackson.core.JsonGenerator;\nimport com.fasterxml.jackson.core.JsonParser.Feature;\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.DeserializationFeature;\nimport com.fasterxml.jackson.databind.JavaType;\nimport com.fasterxml.jackson.databind.JsonSerializer;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.SerializationFeature;\nimport com.fasterxml.jackson.databind.SerializerProvider;\nimport com.fasterxml.jackson.databind.module.SimpleModule;\nimport com.fasterxml.jackson.databind.util.JSONPObject;\n\npublic class JsonMapper extends ObjectMapper {\n\n    private static final long serialVersionUID = 1L;\n\n    private final static Logger LOGGER = LoggerFactory.getLogger(JsonMapper.class);\n\n    private static JsonMapper mapper;\n\n    public JsonMapper() {\n        this(Include.NON_EMPTY);\n    }\n\n    public JsonMapper(Include include) {\n        // 设置输出时包含属性的风格\n        if (include != null) {\n            this.setSerializationInclusion(include);\n        }\n        // 设置输入时忽略在JSON字符串中存在但Java对象实际没有的属性\n        this.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);\n        // 空值处理为空串\n        this.getSerializerProvider().setNullValueSerializer(new JsonSerializer<Object>(){\n            @Override\n            public void serialize(Object value, JsonGenerator jgen,\n                                  SerializerProvider provider) throws IOException,\n                    JsonProcessingException {\n                jgen.writeString(\"\");\n            }\n        });\n        // 进行HTML解码。\n        this.registerModule(new SimpleModule().addSerializer(String.class, new JsonSerializer<String>(){\n            @Override\n            public void serialize(String value, JsonGenerator jgen,\n                                  SerializerProvider provider) throws IOException,\n                    JsonProcessingException {\n                jgen.writeString(StringEscapeUtils.unescapeHtml4(value));\n            }\n        }));\n        // 设置时区\n        this.setTimeZone(TimeZone.getDefault());//getTimeZone(\"GMT+8:00\")\n    }\n\n    /**\n     * 创建只输出非Null且非Empty(如List.isEmpty)的属性到Json字符串的Mapper,建议在外部接口中使用.\n     */\n    public static JsonMapper getInstance() {\n        if (mapper == null){\n            mapper = new JsonMapper().enableSimple();\n        }\n        return mapper;\n    }\n\n    /**\n     * 创建只输出初始值被改变的属性到Json字符串的Mapper, 最节约的存储方式，建议在内部接口中使用。\n     */\n    public static JsonMapper nonDefaultMapper() {\n        if (mapper == null){\n            mapper = new JsonMapper(Include.NON_DEFAULT);\n        }\n        return mapper;\n    }\n\n    /**\n     * Object可以是POJO，也可以是Collection或数组。\n     * 如果对象为Null, 返回\"null\".\n     * 如果集合为空集合, 返回\"[]\".\n     */\n    public String toJson(Object object) {\n        try {\n            return this.writeValueAsString(object);\n        } catch (IOException e) {\n            if(LOGGER.isWarnEnabled()){\n                LOGGER.warn(\"write to json string error:\" + object, e);\n            }\n            return null;\n        }\n    }\n\n    /**\n     * 反序列化POJO或简单Collection如List<String>.\n     *\n     * 如果JSON字符串为Null或\"null\"字符串, 返回Null.\n     * 如果JSON字符串为\"[]\", 返回空集合.\n     *\n     * 如需反序列化复杂Collection如List<MyBean>, 请使用fromJson(String,JavaType)\n     * @see #fromJson(String, JavaType)\n     */\n    public <T> T fromJson(String jsonString, Class<T> clazz) {\n        if (StringUtils.isEmpty(jsonString)) {\n            return null;\n        }\n        try {\n            return this.readValue(jsonString, clazz);\n        } catch (IOException e) {\n            if(LOGGER.isWarnEnabled()){\n                LOGGER.warn(\"parse json string error:\" + jsonString, e);\n            }\n            return null;\n        }\n    }\n\n    /**\n     * 反序列化复杂Collection如List<Bean>, 先使用函數createCollectionType构造类型,然后调用本函数.\n     * @see #createCollectionType(Class, Class...)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public <T> T fromJson(String jsonString, JavaType javaType) {\n        if (StringUtils.isEmpty(jsonString)) {\n            return null;\n        }\n        try {\n            return (T) this.readValue(jsonString, javaType);\n        } catch (IOException e) {\n            if(LOGGER.isWarnEnabled()){\n                LOGGER.warn(\"parse json string error:\" + jsonString, e);\n            }\n            return null;\n        }\n    }\n\n    /**\n     * 構造泛型的Collection Type如:\n     * ArrayList<MyBean>, 则调用constructCollectionType(ArrayList.class,MyBean.class)\n     * HashMap<String,MyBean>, 则调用(HashMap.class,String.class, MyBean.class)\n     */\n    public JavaType createCollectionType(Class<?> collectionClass, Class<?>... elementClasses) {\n        return this.getTypeFactory().constructParametricType(collectionClass, elementClasses);\n    }\n\n    /**\n     * 當JSON裡只含有Bean的部分屬性時，更新一個已存在Bean，只覆蓋該部分的屬性.\n     */\n    @SuppressWarnings(\"unchecked\")\n    public <T> T update(String jsonString, T object) {\n        try {\n            return (T) this.readerForUpdating(object).readValue(jsonString);\n        } catch (JsonProcessingException e) {\n            if(LOGGER.isWarnEnabled()){\n                LOGGER.warn(\"update json string:\" + jsonString + \" to object:\" + object + \" error.\", e);\n            }\n        } catch (IOException e) {\n            if(LOGGER.isWarnEnabled()){\n                LOGGER.warn(\"update json string:\" + jsonString + \" to object:\" + object + \" error.\", e);\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 輸出JSONP格式數據.\n     */\n    public String toJsonP(String functionName, Object object) {\n        return toJson(new JSONPObject(functionName, object));\n    }\n\n    /**\n     * 設定是否使用Enum的toString函數來讀寫Enum,\n     * 為False時時使用Enum的name()函數來讀寫Enum, 默認為False.\n     * 注意本函數一定要在Mapper創建後, 所有的讀寫動作之前調用.\n     */\n    public JsonMapper enableEnumUseToString() {\n        this.enable(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);\n        this.enable(DeserializationFeature.READ_ENUMS_USING_TO_STRING);\n        return this;\n    }\n\n    /**\n     * 允许单引号\n     * 允许不带引号的字段名称\n     */\n    public JsonMapper enableSimple() {\n        this.configure(Feature.ALLOW_SINGLE_QUOTES, true);\n        this.configure(Feature.ALLOW_UNQUOTED_FIELD_NAMES, true);\n        return this;\n    }\n\n    /**\n     * 取出Mapper做进一步的设置或使用其他序列化API.\n     */\n    public ObjectMapper getMapper() {\n        return this;\n    }\n\n    /**\n     * 对象转换为JSON字符串\n     * @param object\n     * @return\n     */\n    public static String toJsonString(Object object){\n        return JsonMapper.getInstance().toJson(object);\n    }\n\n    /**\n     * JSON字符串转换为对象\n     * @param jsonString\n     * @param clazz\n     * @return\n     */\n    public static <T> T fromJsonString(String jsonString, Class<T> clazz){\n        return JsonMapper.getInstance().fromJson(jsonString, clazz);\n    }\n\n\n    /**\n     * 将obj对象转换成 class类型的对象\n     * @param obj\n     * @param clazz\n     * @return\n     */\n    public static <T> T parseObject(Object obj, Class<T> clazz){\n        return JSON.parseObject(JSON.toJSONString(obj), clazz);\n    }\n}\n```\n\n## JSON序列化\n```java\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.commons.lang3.SerializationException;\n\nimport java.nio.charset.Charset;\n\n/**\n * Created by SIVEN on 17/9/4.\n */\npublic class JsonRedisSeriaziler {\n\n    public static final String EMPTY_JSON = \"{}\";\n\n    public static final Charset DEFAULT_CHARSET = Charset.forName(\"UTF-8\");\n\n    protected ObjectMapper objectMapper = new ObjectMapper();\n    public JsonRedisSeriaziler(){}\n\n    /**\n     * java-object as json-string\n     * @param object\n     * @return\n     */\n    public String seriazileAsString(Object object){\n        if (object== null) {\n            return EMPTY_JSON;\n        }\n        try {\n            return this.objectMapper.writeValueAsString(object);\n        } catch (Exception ex) {\n            throw new SerializationException(\"Could not write JSON: \" + ex.getMessage(), ex);\n        }\n    }\n\n    /**\n     * json-string to java-object\n     * @param str\n     * @return\n     */\n    public <T> T deserializeAsObject(String str,Class<T> clazz){\n        if(str == null || clazz == null){\n            return null;\n        }\n        try{\n            return this.objectMapper.readValue(str, clazz);\n        }catch (Exception ex) {\n            throw new SerializationException(\"Could not write JSON: \" + ex.getMessage(), ex);\n        }\n    }\n}\n```\n\n## RedisClient\n```java\n\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.JSONObject;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.dao.DataAccessException;\nimport org.springframework.data.redis.connection.RedisConnection;\nimport org.springframework.data.redis.core.BoundHashOperations;\nimport org.springframework.data.redis.core.RedisCallback;\nimport org.springframework.data.redis.core.ValueOperations;\nimport org.springframework.stereotype.Repository;\nimport org.springframework.util.CollectionUtils;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.TimeUnit;\n\n\n@Repository\npublic class RedisClient extends AbstractBaseRedis<String, Object> {\n\n    /**\n     * 删除缓存<br>\n     * 根据key精确匹配删除\n     * @param key\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void del(String... key){\n        if(key!=null && key.length > 0){\n            if(key.length == 1){\n                redisTemplate.delete(key[0]);\n            }else{\n                redisTemplate.delete(CollectionUtils.arrayToList(key));\n            }\n        }\n    }\n\n    /**\n     * 批量删除<br>\n     * （该操作会执行模糊查询，请尽量不要使用，以免影响性能或误删）\n     * @param pattern\n     */\n    public void batchDel(String... pattern){\n        for (String kp : pattern) {\n            redisTemplate.delete(redisTemplate.keys(kp + \"*\"));\n        }\n    }\n\n    /**\n     * 取得缓存（int型）\n     * @param key\n     * @return\n     */\n    public Integer getInt(String key){\n        String value = stringRedisTemplate.boundValueOps(key).get();\n        if(StringUtils.isNotBlank(value)){\n            return Integer.valueOf(value);\n        }\n        return null;\n    }\n\n    /**\n     * 取得缓存（字符串类型）\n     * @param key\n     * @return\n     */\n    public String getStr(String key){\n        return stringRedisTemplate.boundValueOps(key).get();\n    }\n\n    /**\n     * 取得缓存（字符串类型）\n     * @param key\n     * @return\n     */\n    public String getStr(String key, boolean retain){\n        String value = stringRedisTemplate.boundValueOps(key).get();\n        if(!retain){\n            redisTemplate.delete(key);\n        }\n        return value;\n    }\n\n    /**\n     * 获取缓存<br>\n     * 注：基本数据类型(Character除外)，请直接使用get(String key, Class<T> clazz)取值\n     * @param key\n     * @return\n     */\n    public Object getObj(String key){\n        return redisTemplate.boundValueOps(key).get();\n    }\n\n    /**\n     * 获取缓存<br>\n     * 注：java 8种基本类型的数据请直接使用get(String key, Class<T> clazz)取值\n     * @param key\n     * @param retain    是否保留\n     * @return\n     */\n    public Object getObj(String key, boolean retain){\n        Object obj = redisTemplate.boundValueOps(key).get();\n        if(!retain){\n            redisTemplate.delete(key);\n        }\n        return obj;\n    }\n\n    /**\n     * 获取缓存<br>\n     * 注：该方法暂不支持Character数据类型\n     * @param key   key\n     * @param clazz 类型\n     * @return\n     */\n    @SuppressWarnings(\"unchecked\")\n    public <T> T get(String key, Class<T> clazz) {\n        return (T)redisTemplate.boundValueOps(key).get();\n    }\n\n    /**\n     * 获取缓存json对象<br>\n     * @param key   key\n     * @param clazz 类型\n     * @return\n     */\n    public <T> T getJson(String key, Class<T> clazz) {\n        return JsonMapper.fromJsonString(stringRedisTemplate.boundValueOps(key).get(), clazz);\n    }\n\n    /**\n     * 将value对象写入缓存\n     * @param key\n     * @param value\n     * @param time 失效时间(秒)\n     */\n    public void set(String key,Object value,Long time){\n        if(value.getClass().equals(String.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else if(value.getClass().equals(Integer.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else if(value.getClass().equals(Double.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else if(value.getClass().equals(Float.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else if(value.getClass().equals(Short.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else if(value.getClass().equals(Long.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else if(value.getClass().equals(Boolean.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else{\n            redisTemplate.opsForValue().set(key, value);\n        }\n        if(time > 0){\n            redisTemplate.expire(key, time, TimeUnit.SECONDS);\n        }\n    }\n\n    /**\n     * 将value对象以JSON格式写入缓存\n     * @param key\n     * @param value\n     * @param time 失效时间(秒)\n     */\n    public void setJson(String key,Object value,Long time){\n        stringRedisTemplate.opsForValue().set(key, JsonMapper.toJsonString(value));\n        if(time > 0){\n            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);\n        }\n    }\n\n    /**\n     * 更新key对象field的值\n     * @param key   缓存key\n     * @param field 缓存对象field\n     * @param value 缓存对象field值\n     */\n    public void setJsonField(String key, String field, String value){\n        JSONObject obj = JSON.parseObject(stringRedisTemplate.boundValueOps(key).get());\n        obj.put(field, value);\n        stringRedisTemplate.opsForValue().set(key, obj.toJSONString());\n    }\n\n\n    /**\n     * 递减操作\n     * @param key\n     * @param by\n     * @return\n     */\n    public double decr(String key, double by){\n        return redisTemplate.opsForValue().increment(key, -by);\n    }\n\n    /**\n     * 递增操作\n     * @param key\n     * @param by\n     * @return\n     */\n    public double incr(String key, double by){\n        return redisTemplate.opsForValue().increment(key, by);\n    }\n\n    /**\n     * 获取double类型值\n     * @param key\n     * @return\n     */\n    public double getDouble(String key) {\n        String value = stringRedisTemplate.boundValueOps(key).get();\n        if(StringUtils.isNotBlank(value)){\n            return Double.valueOf(value);\n        }\n        return 0d;\n    }\n\n    /**\n     * 设置double类型值\n     * @param key\n     * @param value\n     * @param time 失效时间(秒)\n     */\n    public void setDouble(String key, double value, Long time) {\n        stringRedisTemplate.opsForValue().set(key, String.valueOf(value));\n        if(time > 0){\n            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);\n        }\n    }\n\n    /**\n     * 设置double类型值\n     * @param key\n     * @param value\n     * @param time 失效时间(秒)\n     */\n    public void setInt(String key, int value, Long time) {\n        stringRedisTemplate.opsForValue().set(key, String.valueOf(value));\n        if(time > 0){\n            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);\n        }\n    }\n\n    /**\n     * 将map写入缓存\n     * @param key\n     * @param map\n     * @param time 失效时间(秒)\n     */\n    public <T> void setMap(String key, Map<String, T> map, Long time){\n        redisTemplate.opsForHash().putAll(key, map);\n    }\n\n    /**\n     * 将map写入缓存\n     * @param key\n     * @param map\n     * @param time 失效时间(秒)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public <T> void setMap(String key, T obj, Long time){\n        Map<String, String> map = (Map<String, String>)JsonMapper.parseObject(obj, Map.class);\n        redisTemplate.opsForHash().putAll(key, map);\n    }\n\n\n\n    /**\n     * 向key对应的map中添加缓存对象\n     * @param key\n     * @param map\n     */\n    public <T> void addMap(String key, Map<String, T> map){\n        redisTemplate.opsForHash().putAll(key, map);\n    }\n\n    /**\n     * 向key对应的map中添加缓存对象\n     * @param key   cache对象key\n     * @param field map对应的key\n     * @param value     值\n     */\n    public void addMap(String key, String field, String value){\n        redisTemplate.opsForHash().put(key, field, value);\n    }\n\n    /**\n     * 向key对应的map中添加缓存对象\n     * @param key   cache对象key\n     * @param field map对应的key\n     * @param obj   对象\n     */\n    public <T> void addMap(String key, String field, T obj){\n        redisTemplate.opsForHash().put(key, field, obj);\n    }\n\n    /**\n     * 获取map缓存\n     * @param key\n     * @param clazz\n     * @return\n     */\n    public <T> Map<String, T> mget(String key, Class<T> clazz){\n        BoundHashOperations<String, String, T> boundHashOperations = redisTemplate.boundHashOps(key);\n        return boundHashOperations.entries();\n    }\n\n    /**\n     * 获取map缓存\n     * @param key\n     * @param clazz\n     * @return\n     */\n    public <T> T getMap(String key, Class<T> clazz){\n        BoundHashOperations<String, String, String> boundHashOperations = redisTemplate.boundHashOps(key);\n        Map<String, String> map = boundHashOperations.entries();\n        return JsonMapper.parseObject(map, clazz);\n    }\n\n    /**\n     * 获取map缓存中的某个对象\n     * @param key\n     * @param field\n     * @param clazz\n     * @return\n     */\n    @SuppressWarnings(\"unchecked\")\n    public <T> T getMapField(String key, String field, Class<T> clazz){\n        return (T)redisTemplate.boundHashOps(key).get(field);\n    }\n\n    /**\n     * 删除map中的某个对象\n     * @author lh\n     * @date 2016年8月10日\n     * @param key   map对应的key\n     * @param field map中该对象的key\n     */\n    public void delMapField(String key, String... field){\n        BoundHashOperations<String, String, ?> boundHashOperations = redisTemplate.boundHashOps(key);\n        boundHashOperations.delete(field);\n    }\n\n    /**\n     * 指定缓存的失效时间\n     *\n     * @author FangJun\n     * @date 2016年8月14日\n     * @param key 缓存KEY\n     * @param time 失效时间(秒)\n     */\n    public void expire(String key, Long time) {\n        if(time > 0){\n            redisTemplate.expire(key, time, TimeUnit.SECONDS);\n        }\n    }\n\n    /**\n     * 添加set\n     * @param key\n     * @param value\n     */\n    public void sadd(String key, String... value) {\n        redisTemplate.boundSetOps(key).add(value);\n    }\n\n    /**\n     * 删除set集合中的对象\n     * @param key\n     * @param value\n     */\n    public void srem(String key, String... value) {\n        redisTemplate.boundSetOps(key).remove(value);\n    }\n\n    /**\n     * set重命名\n     * @param oldkey\n     * @param newkey\n     */\n    public void srename(String oldkey, String newkey){\n        redisTemplate.boundSetOps(oldkey).rename(newkey);\n    }\n\n    /**\n     * 短信缓存\n     * @author fxl\n     * @date 2016年9月11日\n     * @param key\n     * @param value\n     * @param time\n     */\n    public void setIntForPhone(String key,Object value,int time){\n        stringRedisTemplate.opsForValue().set(key, JsonMapper.toJsonString(value));\n        if(time > 0){\n            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);\n        }\n    }\n\n    /**\n     * 模糊查询keys\n     * @param pattern\n     * @return\n     */\n    public Set<String> keys(String pattern){\n        return redisTemplate.keys(pattern);\n    }\n\n}\n```\n\n## redis xml文件配置\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"\n\t\thttp://www.springframework.org/schema/beans\n\t\thttp://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n\t\thttp://www.springframework.org/schema/context\n\t\thttp://www.springframework.org/schema/context/spring-context-4.0.xsd\"\n       default-lazy-init=\"false\">\n\n    <description>Jedis Config</description>\n\n    <context:property-placeholder location=\"classpath:config/application-jedis.properties\" ignore-unresolvable=\"true\"/>\n\n\n    <!-- 连接池配置. -->\n    <bean id=\"jedisPoolConfig\" class=\"redis.clients.jedis.JedisPoolConfig\">\n        <!-- 连接池中最大连接数。高版本：maxTotal，低版本：maxActive -->\n        <property name=\"maxTotal\" value=\"${redis.maxTotal}\"/>\n        <!-- 连接池中最大空闲的连接数. -->\n        <property name=\"maxIdle\" value=\"${redis.maxIdle}\"/>\n        <!-- 连接池中最少空闲的连接数. -->\n        <property name=\"minIdle\" value=\"${redis.minIdle}\"/>\n        <!-- 当连接池资源耗尽时，调用者最大阻塞的时间，超时将跑出异常。单位，毫秒数;默认为-1.表示永不超时。高版本：maxWaitMillis，低版本：maxWait -->\n        <property name=\"maxWaitMillis\" value=\"${redis.maxWaitMillis}\"/>\n        <!-- 连接空闲的最小时间，达到此值后空闲连接将可能会被移除。负值(-1)表示不移除. -->\n        <property name=\"minEvictableIdleTimeMillis\" value=\"${redis.minEvictableIdleTimeMillis}\"/>\n        <!-- 对于“空闲链接”检测线程而言，每次检测的链接资源的个数。默认为3 -->\n        <property name=\"numTestsPerEvictionRun\" value=\"${redis.numTestsPerEvictionRun}\"/>\n        <!-- “空闲链接”检测线程，检测的周期，毫秒数。如果为负值，表示不运行“检测线程”。默认为-1. -->\n        <property name=\"timeBetweenEvictionRunsMillis\" value=\"${redis.timeBetweenEvictionRunsMillis}\"/>\n        <!-- testOnBorrow:向调用者输出“链接”资源时，是否检测是有有效，如果无效则从连接池中移除，并尝试获取继续获取。默认为false。建议保持默认值. -->\n        <property name=\"testOnBorrow\" value=\"${redis.testOnBorrow}\"/>\n        <!-- testOnReturn:向连接池“归还”链接时，是否检测“链接”对象的有效性。默认为false。建议保持默认值.-->\n        <property name=\"testOnReturn\" value=\"${redis.testOnReturn}\"/>\n        <!-- testWhileIdle:向调用者输出“链接”对象时，是否检测它的空闲超时；默认为false。如果“链接”空闲超时，将会被移除。建议保持默认值. -->\n        <!-- whenExhaustedAction:当“连接池”中active数量达到阀值时，即“链接”资源耗尽时，连接池需要采取的手段, 默认为1(0:抛出异常。1:阻塞，直到有可用链接资源。2:强制创建新的链接资源) -->\n    </bean>\n    <!-- Spring提供的Redis连接工厂 -->\n    <bean id=\"jedisConnectionFactory\" class=\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"\n          destroy-method=\"destroy\">\n        <!-- 连接池配置. -->\n        <property name=\"poolConfig\" ref=\"jedisPoolConfig\"/>\n        <!-- Redis服务主机. -->\n        <property name=\"hostName\" value=\"${redis.hostName}\"/>\n        <!-- Redis服务端口号. -->\n        <property name=\"port\" value=\"${redis.port}\"/>\n        <!-- Redis服务连接密码. -->\n        <property name=\"password\" value=\"${redis.password}\"/>\n        <!-- 连超时设置. -->\n        <property name=\"timeout\" value=\"${redis.timeout}\"/>\n        <!-- 是否使用连接池. -->\n        <property name=\"usePool\" value=\"true\"/>\n    </bean>\n\n    <!-- key序列化 -->\n    <bean id=\"stringRedisSerializer\" class=\"org.springframework.data.redis.serializer.StringRedisSerializer\"/>\n    <bean id=\"stringRedisTemplate\" class=\"org.springframework.data.redis.core.StringRedisTemplate\">\n           <property name=\"connectionFactory\" ref=\"jedisConnectionFactory\"/>\n    </bean>\n\n    <!-- Spring提供的访问Redis类. -->\n    <bean id=\"redisTemplate\" class=\"org.springframework.data.redis.core.RedisTemplate\">\n        <property name=\"connectionFactory\" ref=\"jedisConnectionFactory\"/>\n        <property name=\"keySerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.StringRedisSerializer\"/>\n        </property>\n        <property name=\"hashKeySerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.StringRedisSerializer\"/>\n        </property>\n        <property name=\"valueSerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\"/>\n        </property>\n        <property name=\"hashValueSerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\"/>\n        </property>\n    </bean>\n\n    <!-- 配置缓存 -->\n    <bean id=\"cacheManager\" class=\"org.springframework.data.redis.cache.RedisCacheManager\">\n        <constructor-arg ref=\"redisTemplate\" />\n    </bean>\n\n    <bean id=\"redisClient\" class=\"cn.com.servyou.gzyjzx.frame.redis.RedisClient\" />\n</beans>\n```","source":"_posts/Redis配置 & 常规操作类封装.md","raw":"---\ntitle: Redis配置 & 常规操作类封装\ndate: 2017-09-10 12:21:32\ntags:\n - JAVA\n - Redis\ncategories: \n - JAVA\n - Redis\n---\n\n\n直接上代码吧!!\n\n## 抽象基础类\n``` java\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.core.StringRedisTemplate;\nimport org.springframework.data.redis.serializer.RedisSerializer;\n\npublic abstract class AbstractBaseRedis<K, V> {\n\n    @Autowired\n    protected RedisTemplate<K, V> redisTemplate;\n\n    @Autowired\n    StringRedisTemplate stringRedisTemplate;\n\n    /**\n     * 设置redisTemplate\n     * @param redisTemplate the redisTemplate to set\n     */\n    public void setRedisTemplate(RedisTemplate<K, V> redisTemplate) {\n        this.redisTemplate = redisTemplate;\n    }\n\n    /**\n     * 获取 String  RedisSerializer\n     * <br>------------------------------<br>\n     */\n    protected RedisSerializer<String> getStringSerializer() {\n        return redisTemplate.getStringSerializer();\n    }\n\n}\n```\n\n<!-- more -->\n\n## JsonMapper\n```java\n\nimport java.io.IOException;\nimport java.util.TimeZone;\n\nimport org.apache.commons.lang3.StringEscapeUtils;\nimport org.apache.commons.lang3.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport com.alibaba.fastjson.JSON;\nimport com.fasterxml.jackson.annotation.JsonInclude.Include;\nimport com.fasterxml.jackson.core.JsonGenerator;\nimport com.fasterxml.jackson.core.JsonParser.Feature;\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.DeserializationFeature;\nimport com.fasterxml.jackson.databind.JavaType;\nimport com.fasterxml.jackson.databind.JsonSerializer;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.SerializationFeature;\nimport com.fasterxml.jackson.databind.SerializerProvider;\nimport com.fasterxml.jackson.databind.module.SimpleModule;\nimport com.fasterxml.jackson.databind.util.JSONPObject;\n\npublic class JsonMapper extends ObjectMapper {\n\n    private static final long serialVersionUID = 1L;\n\n    private final static Logger LOGGER = LoggerFactory.getLogger(JsonMapper.class);\n\n    private static JsonMapper mapper;\n\n    public JsonMapper() {\n        this(Include.NON_EMPTY);\n    }\n\n    public JsonMapper(Include include) {\n        // 设置输出时包含属性的风格\n        if (include != null) {\n            this.setSerializationInclusion(include);\n        }\n        // 设置输入时忽略在JSON字符串中存在但Java对象实际没有的属性\n        this.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);\n        // 空值处理为空串\n        this.getSerializerProvider().setNullValueSerializer(new JsonSerializer<Object>(){\n            @Override\n            public void serialize(Object value, JsonGenerator jgen,\n                                  SerializerProvider provider) throws IOException,\n                    JsonProcessingException {\n                jgen.writeString(\"\");\n            }\n        });\n        // 进行HTML解码。\n        this.registerModule(new SimpleModule().addSerializer(String.class, new JsonSerializer<String>(){\n            @Override\n            public void serialize(String value, JsonGenerator jgen,\n                                  SerializerProvider provider) throws IOException,\n                    JsonProcessingException {\n                jgen.writeString(StringEscapeUtils.unescapeHtml4(value));\n            }\n        }));\n        // 设置时区\n        this.setTimeZone(TimeZone.getDefault());//getTimeZone(\"GMT+8:00\")\n    }\n\n    /**\n     * 创建只输出非Null且非Empty(如List.isEmpty)的属性到Json字符串的Mapper,建议在外部接口中使用.\n     */\n    public static JsonMapper getInstance() {\n        if (mapper == null){\n            mapper = new JsonMapper().enableSimple();\n        }\n        return mapper;\n    }\n\n    /**\n     * 创建只输出初始值被改变的属性到Json字符串的Mapper, 最节约的存储方式，建议在内部接口中使用。\n     */\n    public static JsonMapper nonDefaultMapper() {\n        if (mapper == null){\n            mapper = new JsonMapper(Include.NON_DEFAULT);\n        }\n        return mapper;\n    }\n\n    /**\n     * Object可以是POJO，也可以是Collection或数组。\n     * 如果对象为Null, 返回\"null\".\n     * 如果集合为空集合, 返回\"[]\".\n     */\n    public String toJson(Object object) {\n        try {\n            return this.writeValueAsString(object);\n        } catch (IOException e) {\n            if(LOGGER.isWarnEnabled()){\n                LOGGER.warn(\"write to json string error:\" + object, e);\n            }\n            return null;\n        }\n    }\n\n    /**\n     * 反序列化POJO或简单Collection如List<String>.\n     *\n     * 如果JSON字符串为Null或\"null\"字符串, 返回Null.\n     * 如果JSON字符串为\"[]\", 返回空集合.\n     *\n     * 如需反序列化复杂Collection如List<MyBean>, 请使用fromJson(String,JavaType)\n     * @see #fromJson(String, JavaType)\n     */\n    public <T> T fromJson(String jsonString, Class<T> clazz) {\n        if (StringUtils.isEmpty(jsonString)) {\n            return null;\n        }\n        try {\n            return this.readValue(jsonString, clazz);\n        } catch (IOException e) {\n            if(LOGGER.isWarnEnabled()){\n                LOGGER.warn(\"parse json string error:\" + jsonString, e);\n            }\n            return null;\n        }\n    }\n\n    /**\n     * 反序列化复杂Collection如List<Bean>, 先使用函數createCollectionType构造类型,然后调用本函数.\n     * @see #createCollectionType(Class, Class...)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public <T> T fromJson(String jsonString, JavaType javaType) {\n        if (StringUtils.isEmpty(jsonString)) {\n            return null;\n        }\n        try {\n            return (T) this.readValue(jsonString, javaType);\n        } catch (IOException e) {\n            if(LOGGER.isWarnEnabled()){\n                LOGGER.warn(\"parse json string error:\" + jsonString, e);\n            }\n            return null;\n        }\n    }\n\n    /**\n     * 構造泛型的Collection Type如:\n     * ArrayList<MyBean>, 则调用constructCollectionType(ArrayList.class,MyBean.class)\n     * HashMap<String,MyBean>, 则调用(HashMap.class,String.class, MyBean.class)\n     */\n    public JavaType createCollectionType(Class<?> collectionClass, Class<?>... elementClasses) {\n        return this.getTypeFactory().constructParametricType(collectionClass, elementClasses);\n    }\n\n    /**\n     * 當JSON裡只含有Bean的部分屬性時，更新一個已存在Bean，只覆蓋該部分的屬性.\n     */\n    @SuppressWarnings(\"unchecked\")\n    public <T> T update(String jsonString, T object) {\n        try {\n            return (T) this.readerForUpdating(object).readValue(jsonString);\n        } catch (JsonProcessingException e) {\n            if(LOGGER.isWarnEnabled()){\n                LOGGER.warn(\"update json string:\" + jsonString + \" to object:\" + object + \" error.\", e);\n            }\n        } catch (IOException e) {\n            if(LOGGER.isWarnEnabled()){\n                LOGGER.warn(\"update json string:\" + jsonString + \" to object:\" + object + \" error.\", e);\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 輸出JSONP格式數據.\n     */\n    public String toJsonP(String functionName, Object object) {\n        return toJson(new JSONPObject(functionName, object));\n    }\n\n    /**\n     * 設定是否使用Enum的toString函數來讀寫Enum,\n     * 為False時時使用Enum的name()函數來讀寫Enum, 默認為False.\n     * 注意本函數一定要在Mapper創建後, 所有的讀寫動作之前調用.\n     */\n    public JsonMapper enableEnumUseToString() {\n        this.enable(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);\n        this.enable(DeserializationFeature.READ_ENUMS_USING_TO_STRING);\n        return this;\n    }\n\n    /**\n     * 允许单引号\n     * 允许不带引号的字段名称\n     */\n    public JsonMapper enableSimple() {\n        this.configure(Feature.ALLOW_SINGLE_QUOTES, true);\n        this.configure(Feature.ALLOW_UNQUOTED_FIELD_NAMES, true);\n        return this;\n    }\n\n    /**\n     * 取出Mapper做进一步的设置或使用其他序列化API.\n     */\n    public ObjectMapper getMapper() {\n        return this;\n    }\n\n    /**\n     * 对象转换为JSON字符串\n     * @param object\n     * @return\n     */\n    public static String toJsonString(Object object){\n        return JsonMapper.getInstance().toJson(object);\n    }\n\n    /**\n     * JSON字符串转换为对象\n     * @param jsonString\n     * @param clazz\n     * @return\n     */\n    public static <T> T fromJsonString(String jsonString, Class<T> clazz){\n        return JsonMapper.getInstance().fromJson(jsonString, clazz);\n    }\n\n\n    /**\n     * 将obj对象转换成 class类型的对象\n     * @param obj\n     * @param clazz\n     * @return\n     */\n    public static <T> T parseObject(Object obj, Class<T> clazz){\n        return JSON.parseObject(JSON.toJSONString(obj), clazz);\n    }\n}\n```\n\n## JSON序列化\n```java\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.commons.lang3.SerializationException;\n\nimport java.nio.charset.Charset;\n\n/**\n * Created by SIVEN on 17/9/4.\n */\npublic class JsonRedisSeriaziler {\n\n    public static final String EMPTY_JSON = \"{}\";\n\n    public static final Charset DEFAULT_CHARSET = Charset.forName(\"UTF-8\");\n\n    protected ObjectMapper objectMapper = new ObjectMapper();\n    public JsonRedisSeriaziler(){}\n\n    /**\n     * java-object as json-string\n     * @param object\n     * @return\n     */\n    public String seriazileAsString(Object object){\n        if (object== null) {\n            return EMPTY_JSON;\n        }\n        try {\n            return this.objectMapper.writeValueAsString(object);\n        } catch (Exception ex) {\n            throw new SerializationException(\"Could not write JSON: \" + ex.getMessage(), ex);\n        }\n    }\n\n    /**\n     * json-string to java-object\n     * @param str\n     * @return\n     */\n    public <T> T deserializeAsObject(String str,Class<T> clazz){\n        if(str == null || clazz == null){\n            return null;\n        }\n        try{\n            return this.objectMapper.readValue(str, clazz);\n        }catch (Exception ex) {\n            throw new SerializationException(\"Could not write JSON: \" + ex.getMessage(), ex);\n        }\n    }\n}\n```\n\n## RedisClient\n```java\n\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.JSONObject;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.dao.DataAccessException;\nimport org.springframework.data.redis.connection.RedisConnection;\nimport org.springframework.data.redis.core.BoundHashOperations;\nimport org.springframework.data.redis.core.RedisCallback;\nimport org.springframework.data.redis.core.ValueOperations;\nimport org.springframework.stereotype.Repository;\nimport org.springframework.util.CollectionUtils;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.TimeUnit;\n\n\n@Repository\npublic class RedisClient extends AbstractBaseRedis<String, Object> {\n\n    /**\n     * 删除缓存<br>\n     * 根据key精确匹配删除\n     * @param key\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void del(String... key){\n        if(key!=null && key.length > 0){\n            if(key.length == 1){\n                redisTemplate.delete(key[0]);\n            }else{\n                redisTemplate.delete(CollectionUtils.arrayToList(key));\n            }\n        }\n    }\n\n    /**\n     * 批量删除<br>\n     * （该操作会执行模糊查询，请尽量不要使用，以免影响性能或误删）\n     * @param pattern\n     */\n    public void batchDel(String... pattern){\n        for (String kp : pattern) {\n            redisTemplate.delete(redisTemplate.keys(kp + \"*\"));\n        }\n    }\n\n    /**\n     * 取得缓存（int型）\n     * @param key\n     * @return\n     */\n    public Integer getInt(String key){\n        String value = stringRedisTemplate.boundValueOps(key).get();\n        if(StringUtils.isNotBlank(value)){\n            return Integer.valueOf(value);\n        }\n        return null;\n    }\n\n    /**\n     * 取得缓存（字符串类型）\n     * @param key\n     * @return\n     */\n    public String getStr(String key){\n        return stringRedisTemplate.boundValueOps(key).get();\n    }\n\n    /**\n     * 取得缓存（字符串类型）\n     * @param key\n     * @return\n     */\n    public String getStr(String key, boolean retain){\n        String value = stringRedisTemplate.boundValueOps(key).get();\n        if(!retain){\n            redisTemplate.delete(key);\n        }\n        return value;\n    }\n\n    /**\n     * 获取缓存<br>\n     * 注：基本数据类型(Character除外)，请直接使用get(String key, Class<T> clazz)取值\n     * @param key\n     * @return\n     */\n    public Object getObj(String key){\n        return redisTemplate.boundValueOps(key).get();\n    }\n\n    /**\n     * 获取缓存<br>\n     * 注：java 8种基本类型的数据请直接使用get(String key, Class<T> clazz)取值\n     * @param key\n     * @param retain    是否保留\n     * @return\n     */\n    public Object getObj(String key, boolean retain){\n        Object obj = redisTemplate.boundValueOps(key).get();\n        if(!retain){\n            redisTemplate.delete(key);\n        }\n        return obj;\n    }\n\n    /**\n     * 获取缓存<br>\n     * 注：该方法暂不支持Character数据类型\n     * @param key   key\n     * @param clazz 类型\n     * @return\n     */\n    @SuppressWarnings(\"unchecked\")\n    public <T> T get(String key, Class<T> clazz) {\n        return (T)redisTemplate.boundValueOps(key).get();\n    }\n\n    /**\n     * 获取缓存json对象<br>\n     * @param key   key\n     * @param clazz 类型\n     * @return\n     */\n    public <T> T getJson(String key, Class<T> clazz) {\n        return JsonMapper.fromJsonString(stringRedisTemplate.boundValueOps(key).get(), clazz);\n    }\n\n    /**\n     * 将value对象写入缓存\n     * @param key\n     * @param value\n     * @param time 失效时间(秒)\n     */\n    public void set(String key,Object value,Long time){\n        if(value.getClass().equals(String.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else if(value.getClass().equals(Integer.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else if(value.getClass().equals(Double.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else if(value.getClass().equals(Float.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else if(value.getClass().equals(Short.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else if(value.getClass().equals(Long.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else if(value.getClass().equals(Boolean.class)){\n            stringRedisTemplate.opsForValue().set(key, value.toString());\n        }else{\n            redisTemplate.opsForValue().set(key, value);\n        }\n        if(time > 0){\n            redisTemplate.expire(key, time, TimeUnit.SECONDS);\n        }\n    }\n\n    /**\n     * 将value对象以JSON格式写入缓存\n     * @param key\n     * @param value\n     * @param time 失效时间(秒)\n     */\n    public void setJson(String key,Object value,Long time){\n        stringRedisTemplate.opsForValue().set(key, JsonMapper.toJsonString(value));\n        if(time > 0){\n            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);\n        }\n    }\n\n    /**\n     * 更新key对象field的值\n     * @param key   缓存key\n     * @param field 缓存对象field\n     * @param value 缓存对象field值\n     */\n    public void setJsonField(String key, String field, String value){\n        JSONObject obj = JSON.parseObject(stringRedisTemplate.boundValueOps(key).get());\n        obj.put(field, value);\n        stringRedisTemplate.opsForValue().set(key, obj.toJSONString());\n    }\n\n\n    /**\n     * 递减操作\n     * @param key\n     * @param by\n     * @return\n     */\n    public double decr(String key, double by){\n        return redisTemplate.opsForValue().increment(key, -by);\n    }\n\n    /**\n     * 递增操作\n     * @param key\n     * @param by\n     * @return\n     */\n    public double incr(String key, double by){\n        return redisTemplate.opsForValue().increment(key, by);\n    }\n\n    /**\n     * 获取double类型值\n     * @param key\n     * @return\n     */\n    public double getDouble(String key) {\n        String value = stringRedisTemplate.boundValueOps(key).get();\n        if(StringUtils.isNotBlank(value)){\n            return Double.valueOf(value);\n        }\n        return 0d;\n    }\n\n    /**\n     * 设置double类型值\n     * @param key\n     * @param value\n     * @param time 失效时间(秒)\n     */\n    public void setDouble(String key, double value, Long time) {\n        stringRedisTemplate.opsForValue().set(key, String.valueOf(value));\n        if(time > 0){\n            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);\n        }\n    }\n\n    /**\n     * 设置double类型值\n     * @param key\n     * @param value\n     * @param time 失效时间(秒)\n     */\n    public void setInt(String key, int value, Long time) {\n        stringRedisTemplate.opsForValue().set(key, String.valueOf(value));\n        if(time > 0){\n            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);\n        }\n    }\n\n    /**\n     * 将map写入缓存\n     * @param key\n     * @param map\n     * @param time 失效时间(秒)\n     */\n    public <T> void setMap(String key, Map<String, T> map, Long time){\n        redisTemplate.opsForHash().putAll(key, map);\n    }\n\n    /**\n     * 将map写入缓存\n     * @param key\n     * @param map\n     * @param time 失效时间(秒)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public <T> void setMap(String key, T obj, Long time){\n        Map<String, String> map = (Map<String, String>)JsonMapper.parseObject(obj, Map.class);\n        redisTemplate.opsForHash().putAll(key, map);\n    }\n\n\n\n    /**\n     * 向key对应的map中添加缓存对象\n     * @param key\n     * @param map\n     */\n    public <T> void addMap(String key, Map<String, T> map){\n        redisTemplate.opsForHash().putAll(key, map);\n    }\n\n    /**\n     * 向key对应的map中添加缓存对象\n     * @param key   cache对象key\n     * @param field map对应的key\n     * @param value     值\n     */\n    public void addMap(String key, String field, String value){\n        redisTemplate.opsForHash().put(key, field, value);\n    }\n\n    /**\n     * 向key对应的map中添加缓存对象\n     * @param key   cache对象key\n     * @param field map对应的key\n     * @param obj   对象\n     */\n    public <T> void addMap(String key, String field, T obj){\n        redisTemplate.opsForHash().put(key, field, obj);\n    }\n\n    /**\n     * 获取map缓存\n     * @param key\n     * @param clazz\n     * @return\n     */\n    public <T> Map<String, T> mget(String key, Class<T> clazz){\n        BoundHashOperations<String, String, T> boundHashOperations = redisTemplate.boundHashOps(key);\n        return boundHashOperations.entries();\n    }\n\n    /**\n     * 获取map缓存\n     * @param key\n     * @param clazz\n     * @return\n     */\n    public <T> T getMap(String key, Class<T> clazz){\n        BoundHashOperations<String, String, String> boundHashOperations = redisTemplate.boundHashOps(key);\n        Map<String, String> map = boundHashOperations.entries();\n        return JsonMapper.parseObject(map, clazz);\n    }\n\n    /**\n     * 获取map缓存中的某个对象\n     * @param key\n     * @param field\n     * @param clazz\n     * @return\n     */\n    @SuppressWarnings(\"unchecked\")\n    public <T> T getMapField(String key, String field, Class<T> clazz){\n        return (T)redisTemplate.boundHashOps(key).get(field);\n    }\n\n    /**\n     * 删除map中的某个对象\n     * @author lh\n     * @date 2016年8月10日\n     * @param key   map对应的key\n     * @param field map中该对象的key\n     */\n    public void delMapField(String key, String... field){\n        BoundHashOperations<String, String, ?> boundHashOperations = redisTemplate.boundHashOps(key);\n        boundHashOperations.delete(field);\n    }\n\n    /**\n     * 指定缓存的失效时间\n     *\n     * @author FangJun\n     * @date 2016年8月14日\n     * @param key 缓存KEY\n     * @param time 失效时间(秒)\n     */\n    public void expire(String key, Long time) {\n        if(time > 0){\n            redisTemplate.expire(key, time, TimeUnit.SECONDS);\n        }\n    }\n\n    /**\n     * 添加set\n     * @param key\n     * @param value\n     */\n    public void sadd(String key, String... value) {\n        redisTemplate.boundSetOps(key).add(value);\n    }\n\n    /**\n     * 删除set集合中的对象\n     * @param key\n     * @param value\n     */\n    public void srem(String key, String... value) {\n        redisTemplate.boundSetOps(key).remove(value);\n    }\n\n    /**\n     * set重命名\n     * @param oldkey\n     * @param newkey\n     */\n    public void srename(String oldkey, String newkey){\n        redisTemplate.boundSetOps(oldkey).rename(newkey);\n    }\n\n    /**\n     * 短信缓存\n     * @author fxl\n     * @date 2016年9月11日\n     * @param key\n     * @param value\n     * @param time\n     */\n    public void setIntForPhone(String key,Object value,int time){\n        stringRedisTemplate.opsForValue().set(key, JsonMapper.toJsonString(value));\n        if(time > 0){\n            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);\n        }\n    }\n\n    /**\n     * 模糊查询keys\n     * @param pattern\n     * @return\n     */\n    public Set<String> keys(String pattern){\n        return redisTemplate.keys(pattern);\n    }\n\n}\n```\n\n## redis xml文件配置\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"\n\t\thttp://www.springframework.org/schema/beans\n\t\thttp://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n\t\thttp://www.springframework.org/schema/context\n\t\thttp://www.springframework.org/schema/context/spring-context-4.0.xsd\"\n       default-lazy-init=\"false\">\n\n    <description>Jedis Config</description>\n\n    <context:property-placeholder location=\"classpath:config/application-jedis.properties\" ignore-unresolvable=\"true\"/>\n\n\n    <!-- 连接池配置. -->\n    <bean id=\"jedisPoolConfig\" class=\"redis.clients.jedis.JedisPoolConfig\">\n        <!-- 连接池中最大连接数。高版本：maxTotal，低版本：maxActive -->\n        <property name=\"maxTotal\" value=\"${redis.maxTotal}\"/>\n        <!-- 连接池中最大空闲的连接数. -->\n        <property name=\"maxIdle\" value=\"${redis.maxIdle}\"/>\n        <!-- 连接池中最少空闲的连接数. -->\n        <property name=\"minIdle\" value=\"${redis.minIdle}\"/>\n        <!-- 当连接池资源耗尽时，调用者最大阻塞的时间，超时将跑出异常。单位，毫秒数;默认为-1.表示永不超时。高版本：maxWaitMillis，低版本：maxWait -->\n        <property name=\"maxWaitMillis\" value=\"${redis.maxWaitMillis}\"/>\n        <!-- 连接空闲的最小时间，达到此值后空闲连接将可能会被移除。负值(-1)表示不移除. -->\n        <property name=\"minEvictableIdleTimeMillis\" value=\"${redis.minEvictableIdleTimeMillis}\"/>\n        <!-- 对于“空闲链接”检测线程而言，每次检测的链接资源的个数。默认为3 -->\n        <property name=\"numTestsPerEvictionRun\" value=\"${redis.numTestsPerEvictionRun}\"/>\n        <!-- “空闲链接”检测线程，检测的周期，毫秒数。如果为负值，表示不运行“检测线程”。默认为-1. -->\n        <property name=\"timeBetweenEvictionRunsMillis\" value=\"${redis.timeBetweenEvictionRunsMillis}\"/>\n        <!-- testOnBorrow:向调用者输出“链接”资源时，是否检测是有有效，如果无效则从连接池中移除，并尝试获取继续获取。默认为false。建议保持默认值. -->\n        <property name=\"testOnBorrow\" value=\"${redis.testOnBorrow}\"/>\n        <!-- testOnReturn:向连接池“归还”链接时，是否检测“链接”对象的有效性。默认为false。建议保持默认值.-->\n        <property name=\"testOnReturn\" value=\"${redis.testOnReturn}\"/>\n        <!-- testWhileIdle:向调用者输出“链接”对象时，是否检测它的空闲超时；默认为false。如果“链接”空闲超时，将会被移除。建议保持默认值. -->\n        <!-- whenExhaustedAction:当“连接池”中active数量达到阀值时，即“链接”资源耗尽时，连接池需要采取的手段, 默认为1(0:抛出异常。1:阻塞，直到有可用链接资源。2:强制创建新的链接资源) -->\n    </bean>\n    <!-- Spring提供的Redis连接工厂 -->\n    <bean id=\"jedisConnectionFactory\" class=\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"\n          destroy-method=\"destroy\">\n        <!-- 连接池配置. -->\n        <property name=\"poolConfig\" ref=\"jedisPoolConfig\"/>\n        <!-- Redis服务主机. -->\n        <property name=\"hostName\" value=\"${redis.hostName}\"/>\n        <!-- Redis服务端口号. -->\n        <property name=\"port\" value=\"${redis.port}\"/>\n        <!-- Redis服务连接密码. -->\n        <property name=\"password\" value=\"${redis.password}\"/>\n        <!-- 连超时设置. -->\n        <property name=\"timeout\" value=\"${redis.timeout}\"/>\n        <!-- 是否使用连接池. -->\n        <property name=\"usePool\" value=\"true\"/>\n    </bean>\n\n    <!-- key序列化 -->\n    <bean id=\"stringRedisSerializer\" class=\"org.springframework.data.redis.serializer.StringRedisSerializer\"/>\n    <bean id=\"stringRedisTemplate\" class=\"org.springframework.data.redis.core.StringRedisTemplate\">\n           <property name=\"connectionFactory\" ref=\"jedisConnectionFactory\"/>\n    </bean>\n\n    <!-- Spring提供的访问Redis类. -->\n    <bean id=\"redisTemplate\" class=\"org.springframework.data.redis.core.RedisTemplate\">\n        <property name=\"connectionFactory\" ref=\"jedisConnectionFactory\"/>\n        <property name=\"keySerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.StringRedisSerializer\"/>\n        </property>\n        <property name=\"hashKeySerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.StringRedisSerializer\"/>\n        </property>\n        <property name=\"valueSerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\"/>\n        </property>\n        <property name=\"hashValueSerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\"/>\n        </property>\n    </bean>\n\n    <!-- 配置缓存 -->\n    <bean id=\"cacheManager\" class=\"org.springframework.data.redis.cache.RedisCacheManager\">\n        <constructor-arg ref=\"redisTemplate\" />\n    </bean>\n\n    <bean id=\"redisClient\" class=\"cn.com.servyou.gzyjzx.frame.redis.RedisClient\" />\n</beans>\n```","slug":"Redis配置 & 常规操作类封装","published":1,"updated":"2017-09-16T11:16:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7n84lkb0004zxrxgzphtlvv","content":"<p>直接上代码吧!!</p>\n<h2 id=\"抽象基础类\"><a href=\"#抽象基础类\" class=\"headerlink\" title=\"抽象基础类\"></a>抽象基础类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisTemplate;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.StringRedisTemplate;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.serializer.RedisSerializer;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractBaseRedis</span>&lt;<span class=\"title\">K</span>, <span class=\"title\">V</span>&gt; </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    <span class=\"keyword\">protected</span> RedisTemplate&lt;K, V&gt; redisTemplate;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    StringRedisTemplate stringRedisTemplate;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置redisTemplate</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> redisTemplate the redisTemplate to set</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRedisTemplate</span><span class=\"params\">(RedisTemplate&lt;K, V&gt; redisTemplate)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.redisTemplate = redisTemplate;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取 String  RedisSerializer</span></div><div class=\"line\"><span class=\"comment\">     * &lt;br&gt;------------------------------&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> RedisSerializer&lt;String&gt; <span class=\"title\">getStringSerializer</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.getStringSerializer();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"JsonMapper\"><a href=\"#JsonMapper\" class=\"headerlink\" title=\"JsonMapper\"></a>JsonMapper</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.TimeZone;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.StringEscapeUtils;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.StringUtils;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.annotation.JsonInclude.Include;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.core.JsonGenerator;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.core.JsonParser.Feature;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.core.JsonProcessingException;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.DeserializationFeature;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.JavaType;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.JsonSerializer;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.ObjectMapper;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.SerializationFeature;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.SerializerProvider;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.<span class=\"keyword\">module</span>.SimpleModule;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.util.JSONPObject;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JsonMapper</span> <span class=\"keyword\">extends</span> <span class=\"title\">ObjectMapper</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> Logger LOGGER = LoggerFactory.getLogger(JsonMapper.class);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> JsonMapper mapper;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JsonMapper</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>(Include.NON_EMPTY);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JsonMapper</span><span class=\"params\">(Include include)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 设置输出时包含属性的风格</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (include != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.setSerializationInclusion(include);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">// 设置输入时忽略在JSON字符串中存在但Java对象实际没有的属性</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);</div><div class=\"line\">        <span class=\"comment\">// 空值处理为空串</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.getSerializerProvider().setNullValueSerializer(<span class=\"keyword\">new</span> JsonSerializer&lt;Object&gt;()&#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">serialize</span><span class=\"params\">(Object value, JsonGenerator jgen,</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"params\">                                  SerializerProvider provider)</span> <span class=\"keyword\">throws</span> IOException,</span></div><div class=\"line\"><span class=\"function\">                    JsonProcessingException </span>&#123;</div><div class=\"line\">                jgen.writeString(<span class=\"string\">\"\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">        <span class=\"comment\">// 进行HTML解码。</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.registerModule(<span class=\"keyword\">new</span> SimpleModule().addSerializer(String.class, <span class=\"keyword\">new</span> JsonSerializer&lt;String&gt;()&#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">serialize</span><span class=\"params\">(String value, JsonGenerator jgen,</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"params\">                                  SerializerProvider provider)</span> <span class=\"keyword\">throws</span> IOException,</span></div><div class=\"line\"><span class=\"function\">                    JsonProcessingException </span>&#123;</div><div class=\"line\">                jgen.writeString(StringEscapeUtils.unescapeHtml4(value));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;));</div><div class=\"line\">        <span class=\"comment\">// 设置时区</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.setTimeZone(TimeZone.getDefault());<span class=\"comment\">//getTimeZone(\"GMT+8:00\")</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 创建只输出非Null且非Empty(如List.isEmpty)的属性到Json字符串的Mapper,建议在外部接口中使用.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> JsonMapper <span class=\"title\">getInstance</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (mapper == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            mapper = <span class=\"keyword\">new</span> JsonMapper().enableSimple();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> mapper;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 创建只输出初始值被改变的属性到Json字符串的Mapper, 最节约的存储方式，建议在内部接口中使用。</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> JsonMapper <span class=\"title\">nonDefaultMapper</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (mapper == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            mapper = <span class=\"keyword\">new</span> JsonMapper(Include.NON_DEFAULT);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> mapper;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Object可以是POJO，也可以是Collection或数组。</span></div><div class=\"line\"><span class=\"comment\">     * 如果对象为Null, 返回\"null\".</span></div><div class=\"line\"><span class=\"comment\">     * 如果集合为空集合, 返回\"[]\".</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toJson</span><span class=\"params\">(Object object)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.writeValueAsString(object);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(LOGGER.isWarnEnabled())&#123;</div><div class=\"line\">                LOGGER.warn(<span class=\"string\">\"write to json string error:\"</span> + object, e);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 反序列化POJO或简单Collection如List&lt;String&gt;.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * 如果JSON字符串为Null或\"null\"字符串, 返回Null.</span></div><div class=\"line\"><span class=\"comment\">     * 如果JSON字符串为\"[]\", 返回空集合.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * 如需反序列化复杂Collection如List&lt;MyBean&gt;, 请使用fromJson(String,JavaType)</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@see</span> #fromJson(String, JavaType)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">fromJson</span><span class=\"params\">(String jsonString, Class&lt;T&gt; clazz)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.isEmpty(jsonString)) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.readValue(jsonString, clazz);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(LOGGER.isWarnEnabled())&#123;</div><div class=\"line\">                LOGGER.warn(<span class=\"string\">\"parse json string error:\"</span> + jsonString, e);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 反序列化复杂Collection如List&lt;Bean&gt;, 先使用函數createCollectionType构造类型,然后调用本函数.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@see</span> #createCollectionType(Class, Class...)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">fromJson</span><span class=\"params\">(String jsonString, JavaType javaType)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.isEmpty(jsonString)) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> (T) <span class=\"keyword\">this</span>.readValue(jsonString, javaType);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(LOGGER.isWarnEnabled())&#123;</div><div class=\"line\">                LOGGER.warn(<span class=\"string\">\"parse json string error:\"</span> + jsonString, e);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 構造泛型的Collection Type如:</span></div><div class=\"line\"><span class=\"comment\">     * ArrayList&lt;MyBean&gt;, 则调用constructCollectionType(ArrayList.class,MyBean.class)</span></div><div class=\"line\"><span class=\"comment\">     * HashMap&lt;String,MyBean&gt;, 则调用(HashMap.class,String.class, MyBean.class)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JavaType <span class=\"title\">createCollectionType</span><span class=\"params\">(Class&lt;?&gt; collectionClass, Class&lt;?&gt;... elementClasses)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.getTypeFactory().constructParametricType(collectionClass, elementClasses);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 當JSON裡只含有Bean的部分屬性時，更新一個已存在Bean，只覆蓋該部分的屬性.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">update</span><span class=\"params\">(String jsonString, T object)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> (T) <span class=\"keyword\">this</span>.readerForUpdating(object).readValue(jsonString);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JsonProcessingException e) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(LOGGER.isWarnEnabled())&#123;</div><div class=\"line\">                LOGGER.warn(<span class=\"string\">\"update json string:\"</span> + jsonString + <span class=\"string\">\" to object:\"</span> + object + <span class=\"string\">\" error.\"</span>, e);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(LOGGER.isWarnEnabled())&#123;</div><div class=\"line\">                LOGGER.warn(<span class=\"string\">\"update json string:\"</span> + jsonString + <span class=\"string\">\" to object:\"</span> + object + <span class=\"string\">\" error.\"</span>, e);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 輸出JSONP格式數據.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toJsonP</span><span class=\"params\">(String functionName, Object object)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> toJson(<span class=\"keyword\">new</span> JSONPObject(functionName, object));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 設定是否使用Enum的toString函數來讀寫Enum,</span></div><div class=\"line\"><span class=\"comment\">     * 為False時時使用Enum的name()函數來讀寫Enum, 默認為False.</span></div><div class=\"line\"><span class=\"comment\">     * 注意本函數一定要在Mapper創建後, 所有的讀寫動作之前調用.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonMapper <span class=\"title\">enableEnumUseToString</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.enable(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);</div><div class=\"line\">        <span class=\"keyword\">this</span>.enable(DeserializationFeature.READ_ENUMS_USING_TO_STRING);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 允许单引号</span></div><div class=\"line\"><span class=\"comment\">     * 允许不带引号的字段名称</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonMapper <span class=\"title\">enableSimple</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.configure(Feature.ALLOW_SINGLE_QUOTES, <span class=\"keyword\">true</span>);</div><div class=\"line\">        <span class=\"keyword\">this</span>.configure(Feature.ALLOW_UNQUOTED_FIELD_NAMES, <span class=\"keyword\">true</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 取出Mapper做进一步的设置或使用其他序列化API.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ObjectMapper <span class=\"title\">getMapper</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 对象转换为JSON字符串</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> object</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">toJsonString</span><span class=\"params\">(Object object)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> JsonMapper.getInstance().toJson(object);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * JSON字符串转换为对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jsonString</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">fromJsonString</span><span class=\"params\">(String jsonString, Class&lt;T&gt; clazz)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> JsonMapper.getInstance().fromJson(jsonString, clazz);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 将obj对象转换成 class类型的对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> obj</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">parseObject</span><span class=\"params\">(Object obj, Class&lt;T&gt; clazz)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> JSON.parseObject(JSON.toJSONString(obj), clazz);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"JSON序列化\"><a href=\"#JSON序列化\" class=\"headerlink\" title=\"JSON序列化\"></a>JSON序列化</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.ObjectMapper;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.SerializationException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.Charset;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Created by SIVEN on 17/9/4.</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JsonRedisSeriaziler</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String EMPTY_JSON = <span class=\"string\">\"&#123;&#125;\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Charset DEFAULT_CHARSET = Charset.forName(<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">protected</span> ObjectMapper objectMapper = <span class=\"keyword\">new</span> ObjectMapper();</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JsonRedisSeriaziler</span><span class=\"params\">()</span></span>&#123;&#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * java-object as json-string</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> object</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">seriazileAsString</span><span class=\"params\">(Object object)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (object== <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> EMPTY_JSON;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.objectMapper.writeValueAsString(object);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception ex) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SerializationException(<span class=\"string\">\"Could not write JSON: \"</span> + ex.getMessage(), ex);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * json-string to java-object</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> str</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">deserializeAsObject</span><span class=\"params\">(String str,Class&lt;T&gt; clazz)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(str == <span class=\"keyword\">null</span> || clazz == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.objectMapper.readValue(str, clazz);</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Exception ex) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SerializationException(<span class=\"string\">\"Could not write JSON: \"</span> + ex.getMessage(), ex);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"RedisClient\"><a href=\"#RedisClient\" class=\"headerlink\" title=\"RedisClient\"></a>RedisClient</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</div><div class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSONObject;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.StringUtils;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.dao.DataAccessException;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.connection.RedisConnection;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.BoundHashOperations;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisCallback;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.ValueOperations;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Repository;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.CollectionUtils;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Repository</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RedisClient</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractBaseRedis</span>&lt;<span class=\"title\">String</span>, <span class=\"title\">Object</span>&gt; </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 删除缓存&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     * 根据key精确匹配删除</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">del</span><span class=\"params\">(String... key)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(key!=<span class=\"keyword\">null</span> &amp;&amp; key.length &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(key.length == <span class=\"number\">1</span>)&#123;</div><div class=\"line\">                redisTemplate.delete(key[<span class=\"number\">0</span>]);</div><div class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                redisTemplate.delete(CollectionUtils.arrayToList(key));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 批量删除&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     * （该操作会执行模糊查询，请尽量不要使用，以免影响性能或误删）</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> pattern</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">batchDel</span><span class=\"params\">(String... pattern)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (String kp : pattern) &#123;</div><div class=\"line\">            redisTemplate.delete(redisTemplate.keys(kp + <span class=\"string\">\"*\"</span>));</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 取得缓存（int型）</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getInt</span><span class=\"params\">(String key)</span></span>&#123;</div><div class=\"line\">        String value = stringRedisTemplate.boundValueOps(key).get();</div><div class=\"line\">        <span class=\"keyword\">if</span>(StringUtils.isNotBlank(value))&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> Integer.valueOf(value);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 取得缓存（字符串类型）</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getStr</span><span class=\"params\">(String key)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> stringRedisTemplate.boundValueOps(key).get();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 取得缓存（字符串类型）</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getStr</span><span class=\"params\">(String key, <span class=\"keyword\">boolean</span> retain)</span></span>&#123;</div><div class=\"line\">        String value = stringRedisTemplate.boundValueOps(key).get();</div><div class=\"line\">        <span class=\"keyword\">if</span>(!retain)&#123;</div><div class=\"line\">            redisTemplate.delete(key);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> value;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取缓存&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     * 注：基本数据类型(Character除外)，请直接使用get(String key, Class&lt;T&gt; clazz)取值</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">getObj</span><span class=\"params\">(String key)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.boundValueOps(key).get();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取缓存&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     * 注：java 8种基本类型的数据请直接使用get(String key, Class&lt;T&gt; clazz)取值</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> retain    是否保留</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">getObj</span><span class=\"params\">(String key, <span class=\"keyword\">boolean</span> retain)</span></span>&#123;</div><div class=\"line\">        Object obj = redisTemplate.boundValueOps(key).get();</div><div class=\"line\">        <span class=\"keyword\">if</span>(!retain)&#123;</div><div class=\"line\">            redisTemplate.delete(key);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> obj;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取缓存&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     * 注：该方法暂不支持Character数据类型</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz 类型</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">get</span><span class=\"params\">(String key, Class&lt;T&gt; clazz)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> (T)redisTemplate.boundValueOps(key).get();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取缓存json对象&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz 类型</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getJson</span><span class=\"params\">(String key, Class&lt;T&gt; clazz)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> JsonMapper.fromJsonString(stringRedisTemplate.boundValueOps(key).get(), clazz);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 将value对象写入缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(String key,Object value,Long time)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(value.getClass().equals(String.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value.getClass().equals(Integer.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value.getClass().equals(Double.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value.getClass().equals(Float.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value.getClass().equals(Short.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value.getClass().equals(Long.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value.getClass().equals(Boolean.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            redisTemplate.opsForValue().set(key, value);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(time &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            redisTemplate.expire(key, time, TimeUnit.SECONDS);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 将value对象以JSON格式写入缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJson</span><span class=\"params\">(String key,Object value,Long time)</span></span>&#123;</div><div class=\"line\">        stringRedisTemplate.opsForValue().set(key, JsonMapper.toJsonString(value));</div><div class=\"line\">        <span class=\"keyword\">if</span>(time &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 更新key对象field的值</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   缓存key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> field 缓存对象field</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 缓存对象field值</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJsonField</span><span class=\"params\">(String key, String field, String value)</span></span>&#123;</div><div class=\"line\">        JSONObject obj = JSON.parseObject(stringRedisTemplate.boundValueOps(key).get());</div><div class=\"line\">        obj.put(field, value);</div><div class=\"line\">        stringRedisTemplate.opsForValue().set(key, obj.toJSONString());</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 递减操作</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> by</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">decr</span><span class=\"params\">(String key, <span class=\"keyword\">double</span> by)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForValue().increment(key, -by);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 递增操作</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> by</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">incr</span><span class=\"params\">(String key, <span class=\"keyword\">double</span> by)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForValue().increment(key, by);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取double类型值</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">getDouble</span><span class=\"params\">(String key)</span> </span>&#123;</div><div class=\"line\">        String value = stringRedisTemplate.boundValueOps(key).get();</div><div class=\"line\">        <span class=\"keyword\">if</span>(StringUtils.isNotBlank(value))&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> Double.valueOf(value);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>d;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置double类型值</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDouble</span><span class=\"params\">(String key, <span class=\"keyword\">double</span> value, Long time)</span> </span>&#123;</div><div class=\"line\">        stringRedisTemplate.opsForValue().set(key, String.valueOf(value));</div><div class=\"line\">        <span class=\"keyword\">if</span>(time &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置double类型值</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setInt</span><span class=\"params\">(String key, <span class=\"keyword\">int</span> value, Long time)</span> </span>&#123;</div><div class=\"line\">        stringRedisTemplate.opsForValue().set(key, String.valueOf(value));</div><div class=\"line\">        <span class=\"keyword\">if</span>(time &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 将map写入缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> map</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setMap</span><span class=\"params\">(String key, Map&lt;String, T&gt; map, Long time)</span></span>&#123;</div><div class=\"line\">        redisTemplate.opsForHash().putAll(key, map);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 将map写入缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> map</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setMap</span><span class=\"params\">(String key, T obj, Long time)</span></span>&#123;</div><div class=\"line\">        Map&lt;String, String&gt; map = (Map&lt;String, String&gt;)JsonMapper.parseObject(obj, Map.class);</div><div class=\"line\">        redisTemplate.opsForHash().putAll(key, map);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 向key对应的map中添加缓存对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> map</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addMap</span><span class=\"params\">(String key, Map&lt;String, T&gt; map)</span></span>&#123;</div><div class=\"line\">        redisTemplate.opsForHash().putAll(key, map);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 向key对应的map中添加缓存对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   cache对象key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> field map对应的key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value     值</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addMap</span><span class=\"params\">(String key, String field, String value)</span></span>&#123;</div><div class=\"line\">        redisTemplate.opsForHash().put(key, field, value);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 向key对应的map中添加缓存对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   cache对象key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> field map对应的key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> obj   对象</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addMap</span><span class=\"params\">(String key, String field, T obj)</span></span>&#123;</div><div class=\"line\">        redisTemplate.opsForHash().put(key, field, obj);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取map缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">Map&lt;String, T&gt; <span class=\"title\">mget</span><span class=\"params\">(String key, Class&lt;T&gt; clazz)</span></span>&#123;</div><div class=\"line\">        BoundHashOperations&lt;String, String, T&gt; boundHashOperations = redisTemplate.boundHashOps(key);</div><div class=\"line\">        <span class=\"keyword\">return</span> boundHashOperations.entries();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取map缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getMap</span><span class=\"params\">(String key, Class&lt;T&gt; clazz)</span></span>&#123;</div><div class=\"line\">        BoundHashOperations&lt;String, String, String&gt; boundHashOperations = redisTemplate.boundHashOps(key);</div><div class=\"line\">        Map&lt;String, String&gt; map = boundHashOperations.entries();</div><div class=\"line\">        <span class=\"keyword\">return</span> JsonMapper.parseObject(map, clazz);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取map缓存中的某个对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> field</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getMapField</span><span class=\"params\">(String key, String field, Class&lt;T&gt; clazz)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> (T)redisTemplate.boundHashOps(key).get(field);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 删除map中的某个对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> lh</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2016年8月10日</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   map对应的key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> field map中该对象的key</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">delMapField</span><span class=\"params\">(String key, String... field)</span></span>&#123;</div><div class=\"line\">        BoundHashOperations&lt;String, String, ?&gt; boundHashOperations = redisTemplate.boundHashOps(key);</div><div class=\"line\">        boundHashOperations.delete(field);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 指定缓存的失效时间</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> FangJun</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2016年8月14日</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存KEY</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">expire</span><span class=\"params\">(String key, Long time)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(time &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            redisTemplate.expire(key, time, TimeUnit.SECONDS);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 添加set</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sadd</span><span class=\"params\">(String key, String... value)</span> </span>&#123;</div><div class=\"line\">        redisTemplate.boundSetOps(key).add(value);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 删除set集合中的对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">srem</span><span class=\"params\">(String key, String... value)</span> </span>&#123;</div><div class=\"line\">        redisTemplate.boundSetOps(key).remove(value);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * set重命名</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> oldkey</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> newkey</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">srename</span><span class=\"params\">(String oldkey, String newkey)</span></span>&#123;</div><div class=\"line\">        redisTemplate.boundSetOps(oldkey).rename(newkey);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 短信缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> fxl</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2016年9月11日</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setIntForPhone</span><span class=\"params\">(String key,Object value,<span class=\"keyword\">int</span> time)</span></span>&#123;</div><div class=\"line\">        stringRedisTemplate.opsForValue().set(key, JsonMapper.toJsonString(value));</div><div class=\"line\">        <span class=\"keyword\">if</span>(time &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 模糊查询keys</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> pattern</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Set&lt;String&gt; <span class=\"title\">keys</span><span class=\"params\">(String pattern)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.keys(pattern);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"redis-xml文件配置\"><a href=\"#redis-xml文件配置\" class=\"headerlink\" title=\"redis xml文件配置\"></a>redis xml文件配置</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></div><div class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></div><div class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></div><div class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></span></div><div class=\"line\"><span class=\"tag\"><span class=\"string\">\t\thttp://www.springframework.org/schema/beans</span></span></div><div class=\"line\"><span class=\"tag\"><span class=\"string\">\t\thttp://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></div><div class=\"line\"><span class=\"tag\"><span class=\"string\">\t\thttp://www.springframework.org/schema/context</span></span></div><div class=\"line\"><span class=\"tag\"><span class=\"string\">\t\thttp://www.springframework.org/schema/context/spring-context-4.0.xsd\"</span></span></div><div class=\"line\"><span class=\"tag\">       <span class=\"attr\">default-lazy-init</span>=<span class=\"string\">\"false\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Jedis Config<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:config/application-jedis.properties\"</span> <span class=\"attr\">ignore-unresolvable</span>=<span class=\"string\">\"true\"</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 连接池配置. --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jedisPoolConfig\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"redis.clients.jedis.JedisPoolConfig\"</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 连接池中最大连接数。高版本：maxTotal，低版本：maxActive --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxTotal\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.maxTotal&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 连接池中最大空闲的连接数. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.maxIdle&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 连接池中最少空闲的连接数. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.minIdle&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 当连接池资源耗尽时，调用者最大阻塞的时间，超时将跑出异常。单位，毫秒数;默认为-1.表示永不超时。高版本：maxWaitMillis，低版本：maxWait --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxWaitMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.maxWaitMillis&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 连接空闲的最小时间，达到此值后空闲连接将可能会被移除。负值(-1)表示不移除. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minEvictableIdleTimeMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.minEvictableIdleTimeMillis&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 对于“空闲链接”检测线程而言，每次检测的链接资源的个数。默认为3 --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"numTestsPerEvictionRun\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.numTestsPerEvictionRun&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- “空闲链接”检测线程，检测的周期，毫秒数。如果为负值，表示不运行“检测线程”。默认为-1. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"timeBetweenEvictionRunsMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.timeBetweenEvictionRunsMillis&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- testOnBorrow:向调用者输出“链接”资源时，是否检测是有有效，如果无效则从连接池中移除，并尝试获取继续获取。默认为false。建议保持默认值. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnBorrow\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.testOnBorrow&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- testOnReturn:向连接池“归还”链接时，是否检测“链接”对象的有效性。默认为false。建议保持默认值.--&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnReturn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.testOnReturn&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- testWhileIdle:向调用者输出“链接”对象时，是否检测它的空闲超时；默认为false。如果“链接”空闲超时，将会被移除。建议保持默认值. --&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- whenExhaustedAction:当“连接池”中active数量达到阀值时，即“链接”资源耗尽时，连接池需要采取的手段, 默认为1(0:抛出异常。1:阻塞，直到有可用链接资源。2:强制创建新的链接资源) --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- Spring提供的Redis连接工厂 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jedisConnectionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"</span></span></div><div class=\"line\"><span class=\"tag\">          <span class=\"attr\">destroy-method</span>=<span class=\"string\">\"destroy\"</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 连接池配置. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"poolConfig\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisPoolConfig\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- Redis服务主机. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hostName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.hostName&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- Redis服务端口号. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"port\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.port&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- Redis服务连接密码. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.password&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 连超时设置. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"timeout\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.timeout&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 是否使用连接池. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"usePool\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">&lt;!-- key序列化 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"stringRedisSerializer\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.StringRedisSerializer\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"stringRedisTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.core.StringRedisTemplate\"</span>&gt;</span></div><div class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"connectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisConnectionFactory\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">&lt;!-- Spring提供的访问Redis类. --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"redisTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.core.RedisTemplate\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"connectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisConnectionFactory\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keySerializer\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.StringRedisSerializer\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hashKeySerializer\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.StringRedisSerializer\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"valueSerializer\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hashValueSerializer\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 配置缓存 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"cacheManager\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.cache.RedisCacheManager\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"redisTemplate\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"redisClient\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"cn.com.servyou.gzyjzx.frame.redis.RedisClient\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>直接上代码吧!!</p>\n<h2 id=\"抽象基础类\"><a href=\"#抽象基础类\" class=\"headerlink\" title=\"抽象基础类\"></a>抽象基础类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisTemplate;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.StringRedisTemplate;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.serializer.RedisSerializer;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractBaseRedis</span>&lt;<span class=\"title\">K</span>, <span class=\"title\">V</span>&gt; </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    <span class=\"keyword\">protected</span> RedisTemplate&lt;K, V&gt; redisTemplate;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    StringRedisTemplate stringRedisTemplate;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置redisTemplate</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> redisTemplate the redisTemplate to set</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRedisTemplate</span><span class=\"params\">(RedisTemplate&lt;K, V&gt; redisTemplate)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.redisTemplate = redisTemplate;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取 String  RedisSerializer</span></div><div class=\"line\"><span class=\"comment\">     * &lt;br&gt;------------------------------&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> RedisSerializer&lt;String&gt; <span class=\"title\">getStringSerializer</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.getStringSerializer();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","more":"<h2 id=\"JsonMapper\"><a href=\"#JsonMapper\" class=\"headerlink\" title=\"JsonMapper\"></a>JsonMapper</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.TimeZone;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.StringEscapeUtils;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.StringUtils;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.annotation.JsonInclude.Include;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.core.JsonGenerator;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.core.JsonParser.Feature;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.core.JsonProcessingException;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.DeserializationFeature;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.JavaType;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.JsonSerializer;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.ObjectMapper;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.SerializationFeature;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.SerializerProvider;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.<span class=\"keyword\">module</span>.SimpleModule;</div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.util.JSONPObject;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JsonMapper</span> <span class=\"keyword\">extends</span> <span class=\"title\">ObjectMapper</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> Logger LOGGER = LoggerFactory.getLogger(JsonMapper.class);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> JsonMapper mapper;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JsonMapper</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>(Include.NON_EMPTY);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JsonMapper</span><span class=\"params\">(Include include)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 设置输出时包含属性的风格</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (include != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.setSerializationInclusion(include);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">// 设置输入时忽略在JSON字符串中存在但Java对象实际没有的属性</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);</div><div class=\"line\">        <span class=\"comment\">// 空值处理为空串</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.getSerializerProvider().setNullValueSerializer(<span class=\"keyword\">new</span> JsonSerializer&lt;Object&gt;()&#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">serialize</span><span class=\"params\">(Object value, JsonGenerator jgen,</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"params\">                                  SerializerProvider provider)</span> <span class=\"keyword\">throws</span> IOException,</span></div><div class=\"line\"><span class=\"function\">                    JsonProcessingException </span>&#123;</div><div class=\"line\">                jgen.writeString(<span class=\"string\">\"\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">        <span class=\"comment\">// 进行HTML解码。</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.registerModule(<span class=\"keyword\">new</span> SimpleModule().addSerializer(String.class, <span class=\"keyword\">new</span> JsonSerializer&lt;String&gt;()&#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">serialize</span><span class=\"params\">(String value, JsonGenerator jgen,</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"params\">                                  SerializerProvider provider)</span> <span class=\"keyword\">throws</span> IOException,</span></div><div class=\"line\"><span class=\"function\">                    JsonProcessingException </span>&#123;</div><div class=\"line\">                jgen.writeString(StringEscapeUtils.unescapeHtml4(value));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;));</div><div class=\"line\">        <span class=\"comment\">// 设置时区</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.setTimeZone(TimeZone.getDefault());<span class=\"comment\">//getTimeZone(\"GMT+8:00\")</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 创建只输出非Null且非Empty(如List.isEmpty)的属性到Json字符串的Mapper,建议在外部接口中使用.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> JsonMapper <span class=\"title\">getInstance</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (mapper == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            mapper = <span class=\"keyword\">new</span> JsonMapper().enableSimple();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> mapper;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 创建只输出初始值被改变的属性到Json字符串的Mapper, 最节约的存储方式，建议在内部接口中使用。</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> JsonMapper <span class=\"title\">nonDefaultMapper</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (mapper == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            mapper = <span class=\"keyword\">new</span> JsonMapper(Include.NON_DEFAULT);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> mapper;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Object可以是POJO，也可以是Collection或数组。</span></div><div class=\"line\"><span class=\"comment\">     * 如果对象为Null, 返回\"null\".</span></div><div class=\"line\"><span class=\"comment\">     * 如果集合为空集合, 返回\"[]\".</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toJson</span><span class=\"params\">(Object object)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.writeValueAsString(object);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(LOGGER.isWarnEnabled())&#123;</div><div class=\"line\">                LOGGER.warn(<span class=\"string\">\"write to json string error:\"</span> + object, e);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 反序列化POJO或简单Collection如List&lt;String&gt;.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * 如果JSON字符串为Null或\"null\"字符串, 返回Null.</span></div><div class=\"line\"><span class=\"comment\">     * 如果JSON字符串为\"[]\", 返回空集合.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * 如需反序列化复杂Collection如List&lt;MyBean&gt;, 请使用fromJson(String,JavaType)</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@see</span> #fromJson(String, JavaType)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">fromJson</span><span class=\"params\">(String jsonString, Class&lt;T&gt; clazz)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.isEmpty(jsonString)) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.readValue(jsonString, clazz);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(LOGGER.isWarnEnabled())&#123;</div><div class=\"line\">                LOGGER.warn(<span class=\"string\">\"parse json string error:\"</span> + jsonString, e);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 反序列化复杂Collection如List&lt;Bean&gt;, 先使用函數createCollectionType构造类型,然后调用本函数.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@see</span> #createCollectionType(Class, Class...)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">fromJson</span><span class=\"params\">(String jsonString, JavaType javaType)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (StringUtils.isEmpty(jsonString)) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> (T) <span class=\"keyword\">this</span>.readValue(jsonString, javaType);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(LOGGER.isWarnEnabled())&#123;</div><div class=\"line\">                LOGGER.warn(<span class=\"string\">\"parse json string error:\"</span> + jsonString, e);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 構造泛型的Collection Type如:</span></div><div class=\"line\"><span class=\"comment\">     * ArrayList&lt;MyBean&gt;, 则调用constructCollectionType(ArrayList.class,MyBean.class)</span></div><div class=\"line\"><span class=\"comment\">     * HashMap&lt;String,MyBean&gt;, 则调用(HashMap.class,String.class, MyBean.class)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JavaType <span class=\"title\">createCollectionType</span><span class=\"params\">(Class&lt;?&gt; collectionClass, Class&lt;?&gt;... elementClasses)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.getTypeFactory().constructParametricType(collectionClass, elementClasses);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 當JSON裡只含有Bean的部分屬性時，更新一個已存在Bean，只覆蓋該部分的屬性.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">update</span><span class=\"params\">(String jsonString, T object)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> (T) <span class=\"keyword\">this</span>.readerForUpdating(object).readValue(jsonString);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JsonProcessingException e) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(LOGGER.isWarnEnabled())&#123;</div><div class=\"line\">                LOGGER.warn(<span class=\"string\">\"update json string:\"</span> + jsonString + <span class=\"string\">\" to object:\"</span> + object + <span class=\"string\">\" error.\"</span>, e);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(LOGGER.isWarnEnabled())&#123;</div><div class=\"line\">                LOGGER.warn(<span class=\"string\">\"update json string:\"</span> + jsonString + <span class=\"string\">\" to object:\"</span> + object + <span class=\"string\">\" error.\"</span>, e);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 輸出JSONP格式數據.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toJsonP</span><span class=\"params\">(String functionName, Object object)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> toJson(<span class=\"keyword\">new</span> JSONPObject(functionName, object));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 設定是否使用Enum的toString函數來讀寫Enum,</span></div><div class=\"line\"><span class=\"comment\">     * 為False時時使用Enum的name()函數來讀寫Enum, 默認為False.</span></div><div class=\"line\"><span class=\"comment\">     * 注意本函數一定要在Mapper創建後, 所有的讀寫動作之前調用.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonMapper <span class=\"title\">enableEnumUseToString</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.enable(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);</div><div class=\"line\">        <span class=\"keyword\">this</span>.enable(DeserializationFeature.READ_ENUMS_USING_TO_STRING);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 允许单引号</span></div><div class=\"line\"><span class=\"comment\">     * 允许不带引号的字段名称</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JsonMapper <span class=\"title\">enableSimple</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.configure(Feature.ALLOW_SINGLE_QUOTES, <span class=\"keyword\">true</span>);</div><div class=\"line\">        <span class=\"keyword\">this</span>.configure(Feature.ALLOW_UNQUOTED_FIELD_NAMES, <span class=\"keyword\">true</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 取出Mapper做进一步的设置或使用其他序列化API.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ObjectMapper <span class=\"title\">getMapper</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 对象转换为JSON字符串</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> object</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">toJsonString</span><span class=\"params\">(Object object)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> JsonMapper.getInstance().toJson(object);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * JSON字符串转换为对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jsonString</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">fromJsonString</span><span class=\"params\">(String jsonString, Class&lt;T&gt; clazz)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> JsonMapper.getInstance().fromJson(jsonString, clazz);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 将obj对象转换成 class类型的对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> obj</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">parseObject</span><span class=\"params\">(Object obj, Class&lt;T&gt; clazz)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> JSON.parseObject(JSON.toJSONString(obj), clazz);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"JSON序列化\"><a href=\"#JSON序列化\" class=\"headerlink\" title=\"JSON序列化\"></a>JSON序列化</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.ObjectMapper;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.SerializationException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.Charset;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Created by SIVEN on 17/9/4.</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JsonRedisSeriaziler</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String EMPTY_JSON = <span class=\"string\">\"&#123;&#125;\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Charset DEFAULT_CHARSET = Charset.forName(<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">protected</span> ObjectMapper objectMapper = <span class=\"keyword\">new</span> ObjectMapper();</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JsonRedisSeriaziler</span><span class=\"params\">()</span></span>&#123;&#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * java-object as json-string</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> object</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">seriazileAsString</span><span class=\"params\">(Object object)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (object== <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> EMPTY_JSON;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.objectMapper.writeValueAsString(object);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception ex) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SerializationException(<span class=\"string\">\"Could not write JSON: \"</span> + ex.getMessage(), ex);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * json-string to java-object</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> str</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">deserializeAsObject</span><span class=\"params\">(String str,Class&lt;T&gt; clazz)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(str == <span class=\"keyword\">null</span> || clazz == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.objectMapper.readValue(str, clazz);</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Exception ex) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SerializationException(<span class=\"string\">\"Could not write JSON: \"</span> + ex.getMessage(), ex);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"RedisClient\"><a href=\"#RedisClient\" class=\"headerlink\" title=\"RedisClient\"></a>RedisClient</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</div><div class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSONObject;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.StringUtils;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.dao.DataAccessException;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.connection.RedisConnection;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.BoundHashOperations;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisCallback;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.ValueOperations;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Repository;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.CollectionUtils;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Repository</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RedisClient</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractBaseRedis</span>&lt;<span class=\"title\">String</span>, <span class=\"title\">Object</span>&gt; </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 删除缓存&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     * 根据key精确匹配删除</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">del</span><span class=\"params\">(String... key)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(key!=<span class=\"keyword\">null</span> &amp;&amp; key.length &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(key.length == <span class=\"number\">1</span>)&#123;</div><div class=\"line\">                redisTemplate.delete(key[<span class=\"number\">0</span>]);</div><div class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                redisTemplate.delete(CollectionUtils.arrayToList(key));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 批量删除&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     * （该操作会执行模糊查询，请尽量不要使用，以免影响性能或误删）</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> pattern</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">batchDel</span><span class=\"params\">(String... pattern)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (String kp : pattern) &#123;</div><div class=\"line\">            redisTemplate.delete(redisTemplate.keys(kp + <span class=\"string\">\"*\"</span>));</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 取得缓存（int型）</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getInt</span><span class=\"params\">(String key)</span></span>&#123;</div><div class=\"line\">        String value = stringRedisTemplate.boundValueOps(key).get();</div><div class=\"line\">        <span class=\"keyword\">if</span>(StringUtils.isNotBlank(value))&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> Integer.valueOf(value);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 取得缓存（字符串类型）</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getStr</span><span class=\"params\">(String key)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> stringRedisTemplate.boundValueOps(key).get();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 取得缓存（字符串类型）</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getStr</span><span class=\"params\">(String key, <span class=\"keyword\">boolean</span> retain)</span></span>&#123;</div><div class=\"line\">        String value = stringRedisTemplate.boundValueOps(key).get();</div><div class=\"line\">        <span class=\"keyword\">if</span>(!retain)&#123;</div><div class=\"line\">            redisTemplate.delete(key);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> value;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取缓存&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     * 注：基本数据类型(Character除外)，请直接使用get(String key, Class&lt;T&gt; clazz)取值</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">getObj</span><span class=\"params\">(String key)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.boundValueOps(key).get();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取缓存&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     * 注：java 8种基本类型的数据请直接使用get(String key, Class&lt;T&gt; clazz)取值</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> retain    是否保留</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">getObj</span><span class=\"params\">(String key, <span class=\"keyword\">boolean</span> retain)</span></span>&#123;</div><div class=\"line\">        Object obj = redisTemplate.boundValueOps(key).get();</div><div class=\"line\">        <span class=\"keyword\">if</span>(!retain)&#123;</div><div class=\"line\">            redisTemplate.delete(key);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> obj;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取缓存&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     * 注：该方法暂不支持Character数据类型</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz 类型</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">get</span><span class=\"params\">(String key, Class&lt;T&gt; clazz)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> (T)redisTemplate.boundValueOps(key).get();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取缓存json对象&lt;br&gt;</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz 类型</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getJson</span><span class=\"params\">(String key, Class&lt;T&gt; clazz)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> JsonMapper.fromJsonString(stringRedisTemplate.boundValueOps(key).get(), clazz);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 将value对象写入缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(String key,Object value,Long time)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(value.getClass().equals(String.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value.getClass().equals(Integer.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value.getClass().equals(Double.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value.getClass().equals(Float.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value.getClass().equals(Short.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value.getClass().equals(Long.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value.getClass().equals(Boolean.class))&#123;</div><div class=\"line\">            stringRedisTemplate.opsForValue().set(key, value.toString());</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            redisTemplate.opsForValue().set(key, value);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(time &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            redisTemplate.expire(key, time, TimeUnit.SECONDS);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 将value对象以JSON格式写入缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJson</span><span class=\"params\">(String key,Object value,Long time)</span></span>&#123;</div><div class=\"line\">        stringRedisTemplate.opsForValue().set(key, JsonMapper.toJsonString(value));</div><div class=\"line\">        <span class=\"keyword\">if</span>(time &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 更新key对象field的值</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   缓存key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> field 缓存对象field</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 缓存对象field值</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJsonField</span><span class=\"params\">(String key, String field, String value)</span></span>&#123;</div><div class=\"line\">        JSONObject obj = JSON.parseObject(stringRedisTemplate.boundValueOps(key).get());</div><div class=\"line\">        obj.put(field, value);</div><div class=\"line\">        stringRedisTemplate.opsForValue().set(key, obj.toJSONString());</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 递减操作</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> by</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">decr</span><span class=\"params\">(String key, <span class=\"keyword\">double</span> by)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForValue().increment(key, -by);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 递增操作</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> by</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">incr</span><span class=\"params\">(String key, <span class=\"keyword\">double</span> by)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForValue().increment(key, by);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取double类型值</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">getDouble</span><span class=\"params\">(String key)</span> </span>&#123;</div><div class=\"line\">        String value = stringRedisTemplate.boundValueOps(key).get();</div><div class=\"line\">        <span class=\"keyword\">if</span>(StringUtils.isNotBlank(value))&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> Double.valueOf(value);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>d;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置double类型值</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDouble</span><span class=\"params\">(String key, <span class=\"keyword\">double</span> value, Long time)</span> </span>&#123;</div><div class=\"line\">        stringRedisTemplate.opsForValue().set(key, String.valueOf(value));</div><div class=\"line\">        <span class=\"keyword\">if</span>(time &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置double类型值</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setInt</span><span class=\"params\">(String key, <span class=\"keyword\">int</span> value, Long time)</span> </span>&#123;</div><div class=\"line\">        stringRedisTemplate.opsForValue().set(key, String.valueOf(value));</div><div class=\"line\">        <span class=\"keyword\">if</span>(time &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 将map写入缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> map</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setMap</span><span class=\"params\">(String key, Map&lt;String, T&gt; map, Long time)</span></span>&#123;</div><div class=\"line\">        redisTemplate.opsForHash().putAll(key, map);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 将map写入缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> map</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setMap</span><span class=\"params\">(String key, T obj, Long time)</span></span>&#123;</div><div class=\"line\">        Map&lt;String, String&gt; map = (Map&lt;String, String&gt;)JsonMapper.parseObject(obj, Map.class);</div><div class=\"line\">        redisTemplate.opsForHash().putAll(key, map);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 向key对应的map中添加缓存对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> map</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addMap</span><span class=\"params\">(String key, Map&lt;String, T&gt; map)</span></span>&#123;</div><div class=\"line\">        redisTemplate.opsForHash().putAll(key, map);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 向key对应的map中添加缓存对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   cache对象key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> field map对应的key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value     值</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addMap</span><span class=\"params\">(String key, String field, String value)</span></span>&#123;</div><div class=\"line\">        redisTemplate.opsForHash().put(key, field, value);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 向key对应的map中添加缓存对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   cache对象key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> field map对应的key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> obj   对象</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addMap</span><span class=\"params\">(String key, String field, T obj)</span></span>&#123;</div><div class=\"line\">        redisTemplate.opsForHash().put(key, field, obj);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取map缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">Map&lt;String, T&gt; <span class=\"title\">mget</span><span class=\"params\">(String key, Class&lt;T&gt; clazz)</span></span>&#123;</div><div class=\"line\">        BoundHashOperations&lt;String, String, T&gt; boundHashOperations = redisTemplate.boundHashOps(key);</div><div class=\"line\">        <span class=\"keyword\">return</span> boundHashOperations.entries();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取map缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getMap</span><span class=\"params\">(String key, Class&lt;T&gt; clazz)</span></span>&#123;</div><div class=\"line\">        BoundHashOperations&lt;String, String, String&gt; boundHashOperations = redisTemplate.boundHashOps(key);</div><div class=\"line\">        Map&lt;String, String&gt; map = boundHashOperations.entries();</div><div class=\"line\">        <span class=\"keyword\">return</span> JsonMapper.parseObject(map, clazz);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取map缓存中的某个对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> field</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getMapField</span><span class=\"params\">(String key, String field, Class&lt;T&gt; clazz)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> (T)redisTemplate.boundHashOps(key).get(field);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 删除map中的某个对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> lh</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2016年8月10日</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   map对应的key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> field map中该对象的key</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">delMapField</span><span class=\"params\">(String key, String... field)</span></span>&#123;</div><div class=\"line\">        BoundHashOperations&lt;String, String, ?&gt; boundHashOperations = redisTemplate.boundHashOps(key);</div><div class=\"line\">        boundHashOperations.delete(field);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 指定缓存的失效时间</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> FangJun</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2016年8月14日</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 缓存KEY</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 失效时间(秒)</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">expire</span><span class=\"params\">(String key, Long time)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(time &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            redisTemplate.expire(key, time, TimeUnit.SECONDS);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 添加set</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sadd</span><span class=\"params\">(String key, String... value)</span> </span>&#123;</div><div class=\"line\">        redisTemplate.boundSetOps(key).add(value);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 删除set集合中的对象</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">srem</span><span class=\"params\">(String key, String... value)</span> </span>&#123;</div><div class=\"line\">        redisTemplate.boundSetOps(key).remove(value);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * set重命名</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> oldkey</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> newkey</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">srename</span><span class=\"params\">(String oldkey, String newkey)</span></span>&#123;</div><div class=\"line\">        redisTemplate.boundSetOps(oldkey).rename(newkey);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 短信缓存</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> fxl</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2016年9月11日</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setIntForPhone</span><span class=\"params\">(String key,Object value,<span class=\"keyword\">int</span> time)</span></span>&#123;</div><div class=\"line\">        stringRedisTemplate.opsForValue().set(key, JsonMapper.toJsonString(value));</div><div class=\"line\">        <span class=\"keyword\">if</span>(time &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">            stringRedisTemplate.expire(key, time, TimeUnit.SECONDS);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 模糊查询keys</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> pattern</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Set&lt;String&gt; <span class=\"title\">keys</span><span class=\"params\">(String pattern)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.keys(pattern);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"redis-xml文件配置\"><a href=\"#redis-xml文件配置\" class=\"headerlink\" title=\"redis xml文件配置\"></a>redis xml文件配置</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></div><div class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></div><div class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></div><div class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></span></div><div class=\"line\"><span class=\"tag\"><span class=\"string\">\t\thttp://www.springframework.org/schema/beans</span></span></div><div class=\"line\"><span class=\"tag\"><span class=\"string\">\t\thttp://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></div><div class=\"line\"><span class=\"tag\"><span class=\"string\">\t\thttp://www.springframework.org/schema/context</span></span></div><div class=\"line\"><span class=\"tag\"><span class=\"string\">\t\thttp://www.springframework.org/schema/context/spring-context-4.0.xsd\"</span></span></div><div class=\"line\"><span class=\"tag\">       <span class=\"attr\">default-lazy-init</span>=<span class=\"string\">\"false\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Jedis Config<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:config/application-jedis.properties\"</span> <span class=\"attr\">ignore-unresolvable</span>=<span class=\"string\">\"true\"</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 连接池配置. --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jedisPoolConfig\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"redis.clients.jedis.JedisPoolConfig\"</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 连接池中最大连接数。高版本：maxTotal，低版本：maxActive --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxTotal\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.maxTotal&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 连接池中最大空闲的连接数. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.maxIdle&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 连接池中最少空闲的连接数. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.minIdle&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 当连接池资源耗尽时，调用者最大阻塞的时间，超时将跑出异常。单位，毫秒数;默认为-1.表示永不超时。高版本：maxWaitMillis，低版本：maxWait --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxWaitMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.maxWaitMillis&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 连接空闲的最小时间，达到此值后空闲连接将可能会被移除。负值(-1)表示不移除. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minEvictableIdleTimeMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.minEvictableIdleTimeMillis&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 对于“空闲链接”检测线程而言，每次检测的链接资源的个数。默认为3 --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"numTestsPerEvictionRun\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.numTestsPerEvictionRun&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- “空闲链接”检测线程，检测的周期，毫秒数。如果为负值，表示不运行“检测线程”。默认为-1. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"timeBetweenEvictionRunsMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.timeBetweenEvictionRunsMillis&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- testOnBorrow:向调用者输出“链接”资源时，是否检测是有有效，如果无效则从连接池中移除，并尝试获取继续获取。默认为false。建议保持默认值. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnBorrow\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.testOnBorrow&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- testOnReturn:向连接池“归还”链接时，是否检测“链接”对象的有效性。默认为false。建议保持默认值.--&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnReturn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.testOnReturn&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- testWhileIdle:向调用者输出“链接”对象时，是否检测它的空闲超时；默认为false。如果“链接”空闲超时，将会被移除。建议保持默认值. --&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- whenExhaustedAction:当“连接池”中active数量达到阀值时，即“链接”资源耗尽时，连接池需要采取的手段, 默认为1(0:抛出异常。1:阻塞，直到有可用链接资源。2:强制创建新的链接资源) --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- Spring提供的Redis连接工厂 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jedisConnectionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"</span></span></div><div class=\"line\"><span class=\"tag\">          <span class=\"attr\">destroy-method</span>=<span class=\"string\">\"destroy\"</span>&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 连接池配置. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"poolConfig\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisPoolConfig\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- Redis服务主机. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hostName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.hostName&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- Redis服务端口号. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"port\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.port&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- Redis服务连接密码. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.password&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 连超时设置. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"timeout\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;redis.timeout&#125;\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!-- 是否使用连接池. --&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"usePool\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">&lt;!-- key序列化 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"stringRedisSerializer\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.StringRedisSerializer\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"stringRedisTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.core.StringRedisTemplate\"</span>&gt;</span></div><div class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"connectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisConnectionFactory\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">&lt;!-- Spring提供的访问Redis类. --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"redisTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.core.RedisTemplate\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"connectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisConnectionFactory\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keySerializer\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.StringRedisSerializer\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hashKeySerializer\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.StringRedisSerializer\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"valueSerializer\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hashValueSerializer\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 配置缓存 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"cacheManager\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.cache.RedisCacheManager\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"redisTemplate\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"redisClient\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"cn.com.servyou.gzyjzx.frame.redis.RedisClient\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"Redis Sentinel集群方案--单机版","date":"2017-09-15T00:46:51.000Z","_content":"\n> 简单介绍下Redis-sentinel：\nRedis-sentinel是Redis实例的监控管理、通知和实例失效备援服务，是Redis集群的管理工具。在一般的分布式中心节点数据库中，Redis-sentinel的作用是中心节点的工作，监控各个其他节点的工作情况并且进行故障恢复，来提高集群的高可用性。\n> Sentinel是一个独立于Redis之外的进程，不对外提供key/value服务，存在redis的安装目录下Redis-sentinel。主要用来监控redis-server进程，进行master/slave管理，如果Redis没有运行在master/slave模式下，则不需要设置sentinel。\n\n下面例子中用了3个redis-server和3个redis-sentinel来进行安装演示，实际上redis-sentinel的个数不一定要和redis-sever对应，1~n 个都可以，建议redis-server为偶数个。\n\n<!-- more -->\n\n## 部署规划\n**注：** 以下各个节点都在同一个服务器中进行演练\nmaster:`7000`\nslave1: `7001`\nslave2: `7002`\nmaster-sentinel: `8000`\nslave1-sentinel: `8001`\nslave2-sentinel: `8002`\n\n## 下载安装redis\n``` bash\ncd\nwget http://download.redis.io/releases/redis-2.8.3.tar.gz\ntar –zxvf redis-2.8.3.tar.gz\ncd redis-2.8.3\nmake\nmake install(此处可用PREFIX参数将redis安装到其他目录)\n```\n\n\n## 配置环境\n\n### 创建目录\n``` bash\ncd /usr/local\nmkdir redis_cluster\nmkdir redis_cluster/master_7000\nmkdir redis_cluster/slave_7001\nmkdir redis_cluster/slave_7002\n```\n\n### 复制配置文件\n从安装包中复制`redis.conf`,`sentinel.conf`配置文件到新建的各个节点目录, 如下: \n\n#### 复制文件到`master`目录\n``` bash\ncp ~/redis-2.8.3/redis.conf ./redis_cluster/master_7000/\ncp ~/redis-2.8.3/sentinel.conf ./redis_cluster/master_7000/sentinel.conf\n```\n#### 复制文件到`slave1`目录\n``` bash\ncp ~/redis-2.8.3/redis.conf ./redis_cluster/slave_7001/\ncp ~/redis-2.8.3/sentinel.conf ./redis_cluster/slave_7001/sentinel.conf\n```\n#### 复制文件到`slave2`目录\n``` bash\ncp ~/redis-2.8.3/redis.conf ./redis_cluster/slave_7002/\ncp ~/redis-2.8.3/sentinel.conf ./redis_cluster/slave_7002/sentinel.conf\n```\n\n### 配置文件\n\n#### 配置Master节点\n\n##### redis.conf\n```\ndaemonize yes\npidfile /var/run/redis_7000.pid\nport 7000\nrequirepass servyou   #从服务器从主服务器同步时的认证密码，如果master设置了，slave密码必须设置，反之master没设置，则slave也无需设置\nmasterauth  servyou  #设置Redis连接密码,如果配置了连接密码,客户端在连接Redis时需要通过AUTH <password>命令提供密码\nappendonly no\nslave-read-only yes\n```\n\n##### sentinel.conf\n```\ndaemonize yes\nlogfile \"/usr/local/redis_cluster/master_7000/log/sentinel_log.log\"\n#指定sentinel使用的端口，不能与redis-server运行实例的端口冲突\nport 8000 \n#指定工作目录\ndir /tmp \n####sentinel需要监控的master信息：<mastername> <masterIP> <masterPort> <quorum>.\n####<quorum>应该小于集群中slave的个数,只有当至少<quorum>个sentinel实例提交\"master失效\" 才会认为master为ODWON(\"客观\"失效) .\ns\nsentinel monitor mymaster 127.0.0.1 7000  2  \n#设置访问mymaster的密码\nsentinel auth-pass mymaster servyou \n#表示如果3s内mymaster没响应，就认为SDOWN\nsentinel down-after-milliseconds mymaster 30000 \n#表示如果15秒后,mysater仍没活过来，则启动failover，从剩下的slave中选一个升级为master\nsentinel failover-timeout mymaster  15000 \n#表示如果master重新选出来后，其它slave节点能同时并行从新master同步缓存的台数有多少个，显然该值越大，所有slave节点完成同步切换的整体速度越快，但如果此时正好有人在访问这些slave，可能造成读取失败，影响面会更广。最保定的设置为1，只同一时间，只能有一台干这件事，这样其它slave还能继续服务，但是所有slave全部完成缓存更新同步的进程将变慢。\nsentinel parallel-syncs mymaster  1\n```\n\n#### 配置Slave1节点\n\n##### redis.conf\n```\ndaemonize yes\npidfile /var/run/redis_7001.pid\nport 7001\nrequirepass servyou\nmasterauth servyou\nappendonly no\nslave-read-only yes\nslave of 127.0.0.1 7000\n```\n\n##### sentinel.conf\n```\ndaemonize yes\nlogfile \"/usr/local/redis_cluster/slave_7001/log/sentinel_log.log\"\nport 8001\ndir /tmp\nsentinel monitor mymaster 127.0.0.1 7000 2\nsentinel auth-pass mymaster servyou\nsentinel down-after-milliseconds mymaster 30000\nsentinel parallel-syncs mymaster  1\nsentinel failover-timeout mymaster  15000\n```\n\n#### 配置Slave2节点\n配置与`Slave1`几乎一致\n\n##### redis.conf\n```\ndaemonize yes\npidfile /var/run/redis_7002.pid\nport 7002\nrequirepass servyou\nmasterauth servyou\nappendonly no\nslave-read-only yes\nslave of 127.0.0.1 7000\n```\n\n##### sentinel.conf\n```\ndaemonize yes\nlogfile \"/usr/local/redis_cluster/slave_7002/log/sentinel_log.log\"\nport 8002\ndir /tmp\nsentinel monitor mymaster 127.0.0.1 7000 2\nsentinel auth-pass mymaster servyou\nsentinel down-after-milliseconds mymaster 30000\nsentinel parallel-syncs mymaster  1\nsentinel failover-timeout mymaster  15000\n```\n\n## 启动服务\n注意：首次构建sentinel环境时，必须首先启动master。\n\n### 启动master和master-sentinel\n``` bash\nredis-server /usr/local/redis_cluster/master_7000/redis.conf\nredis-sentinel usr/local/redis_cluster/master_7000/sentinel.conf\n```\n\n### 启动slave1和slave1-sentinel\n```bash\nredis-server /usr/local/redis_cluster/slave_7001/redis.conf\nredis-sentinel /usr/local/redis_cluster/slave_7001/sentinel.conf\n```\n\n### 启动slave2和slave2-sentinel\n```bash\nredis-server /usr/local/redis_cluster/slave_7002/redis.conf\nredis-sentinel /usr/local/redis_cluster/slave_7002/sentinel.conf\n```\n\n### 查看进程\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144135.jpg)\n\n## 查看状态\n> info Replication\n\n### 查看master状态\n```bash\nredis-cli -h 127.0.0.1 -p 7000\n```\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144330.jpg)\n\n\n\n### 查看slave1状态\n```bash\nredis-cli -h 127.0.0.1 -p 7001\n```\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144440.jpg)\n\n\n### 查看slave2状态\n```bash\nredis-cli -h 127.0.0.1 -p 7002\n```\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144544.jpg)\n\n\n## 场景测试\n\n### 场景1: slave宕机\n关闭slave1：\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144813.jpg)\n查看master的Replication信息：\n此时只存在一个slave。\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144908.jpg)\n\n\n### 场景2：slave恢复\n[重新开启slave1](#启动slave1和slave1-sentinel)\n\n查看sentinel状态：\nsentinel能快速的发现slave加入到集群中：\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145043.jpg)\n查看master的Replication信息：\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145130.jpg)\n\n### 场景3：master宕机\nmaster-sentinel作为master 1的leader，会选取一个master 1的slave作为新的master。slave的选取是根据一个判断DNS情况的优先级来得到，优先级相同通过runid的排序得到，但目前优先级设定还没实现，所以直接获取runid排序得到slave 1。\n然后发送命令slaveof no one来取消slave 1的slave状态来转换为master。当其他sentinel观察到该slave成为master后,就知道错误处理例程启动了。sentinel A然后发送给其他slave slaveof new-slave-ip-port 命令，当所有slave都配置完后，sentinel A从监测的masters列表中删除故障master，然后通知其他sentinels。\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145400.jpg)\n\n\n\n### 场景4：master恢复\n[重新启动原来的master](#启动master和master-sentinel)\n\n查看sentinel状态：\n原来的master自动切换成slave，不会自动恢复成master：\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145730.jpg)\n\n连接到slave2,可以看到目前有两个子节点了\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145803.jpg)\n\n好了, 测试完成!\n\n**注意：若在sentinel已选出新主但尚未完成其它实例的reconfigure之前，重启old master，则整个系统会出现无法选出new master的异常。**","source":"_posts/Redis-Sentinel集群方案-单机版.md","raw":"---\ntitle: Redis Sentinel集群方案--单机版\ndate: 2017-09-15 08:46:51\ntags:\n - Redis\n - Sentinel\n - Redis 集群\ncategories: \n - Redis\n - Sentinel\n---\n\n> 简单介绍下Redis-sentinel：\nRedis-sentinel是Redis实例的监控管理、通知和实例失效备援服务，是Redis集群的管理工具。在一般的分布式中心节点数据库中，Redis-sentinel的作用是中心节点的工作，监控各个其他节点的工作情况并且进行故障恢复，来提高集群的高可用性。\n> Sentinel是一个独立于Redis之外的进程，不对外提供key/value服务，存在redis的安装目录下Redis-sentinel。主要用来监控redis-server进程，进行master/slave管理，如果Redis没有运行在master/slave模式下，则不需要设置sentinel。\n\n下面例子中用了3个redis-server和3个redis-sentinel来进行安装演示，实际上redis-sentinel的个数不一定要和redis-sever对应，1~n 个都可以，建议redis-server为偶数个。\n\n<!-- more -->\n\n## 部署规划\n**注：** 以下各个节点都在同一个服务器中进行演练\nmaster:`7000`\nslave1: `7001`\nslave2: `7002`\nmaster-sentinel: `8000`\nslave1-sentinel: `8001`\nslave2-sentinel: `8002`\n\n## 下载安装redis\n``` bash\ncd\nwget http://download.redis.io/releases/redis-2.8.3.tar.gz\ntar –zxvf redis-2.8.3.tar.gz\ncd redis-2.8.3\nmake\nmake install(此处可用PREFIX参数将redis安装到其他目录)\n```\n\n\n## 配置环境\n\n### 创建目录\n``` bash\ncd /usr/local\nmkdir redis_cluster\nmkdir redis_cluster/master_7000\nmkdir redis_cluster/slave_7001\nmkdir redis_cluster/slave_7002\n```\n\n### 复制配置文件\n从安装包中复制`redis.conf`,`sentinel.conf`配置文件到新建的各个节点目录, 如下: \n\n#### 复制文件到`master`目录\n``` bash\ncp ~/redis-2.8.3/redis.conf ./redis_cluster/master_7000/\ncp ~/redis-2.8.3/sentinel.conf ./redis_cluster/master_7000/sentinel.conf\n```\n#### 复制文件到`slave1`目录\n``` bash\ncp ~/redis-2.8.3/redis.conf ./redis_cluster/slave_7001/\ncp ~/redis-2.8.3/sentinel.conf ./redis_cluster/slave_7001/sentinel.conf\n```\n#### 复制文件到`slave2`目录\n``` bash\ncp ~/redis-2.8.3/redis.conf ./redis_cluster/slave_7002/\ncp ~/redis-2.8.3/sentinel.conf ./redis_cluster/slave_7002/sentinel.conf\n```\n\n### 配置文件\n\n#### 配置Master节点\n\n##### redis.conf\n```\ndaemonize yes\npidfile /var/run/redis_7000.pid\nport 7000\nrequirepass servyou   #从服务器从主服务器同步时的认证密码，如果master设置了，slave密码必须设置，反之master没设置，则slave也无需设置\nmasterauth  servyou  #设置Redis连接密码,如果配置了连接密码,客户端在连接Redis时需要通过AUTH <password>命令提供密码\nappendonly no\nslave-read-only yes\n```\n\n##### sentinel.conf\n```\ndaemonize yes\nlogfile \"/usr/local/redis_cluster/master_7000/log/sentinel_log.log\"\n#指定sentinel使用的端口，不能与redis-server运行实例的端口冲突\nport 8000 \n#指定工作目录\ndir /tmp \n####sentinel需要监控的master信息：<mastername> <masterIP> <masterPort> <quorum>.\n####<quorum>应该小于集群中slave的个数,只有当至少<quorum>个sentinel实例提交\"master失效\" 才会认为master为ODWON(\"客观\"失效) .\ns\nsentinel monitor mymaster 127.0.0.1 7000  2  \n#设置访问mymaster的密码\nsentinel auth-pass mymaster servyou \n#表示如果3s内mymaster没响应，就认为SDOWN\nsentinel down-after-milliseconds mymaster 30000 \n#表示如果15秒后,mysater仍没活过来，则启动failover，从剩下的slave中选一个升级为master\nsentinel failover-timeout mymaster  15000 \n#表示如果master重新选出来后，其它slave节点能同时并行从新master同步缓存的台数有多少个，显然该值越大，所有slave节点完成同步切换的整体速度越快，但如果此时正好有人在访问这些slave，可能造成读取失败，影响面会更广。最保定的设置为1，只同一时间，只能有一台干这件事，这样其它slave还能继续服务，但是所有slave全部完成缓存更新同步的进程将变慢。\nsentinel parallel-syncs mymaster  1\n```\n\n#### 配置Slave1节点\n\n##### redis.conf\n```\ndaemonize yes\npidfile /var/run/redis_7001.pid\nport 7001\nrequirepass servyou\nmasterauth servyou\nappendonly no\nslave-read-only yes\nslave of 127.0.0.1 7000\n```\n\n##### sentinel.conf\n```\ndaemonize yes\nlogfile \"/usr/local/redis_cluster/slave_7001/log/sentinel_log.log\"\nport 8001\ndir /tmp\nsentinel monitor mymaster 127.0.0.1 7000 2\nsentinel auth-pass mymaster servyou\nsentinel down-after-milliseconds mymaster 30000\nsentinel parallel-syncs mymaster  1\nsentinel failover-timeout mymaster  15000\n```\n\n#### 配置Slave2节点\n配置与`Slave1`几乎一致\n\n##### redis.conf\n```\ndaemonize yes\npidfile /var/run/redis_7002.pid\nport 7002\nrequirepass servyou\nmasterauth servyou\nappendonly no\nslave-read-only yes\nslave of 127.0.0.1 7000\n```\n\n##### sentinel.conf\n```\ndaemonize yes\nlogfile \"/usr/local/redis_cluster/slave_7002/log/sentinel_log.log\"\nport 8002\ndir /tmp\nsentinel monitor mymaster 127.0.0.1 7000 2\nsentinel auth-pass mymaster servyou\nsentinel down-after-milliseconds mymaster 30000\nsentinel parallel-syncs mymaster  1\nsentinel failover-timeout mymaster  15000\n```\n\n## 启动服务\n注意：首次构建sentinel环境时，必须首先启动master。\n\n### 启动master和master-sentinel\n``` bash\nredis-server /usr/local/redis_cluster/master_7000/redis.conf\nredis-sentinel usr/local/redis_cluster/master_7000/sentinel.conf\n```\n\n### 启动slave1和slave1-sentinel\n```bash\nredis-server /usr/local/redis_cluster/slave_7001/redis.conf\nredis-sentinel /usr/local/redis_cluster/slave_7001/sentinel.conf\n```\n\n### 启动slave2和slave2-sentinel\n```bash\nredis-server /usr/local/redis_cluster/slave_7002/redis.conf\nredis-sentinel /usr/local/redis_cluster/slave_7002/sentinel.conf\n```\n\n### 查看进程\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144135.jpg)\n\n## 查看状态\n> info Replication\n\n### 查看master状态\n```bash\nredis-cli -h 127.0.0.1 -p 7000\n```\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144330.jpg)\n\n\n\n### 查看slave1状态\n```bash\nredis-cli -h 127.0.0.1 -p 7001\n```\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144440.jpg)\n\n\n### 查看slave2状态\n```bash\nredis-cli -h 127.0.0.1 -p 7002\n```\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144544.jpg)\n\n\n## 场景测试\n\n### 场景1: slave宕机\n关闭slave1：\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144813.jpg)\n查看master的Replication信息：\n此时只存在一个slave。\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144908.jpg)\n\n\n### 场景2：slave恢复\n[重新开启slave1](#启动slave1和slave1-sentinel)\n\n查看sentinel状态：\nsentinel能快速的发现slave加入到集群中：\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145043.jpg)\n查看master的Replication信息：\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145130.jpg)\n\n### 场景3：master宕机\nmaster-sentinel作为master 1的leader，会选取一个master 1的slave作为新的master。slave的选取是根据一个判断DNS情况的优先级来得到，优先级相同通过runid的排序得到，但目前优先级设定还没实现，所以直接获取runid排序得到slave 1。\n然后发送命令slaveof no one来取消slave 1的slave状态来转换为master。当其他sentinel观察到该slave成为master后,就知道错误处理例程启动了。sentinel A然后发送给其他slave slaveof new-slave-ip-port 命令，当所有slave都配置完后，sentinel A从监测的masters列表中删除故障master，然后通知其他sentinels。\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145400.jpg)\n\n\n\n### 场景4：master恢复\n[重新启动原来的master](#启动master和master-sentinel)\n\n查看sentinel状态：\n原来的master自动切换成slave，不会自动恢复成master：\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145730.jpg)\n\n连接到slave2,可以看到目前有两个子节点了\n![](http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145803.jpg)\n\n好了, 测试完成!\n\n**注意：若在sentinel已选出新主但尚未完成其它实例的reconfigure之前，重启old master，则整个系统会出现无法选出new master的异常。**","slug":"Redis-Sentinel集群方案-单机版","published":1,"updated":"2017-09-16T11:16:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7n84lkg0008zxrx8vvzp3mk","content":"<blockquote>\n<p>简单介绍下Redis-sentinel：<br>Redis-sentinel是Redis实例的监控管理、通知和实例失效备援服务，是Redis集群的管理工具。在一般的分布式中心节点数据库中，Redis-sentinel的作用是中心节点的工作，监控各个其他节点的工作情况并且进行故障恢复，来提高集群的高可用性。<br>Sentinel是一个独立于Redis之外的进程，不对外提供key/value服务，存在redis的安装目录下Redis-sentinel。主要用来监控redis-server进程，进行master/slave管理，如果Redis没有运行在master/slave模式下，则不需要设置sentinel。</p>\n</blockquote>\n<p>下面例子中用了3个redis-server和3个redis-sentinel来进行安装演示，实际上redis-sentinel的个数不一定要和redis-sever对应，1~n 个都可以，建议redis-server为偶数个。</p>\n<a id=\"more\"></a>\n<h2 id=\"部署规划\"><a href=\"#部署规划\" class=\"headerlink\" title=\"部署规划\"></a>部署规划</h2><p><strong>注：</strong> 以下各个节点都在同一个服务器中进行演练<br>master:<code>7000</code><br>slave1: <code>7001</code><br>slave2: <code>7002</code><br>master-sentinel: <code>8000</code><br>slave1-sentinel: <code>8001</code><br>slave2-sentinel: <code>8002</code></p>\n<h2 id=\"下载安装redis\"><a href=\"#下载安装redis\" class=\"headerlink\" title=\"下载安装redis\"></a>下载安装redis</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span></div><div class=\"line\">wget http://download.redis.io/releases/redis-2.8.3.tar.gz</div><div class=\"line\">tar –zxvf redis-2.8.3.tar.gz</div><div class=\"line\"><span class=\"built_in\">cd</span> redis-2.8.3</div><div class=\"line\">make</div><div class=\"line\">make install(此处可用PREFIX参数将redis安装到其他目录)</div></pre></td></tr></table></figure>\n<h2 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h2><h3 id=\"创建目录\"><a href=\"#创建目录\" class=\"headerlink\" title=\"创建目录\"></a>创建目录</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span></div><div class=\"line\">mkdir redis_cluster</div><div class=\"line\">mkdir redis_cluster/master_7000</div><div class=\"line\">mkdir redis_cluster/slave_7001</div><div class=\"line\">mkdir redis_cluster/slave_7002</div></pre></td></tr></table></figure>\n<h3 id=\"复制配置文件\"><a href=\"#复制配置文件\" class=\"headerlink\" title=\"复制配置文件\"></a>复制配置文件</h3><p>从安装包中复制<code>redis.conf</code>,<code>sentinel.conf</code>配置文件到新建的各个节点目录, 如下: </p>\n<h4 id=\"复制文件到master目录\"><a href=\"#复制文件到master目录\" class=\"headerlink\" title=\"复制文件到master目录\"></a>复制文件到<code>master</code>目录</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp ~/redis-2.8.3/redis.conf ./redis_cluster/master_7000/</div><div class=\"line\">cp ~/redis-2.8.3/sentinel.conf ./redis_cluster/master_7000/sentinel.conf</div></pre></td></tr></table></figure>\n<h4 id=\"复制文件到slave1目录\"><a href=\"#复制文件到slave1目录\" class=\"headerlink\" title=\"复制文件到slave1目录\"></a>复制文件到<code>slave1</code>目录</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp ~/redis-2.8.3/redis.conf ./redis_cluster/slave_7001/</div><div class=\"line\">cp ~/redis-2.8.3/sentinel.conf ./redis_cluster/slave_7001/sentinel.conf</div></pre></td></tr></table></figure>\n<h4 id=\"复制文件到slave2目录\"><a href=\"#复制文件到slave2目录\" class=\"headerlink\" title=\"复制文件到slave2目录\"></a>复制文件到<code>slave2</code>目录</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp ~/redis-2.8.3/redis.conf ./redis_cluster/slave_7002/</div><div class=\"line\">cp ~/redis-2.8.3/sentinel.conf ./redis_cluster/slave_7002/sentinel.conf</div></pre></td></tr></table></figure>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><h4 id=\"配置Master节点\"><a href=\"#配置Master节点\" class=\"headerlink\" title=\"配置Master节点\"></a>配置Master节点</h4><h5 id=\"redis-conf\"><a href=\"#redis-conf\" class=\"headerlink\" title=\"redis.conf\"></a>redis.conf</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">daemonize yes</div><div class=\"line\">pidfile /var/run/redis_7000.pid</div><div class=\"line\">port 7000</div><div class=\"line\">requirepass servyou   #从服务器从主服务器同步时的认证密码，如果master设置了，slave密码必须设置，反之master没设置，则slave也无需设置</div><div class=\"line\">masterauth  servyou  #设置Redis连接密码,如果配置了连接密码,客户端在连接Redis时需要通过AUTH &lt;password&gt;命令提供密码</div><div class=\"line\">appendonly no</div><div class=\"line\">slave-read-only yes</div></pre></td></tr></table></figure>\n<h5 id=\"sentinel-conf\"><a href=\"#sentinel-conf\" class=\"headerlink\" title=\"sentinel.conf\"></a>sentinel.conf</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">daemonize yes</div><div class=\"line\">logfile &quot;/usr/local/redis_cluster/master_7000/log/sentinel_log.log&quot;</div><div class=\"line\">#指定sentinel使用的端口，不能与redis-server运行实例的端口冲突</div><div class=\"line\">port 8000 </div><div class=\"line\">#指定工作目录</div><div class=\"line\">dir /tmp </div><div class=\"line\">####sentinel需要监控的master信息：&lt;mastername&gt; &lt;masterIP&gt; &lt;masterPort&gt; &lt;quorum&gt;.</div><div class=\"line\">####&lt;quorum&gt;应该小于集群中slave的个数,只有当至少&lt;quorum&gt;个sentinel实例提交&quot;master失效&quot; 才会认为master为ODWON(&quot;客观&quot;失效) .</div><div class=\"line\">s</div><div class=\"line\">sentinel monitor mymaster 127.0.0.1 7000  2  </div><div class=\"line\">#设置访问mymaster的密码</div><div class=\"line\">sentinel auth-pass mymaster servyou </div><div class=\"line\">#表示如果3s内mymaster没响应，就认为SDOWN</div><div class=\"line\">sentinel down-after-milliseconds mymaster 30000 </div><div class=\"line\">#表示如果15秒后,mysater仍没活过来，则启动failover，从剩下的slave中选一个升级为master</div><div class=\"line\">sentinel failover-timeout mymaster  15000 </div><div class=\"line\">#表示如果master重新选出来后，其它slave节点能同时并行从新master同步缓存的台数有多少个，显然该值越大，所有slave节点完成同步切换的整体速度越快，但如果此时正好有人在访问这些slave，可能造成读取失败，影响面会更广。最保定的设置为1，只同一时间，只能有一台干这件事，这样其它slave还能继续服务，但是所有slave全部完成缓存更新同步的进程将变慢。</div><div class=\"line\">sentinel parallel-syncs mymaster  1</div></pre></td></tr></table></figure>\n<h4 id=\"配置Slave1节点\"><a href=\"#配置Slave1节点\" class=\"headerlink\" title=\"配置Slave1节点\"></a>配置Slave1节点</h4><h5 id=\"redis-conf-1\"><a href=\"#redis-conf-1\" class=\"headerlink\" title=\"redis.conf\"></a>redis.conf</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">daemonize yes</div><div class=\"line\">pidfile /var/run/redis_7001.pid</div><div class=\"line\">port 7001</div><div class=\"line\">requirepass servyou</div><div class=\"line\">masterauth servyou</div><div class=\"line\">appendonly no</div><div class=\"line\">slave-read-only yes</div><div class=\"line\">slave of 127.0.0.1 7000</div></pre></td></tr></table></figure>\n<h5 id=\"sentinel-conf-1\"><a href=\"#sentinel-conf-1\" class=\"headerlink\" title=\"sentinel.conf\"></a>sentinel.conf</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">daemonize yes</div><div class=\"line\">logfile &quot;/usr/local/redis_cluster/slave_7001/log/sentinel_log.log&quot;</div><div class=\"line\">port 8001</div><div class=\"line\">dir /tmp</div><div class=\"line\">sentinel monitor mymaster 127.0.0.1 7000 2</div><div class=\"line\">sentinel auth-pass mymaster servyou</div><div class=\"line\">sentinel down-after-milliseconds mymaster 30000</div><div class=\"line\">sentinel parallel-syncs mymaster  1</div><div class=\"line\">sentinel failover-timeout mymaster  15000</div></pre></td></tr></table></figure>\n<h4 id=\"配置Slave2节点\"><a href=\"#配置Slave2节点\" class=\"headerlink\" title=\"配置Slave2节点\"></a>配置Slave2节点</h4><p>配置与<code>Slave1</code>几乎一致</p>\n<h5 id=\"redis-conf-2\"><a href=\"#redis-conf-2\" class=\"headerlink\" title=\"redis.conf\"></a>redis.conf</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">daemonize yes</div><div class=\"line\">pidfile /var/run/redis_7002.pid</div><div class=\"line\">port 7002</div><div class=\"line\">requirepass servyou</div><div class=\"line\">masterauth servyou</div><div class=\"line\">appendonly no</div><div class=\"line\">slave-read-only yes</div><div class=\"line\">slave of 127.0.0.1 7000</div></pre></td></tr></table></figure>\n<h5 id=\"sentinel-conf-2\"><a href=\"#sentinel-conf-2\" class=\"headerlink\" title=\"sentinel.conf\"></a>sentinel.conf</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">daemonize yes</div><div class=\"line\">logfile &quot;/usr/local/redis_cluster/slave_7002/log/sentinel_log.log&quot;</div><div class=\"line\">port 8002</div><div class=\"line\">dir /tmp</div><div class=\"line\">sentinel monitor mymaster 127.0.0.1 7000 2</div><div class=\"line\">sentinel auth-pass mymaster servyou</div><div class=\"line\">sentinel down-after-milliseconds mymaster 30000</div><div class=\"line\">sentinel parallel-syncs mymaster  1</div><div class=\"line\">sentinel failover-timeout mymaster  15000</div></pre></td></tr></table></figure>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><p>注意：首次构建sentinel环境时，必须首先启动master。</p>\n<h3 id=\"启动master和master-sentinel\"><a href=\"#启动master和master-sentinel\" class=\"headerlink\" title=\"启动master和master-sentinel\"></a>启动master和master-sentinel</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-server /usr/<span class=\"built_in\">local</span>/redis_cluster/master_7000/redis.conf</div><div class=\"line\">redis-sentinel usr/<span class=\"built_in\">local</span>/redis_cluster/master_7000/sentinel.conf</div></pre></td></tr></table></figure>\n<h3 id=\"启动slave1和slave1-sentinel\"><a href=\"#启动slave1和slave1-sentinel\" class=\"headerlink\" title=\"启动slave1和slave1-sentinel\"></a>启动slave1和slave1-sentinel</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-server /usr/<span class=\"built_in\">local</span>/redis_cluster/slave_7001/redis.conf</div><div class=\"line\">redis-sentinel /usr/<span class=\"built_in\">local</span>/redis_cluster/slave_7001/sentinel.conf</div></pre></td></tr></table></figure>\n<h3 id=\"启动slave2和slave2-sentinel\"><a href=\"#启动slave2和slave2-sentinel\" class=\"headerlink\" title=\"启动slave2和slave2-sentinel\"></a>启动slave2和slave2-sentinel</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-server /usr/<span class=\"built_in\">local</span>/redis_cluster/slave_7002/redis.conf</div><div class=\"line\">redis-sentinel /usr/<span class=\"built_in\">local</span>/redis_cluster/slave_7002/sentinel.conf</div></pre></td></tr></table></figure>\n<h3 id=\"查看进程\"><a href=\"#查看进程\" class=\"headerlink\" title=\"查看进程\"></a>查看进程</h3><p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144135.jpg\" alt=\"\"></p>\n<h2 id=\"查看状态\"><a href=\"#查看状态\" class=\"headerlink\" title=\"查看状态\"></a>查看状态</h2><blockquote>\n<p>info Replication</p>\n</blockquote>\n<h3 id=\"查看master状态\"><a href=\"#查看master状态\" class=\"headerlink\" title=\"查看master状态\"></a>查看master状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli -h 127.0.0.1 -p 7000</div></pre></td></tr></table></figure>\n<p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144330.jpg\" alt=\"\"></p>\n<h3 id=\"查看slave1状态\"><a href=\"#查看slave1状态\" class=\"headerlink\" title=\"查看slave1状态\"></a>查看slave1状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli -h 127.0.0.1 -p 7001</div></pre></td></tr></table></figure>\n<p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144440.jpg\" alt=\"\"></p>\n<h3 id=\"查看slave2状态\"><a href=\"#查看slave2状态\" class=\"headerlink\" title=\"查看slave2状态\"></a>查看slave2状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli -h 127.0.0.1 -p 7002</div></pre></td></tr></table></figure>\n<p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144544.jpg\" alt=\"\"></p>\n<h2 id=\"场景测试\"><a href=\"#场景测试\" class=\"headerlink\" title=\"场景测试\"></a>场景测试</h2><h3 id=\"场景1-slave宕机\"><a href=\"#场景1-slave宕机\" class=\"headerlink\" title=\"场景1: slave宕机\"></a>场景1: slave宕机</h3><p>关闭slave1：<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144813.jpg\" alt=\"\"><br>查看master的Replication信息：<br>此时只存在一个slave。<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144908.jpg\" alt=\"\"></p>\n<h3 id=\"场景2：slave恢复\"><a href=\"#场景2：slave恢复\" class=\"headerlink\" title=\"场景2：slave恢复\"></a>场景2：slave恢复</h3><p><a href=\"#启动slave1和slave1-sentinel\">重新开启slave1</a></p>\n<p>查看sentinel状态：<br>sentinel能快速的发现slave加入到集群中：<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145043.jpg\" alt=\"\"><br>查看master的Replication信息：<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145130.jpg\" alt=\"\"></p>\n<h3 id=\"场景3：master宕机\"><a href=\"#场景3：master宕机\" class=\"headerlink\" title=\"场景3：master宕机\"></a>场景3：master宕机</h3><p>master-sentinel作为master 1的leader，会选取一个master 1的slave作为新的master。slave的选取是根据一个判断DNS情况的优先级来得到，优先级相同通过runid的排序得到，但目前优先级设定还没实现，所以直接获取runid排序得到slave 1。<br>然后发送命令slaveof no one来取消slave 1的slave状态来转换为master。当其他sentinel观察到该slave成为master后,就知道错误处理例程启动了。sentinel A然后发送给其他slave slaveof new-slave-ip-port 命令，当所有slave都配置完后，sentinel A从监测的masters列表中删除故障master，然后通知其他sentinels。<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145400.jpg\" alt=\"\"></p>\n<h3 id=\"场景4：master恢复\"><a href=\"#场景4：master恢复\" class=\"headerlink\" title=\"场景4：master恢复\"></a>场景4：master恢复</h3><p><a href=\"#启动master和master-sentinel\">重新启动原来的master</a></p>\n<p>查看sentinel状态：<br>原来的master自动切换成slave，不会自动恢复成master：<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145730.jpg\" alt=\"\"></p>\n<p>连接到slave2,可以看到目前有两个子节点了<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145803.jpg\" alt=\"\"></p>\n<p>好了, 测试完成!</p>\n<p><strong>注意：若在sentinel已选出新主但尚未完成其它实例的reconfigure之前，重启old master，则整个系统会出现无法选出new master的异常。</strong></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>简单介绍下Redis-sentinel：<br>Redis-sentinel是Redis实例的监控管理、通知和实例失效备援服务，是Redis集群的管理工具。在一般的分布式中心节点数据库中，Redis-sentinel的作用是中心节点的工作，监控各个其他节点的工作情况并且进行故障恢复，来提高集群的高可用性。<br>Sentinel是一个独立于Redis之外的进程，不对外提供key/value服务，存在redis的安装目录下Redis-sentinel。主要用来监控redis-server进程，进行master/slave管理，如果Redis没有运行在master/slave模式下，则不需要设置sentinel。</p>\n</blockquote>\n<p>下面例子中用了3个redis-server和3个redis-sentinel来进行安装演示，实际上redis-sentinel的个数不一定要和redis-sever对应，1~n 个都可以，建议redis-server为偶数个。</p>","more":"<h2 id=\"部署规划\"><a href=\"#部署规划\" class=\"headerlink\" title=\"部署规划\"></a>部署规划</h2><p><strong>注：</strong> 以下各个节点都在同一个服务器中进行演练<br>master:<code>7000</code><br>slave1: <code>7001</code><br>slave2: <code>7002</code><br>master-sentinel: <code>8000</code><br>slave1-sentinel: <code>8001</code><br>slave2-sentinel: <code>8002</code></p>\n<h2 id=\"下载安装redis\"><a href=\"#下载安装redis\" class=\"headerlink\" title=\"下载安装redis\"></a>下载安装redis</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span></div><div class=\"line\">wget http://download.redis.io/releases/redis-2.8.3.tar.gz</div><div class=\"line\">tar –zxvf redis-2.8.3.tar.gz</div><div class=\"line\"><span class=\"built_in\">cd</span> redis-2.8.3</div><div class=\"line\">make</div><div class=\"line\">make install(此处可用PREFIX参数将redis安装到其他目录)</div></pre></td></tr></table></figure>\n<h2 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h2><h3 id=\"创建目录\"><a href=\"#创建目录\" class=\"headerlink\" title=\"创建目录\"></a>创建目录</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span></div><div class=\"line\">mkdir redis_cluster</div><div class=\"line\">mkdir redis_cluster/master_7000</div><div class=\"line\">mkdir redis_cluster/slave_7001</div><div class=\"line\">mkdir redis_cluster/slave_7002</div></pre></td></tr></table></figure>\n<h3 id=\"复制配置文件\"><a href=\"#复制配置文件\" class=\"headerlink\" title=\"复制配置文件\"></a>复制配置文件</h3><p>从安装包中复制<code>redis.conf</code>,<code>sentinel.conf</code>配置文件到新建的各个节点目录, 如下: </p>\n<h4 id=\"复制文件到master目录\"><a href=\"#复制文件到master目录\" class=\"headerlink\" title=\"复制文件到master目录\"></a>复制文件到<code>master</code>目录</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp ~/redis-2.8.3/redis.conf ./redis_cluster/master_7000/</div><div class=\"line\">cp ~/redis-2.8.3/sentinel.conf ./redis_cluster/master_7000/sentinel.conf</div></pre></td></tr></table></figure>\n<h4 id=\"复制文件到slave1目录\"><a href=\"#复制文件到slave1目录\" class=\"headerlink\" title=\"复制文件到slave1目录\"></a>复制文件到<code>slave1</code>目录</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp ~/redis-2.8.3/redis.conf ./redis_cluster/slave_7001/</div><div class=\"line\">cp ~/redis-2.8.3/sentinel.conf ./redis_cluster/slave_7001/sentinel.conf</div></pre></td></tr></table></figure>\n<h4 id=\"复制文件到slave2目录\"><a href=\"#复制文件到slave2目录\" class=\"headerlink\" title=\"复制文件到slave2目录\"></a>复制文件到<code>slave2</code>目录</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp ~/redis-2.8.3/redis.conf ./redis_cluster/slave_7002/</div><div class=\"line\">cp ~/redis-2.8.3/sentinel.conf ./redis_cluster/slave_7002/sentinel.conf</div></pre></td></tr></table></figure>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><h4 id=\"配置Master节点\"><a href=\"#配置Master节点\" class=\"headerlink\" title=\"配置Master节点\"></a>配置Master节点</h4><h5 id=\"redis-conf\"><a href=\"#redis-conf\" class=\"headerlink\" title=\"redis.conf\"></a>redis.conf</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">daemonize yes</div><div class=\"line\">pidfile /var/run/redis_7000.pid</div><div class=\"line\">port 7000</div><div class=\"line\">requirepass servyou   #从服务器从主服务器同步时的认证密码，如果master设置了，slave密码必须设置，反之master没设置，则slave也无需设置</div><div class=\"line\">masterauth  servyou  #设置Redis连接密码,如果配置了连接密码,客户端在连接Redis时需要通过AUTH &lt;password&gt;命令提供密码</div><div class=\"line\">appendonly no</div><div class=\"line\">slave-read-only yes</div></pre></td></tr></table></figure>\n<h5 id=\"sentinel-conf\"><a href=\"#sentinel-conf\" class=\"headerlink\" title=\"sentinel.conf\"></a>sentinel.conf</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">daemonize yes</div><div class=\"line\">logfile &quot;/usr/local/redis_cluster/master_7000/log/sentinel_log.log&quot;</div><div class=\"line\">#指定sentinel使用的端口，不能与redis-server运行实例的端口冲突</div><div class=\"line\">port 8000 </div><div class=\"line\">#指定工作目录</div><div class=\"line\">dir /tmp </div><div class=\"line\">####sentinel需要监控的master信息：&lt;mastername&gt; &lt;masterIP&gt; &lt;masterPort&gt; &lt;quorum&gt;.</div><div class=\"line\">####&lt;quorum&gt;应该小于集群中slave的个数,只有当至少&lt;quorum&gt;个sentinel实例提交&quot;master失效&quot; 才会认为master为ODWON(&quot;客观&quot;失效) .</div><div class=\"line\">s</div><div class=\"line\">sentinel monitor mymaster 127.0.0.1 7000  2  </div><div class=\"line\">#设置访问mymaster的密码</div><div class=\"line\">sentinel auth-pass mymaster servyou </div><div class=\"line\">#表示如果3s内mymaster没响应，就认为SDOWN</div><div class=\"line\">sentinel down-after-milliseconds mymaster 30000 </div><div class=\"line\">#表示如果15秒后,mysater仍没活过来，则启动failover，从剩下的slave中选一个升级为master</div><div class=\"line\">sentinel failover-timeout mymaster  15000 </div><div class=\"line\">#表示如果master重新选出来后，其它slave节点能同时并行从新master同步缓存的台数有多少个，显然该值越大，所有slave节点完成同步切换的整体速度越快，但如果此时正好有人在访问这些slave，可能造成读取失败，影响面会更广。最保定的设置为1，只同一时间，只能有一台干这件事，这样其它slave还能继续服务，但是所有slave全部完成缓存更新同步的进程将变慢。</div><div class=\"line\">sentinel parallel-syncs mymaster  1</div></pre></td></tr></table></figure>\n<h4 id=\"配置Slave1节点\"><a href=\"#配置Slave1节点\" class=\"headerlink\" title=\"配置Slave1节点\"></a>配置Slave1节点</h4><h5 id=\"redis-conf-1\"><a href=\"#redis-conf-1\" class=\"headerlink\" title=\"redis.conf\"></a>redis.conf</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">daemonize yes</div><div class=\"line\">pidfile /var/run/redis_7001.pid</div><div class=\"line\">port 7001</div><div class=\"line\">requirepass servyou</div><div class=\"line\">masterauth servyou</div><div class=\"line\">appendonly no</div><div class=\"line\">slave-read-only yes</div><div class=\"line\">slave of 127.0.0.1 7000</div></pre></td></tr></table></figure>\n<h5 id=\"sentinel-conf-1\"><a href=\"#sentinel-conf-1\" class=\"headerlink\" title=\"sentinel.conf\"></a>sentinel.conf</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">daemonize yes</div><div class=\"line\">logfile &quot;/usr/local/redis_cluster/slave_7001/log/sentinel_log.log&quot;</div><div class=\"line\">port 8001</div><div class=\"line\">dir /tmp</div><div class=\"line\">sentinel monitor mymaster 127.0.0.1 7000 2</div><div class=\"line\">sentinel auth-pass mymaster servyou</div><div class=\"line\">sentinel down-after-milliseconds mymaster 30000</div><div class=\"line\">sentinel parallel-syncs mymaster  1</div><div class=\"line\">sentinel failover-timeout mymaster  15000</div></pre></td></tr></table></figure>\n<h4 id=\"配置Slave2节点\"><a href=\"#配置Slave2节点\" class=\"headerlink\" title=\"配置Slave2节点\"></a>配置Slave2节点</h4><p>配置与<code>Slave1</code>几乎一致</p>\n<h5 id=\"redis-conf-2\"><a href=\"#redis-conf-2\" class=\"headerlink\" title=\"redis.conf\"></a>redis.conf</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">daemonize yes</div><div class=\"line\">pidfile /var/run/redis_7002.pid</div><div class=\"line\">port 7002</div><div class=\"line\">requirepass servyou</div><div class=\"line\">masterauth servyou</div><div class=\"line\">appendonly no</div><div class=\"line\">slave-read-only yes</div><div class=\"line\">slave of 127.0.0.1 7000</div></pre></td></tr></table></figure>\n<h5 id=\"sentinel-conf-2\"><a href=\"#sentinel-conf-2\" class=\"headerlink\" title=\"sentinel.conf\"></a>sentinel.conf</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">daemonize yes</div><div class=\"line\">logfile &quot;/usr/local/redis_cluster/slave_7002/log/sentinel_log.log&quot;</div><div class=\"line\">port 8002</div><div class=\"line\">dir /tmp</div><div class=\"line\">sentinel monitor mymaster 127.0.0.1 7000 2</div><div class=\"line\">sentinel auth-pass mymaster servyou</div><div class=\"line\">sentinel down-after-milliseconds mymaster 30000</div><div class=\"line\">sentinel parallel-syncs mymaster  1</div><div class=\"line\">sentinel failover-timeout mymaster  15000</div></pre></td></tr></table></figure>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><p>注意：首次构建sentinel环境时，必须首先启动master。</p>\n<h3 id=\"启动master和master-sentinel\"><a href=\"#启动master和master-sentinel\" class=\"headerlink\" title=\"启动master和master-sentinel\"></a>启动master和master-sentinel</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-server /usr/<span class=\"built_in\">local</span>/redis_cluster/master_7000/redis.conf</div><div class=\"line\">redis-sentinel usr/<span class=\"built_in\">local</span>/redis_cluster/master_7000/sentinel.conf</div></pre></td></tr></table></figure>\n<h3 id=\"启动slave1和slave1-sentinel\"><a href=\"#启动slave1和slave1-sentinel\" class=\"headerlink\" title=\"启动slave1和slave1-sentinel\"></a>启动slave1和slave1-sentinel</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-server /usr/<span class=\"built_in\">local</span>/redis_cluster/slave_7001/redis.conf</div><div class=\"line\">redis-sentinel /usr/<span class=\"built_in\">local</span>/redis_cluster/slave_7001/sentinel.conf</div></pre></td></tr></table></figure>\n<h3 id=\"启动slave2和slave2-sentinel\"><a href=\"#启动slave2和slave2-sentinel\" class=\"headerlink\" title=\"启动slave2和slave2-sentinel\"></a>启动slave2和slave2-sentinel</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-server /usr/<span class=\"built_in\">local</span>/redis_cluster/slave_7002/redis.conf</div><div class=\"line\">redis-sentinel /usr/<span class=\"built_in\">local</span>/redis_cluster/slave_7002/sentinel.conf</div></pre></td></tr></table></figure>\n<h3 id=\"查看进程\"><a href=\"#查看进程\" class=\"headerlink\" title=\"查看进程\"></a>查看进程</h3><p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144135.jpg\" alt=\"\"></p>\n<h2 id=\"查看状态\"><a href=\"#查看状态\" class=\"headerlink\" title=\"查看状态\"></a>查看状态</h2><blockquote>\n<p>info Replication</p>\n</blockquote>\n<h3 id=\"查看master状态\"><a href=\"#查看master状态\" class=\"headerlink\" title=\"查看master状态\"></a>查看master状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli -h 127.0.0.1 -p 7000</div></pre></td></tr></table></figure>\n<p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144330.jpg\" alt=\"\"></p>\n<h3 id=\"查看slave1状态\"><a href=\"#查看slave1状态\" class=\"headerlink\" title=\"查看slave1状态\"></a>查看slave1状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli -h 127.0.0.1 -p 7001</div></pre></td></tr></table></figure>\n<p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144440.jpg\" alt=\"\"></p>\n<h3 id=\"查看slave2状态\"><a href=\"#查看slave2状态\" class=\"headerlink\" title=\"查看slave2状态\"></a>查看slave2状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli -h 127.0.0.1 -p 7002</div></pre></td></tr></table></figure>\n<p><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144544.jpg\" alt=\"\"></p>\n<h2 id=\"场景测试\"><a href=\"#场景测试\" class=\"headerlink\" title=\"场景测试\"></a>场景测试</h2><h3 id=\"场景1-slave宕机\"><a href=\"#场景1-slave宕机\" class=\"headerlink\" title=\"场景1: slave宕机\"></a>场景1: slave宕机</h3><p>关闭slave1：<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144813.jpg\" alt=\"\"><br>查看master的Replication信息：<br>此时只存在一个slave。<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-144908.jpg\" alt=\"\"></p>\n<h3 id=\"场景2：slave恢复\"><a href=\"#场景2：slave恢复\" class=\"headerlink\" title=\"场景2：slave恢复\"></a>场景2：slave恢复</h3><p><a href=\"#启动slave1和slave1-sentinel\">重新开启slave1</a></p>\n<p>查看sentinel状态：<br>sentinel能快速的发现slave加入到集群中：<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145043.jpg\" alt=\"\"><br>查看master的Replication信息：<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145130.jpg\" alt=\"\"></p>\n<h3 id=\"场景3：master宕机\"><a href=\"#场景3：master宕机\" class=\"headerlink\" title=\"场景3：master宕机\"></a>场景3：master宕机</h3><p>master-sentinel作为master 1的leader，会选取一个master 1的slave作为新的master。slave的选取是根据一个判断DNS情况的优先级来得到，优先级相同通过runid的排序得到，但目前优先级设定还没实现，所以直接获取runid排序得到slave 1。<br>然后发送命令slaveof no one来取消slave 1的slave状态来转换为master。当其他sentinel观察到该slave成为master后,就知道错误处理例程启动了。sentinel A然后发送给其他slave slaveof new-slave-ip-port 命令，当所有slave都配置完后，sentinel A从监测的masters列表中删除故障master，然后通知其他sentinels。<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145400.jpg\" alt=\"\"></p>\n<h3 id=\"场景4：master恢复\"><a href=\"#场景4：master恢复\" class=\"headerlink\" title=\"场景4：master恢复\"></a>场景4：master恢复</h3><p><a href=\"#启动master和master-sentinel\">重新启动原来的master</a></p>\n<p>查看sentinel状态：<br>原来的master自动切换成slave，不会自动恢复成master：<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145730.jpg\" alt=\"\"></p>\n<p>连接到slave2,可以看到目前有两个子节点了<br><img src=\"http://ow1k5uxqk.bkt.clouddn.com/2017-09-15-145803.jpg\" alt=\"\"></p>\n<p>好了, 测试完成!</p>\n<p><strong>注意：若在sentinel已选出新主但尚未完成其它实例的reconfigure之前，重启old master，则整个系统会出现无法选出new master的异常。</strong></p>"},{"title":"Spring3 整合MyBatis3 配置多数据源 动态选择SqlSessionFactory","date":"2017-09-10T02:57:21.000Z","_content":"\n## 摘要\n\nSpring整合MyBatis切换SqlSessionFactory有两种方法，第一、 继承SqlSessionDaoSupport，重写获取SqlSessionFactory的方法。第二、继承SqlSessionTemplate 重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor这个拦截器。其中最为关键还是继承SqlSessionTemplate 并重写里面的方法。\n\n而Spring整合MyBatis也有两种方式，一种是配置MapperFactoryBean，另一种则是利用MapperScannerConfigurer进行扫描接口或包完成对象的自动创建。相对来说后者更方便些。MapperFactoryBean继承了SqlSessionDaoSupport也就是动态切换SqlSessionFactory的第一种方法，我们需要重写和实现SqlSessionDaoSupport方法，或者是继承MapperFactoryBean来重写覆盖相关方法。如果利用MapperScannerConfigurer的配置整合来切换SqlSessionFactory，那么我们就需要继承SqlSessionTemplate，重写上面提到的方法。在整合的配置中很多地方都是可以注入SqlSessionTemplate代替SqlSessionFactory的注入的。因为SqlSessionTemplate的创建也是需要注入SqlSessionFactory的。\n\n<!-- more -->\n\n## 实现代码\n\n### 继承SqlSessionTemplate 重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor\n```java\nimport static java.lang.reflect.Proxy.newProxyInstance;\nimport static org.apache.ibatis.reflection.ExceptionUtil.unwrapThrowable;\nimport static org.mybatis.spring.SqlSessionUtils.closeSqlSession;\nimport static org.mybatis.spring.SqlSessionUtils.getSqlSession;\nimport static org.mybatis.spring.SqlSessionUtils.isSqlSessionTransactional;\n \nimport java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\nimport java.sql.Connection;\nimport java.util.List;\nimport java.util.Map;\n \nimport org.apache.ibatis.exceptions.PersistenceException;\nimport org.apache.ibatis.executor.BatchResult;\nimport org.apache.ibatis.session.Configuration;\nimport org.apache.ibatis.session.ExecutorType;\nimport org.apache.ibatis.session.ResultHandler;\nimport org.apache.ibatis.session.RowBounds;\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.mybatis.spring.MyBatisExceptionTranslator;\nimport org.mybatis.spring.SqlSessionTemplate;\nimport org.springframework.dao.support.PersistenceExceptionTranslator;\nimport org.springframework.util.Assert;\n \n/**\n * <b>function:</b> 继承SqlSessionTemplate 重写相关方法\n * @author hoojo\n * @createDate 2013-10-18 下午03:07:46\n * @file CustomSqlSessionTemplate.java\n * @package com.hoo.framework.mybatis.support\n * @project SHMB\n * @blog http://blog.csdn.net/IBM_hoojo\n * @email hoojo_@126.com\n * @version 1.0\n */\npublic class CustomSqlSessionTemplate extends SqlSessionTemplate {\n \n    private final SqlSessionFactory sqlSessionFactory;\n    private final ExecutorType executorType;\n    private final SqlSession sqlSessionProxy;\n    private final PersistenceExceptionTranslator exceptionTranslator;\n \n    private Map<Object, SqlSessionFactory> targetSqlSessionFactorys;\n    private SqlSessionFactory defaultTargetSqlSessionFactory;\n \n    public void setTargetSqlSessionFactorys(Map<Object, SqlSessionFactory> targetSqlSessionFactorys) {\n        this.targetSqlSessionFactorys = targetSqlSessionFactorys;\n    }\n \n    public void setDefaultTargetSqlSessionFactory(SqlSessionFactory defaultTargetSqlSessionFactory) {\n        this.defaultTargetSqlSessionFactory = defaultTargetSqlSessionFactory;\n    }\n \n    public CustomSqlSessionTemplate(SqlSessionFactory sqlSessionFactory) {\n        this(sqlSessionFactory, sqlSessionFactory.getConfiguration().getDefaultExecutorType());\n    }\n \n    public CustomSqlSessionTemplate(SqlSessionFactory sqlSessionFactory, ExecutorType executorType) {\n        this(sqlSessionFactory, executorType, new MyBatisExceptionTranslator(sqlSessionFactory.getConfiguration()\n                .getEnvironment().getDataSource(), true));\n    }\n \n    public CustomSqlSessionTemplate(SqlSessionFactory sqlSessionFactory, ExecutorType executorType,\n            PersistenceExceptionTranslator exceptionTranslator) {\n \n        super(sqlSessionFactory, executorType, exceptionTranslator);\n \n        this.sqlSessionFactory = sqlSessionFactory;\n        this.executorType = executorType;\n        this.exceptionTranslator = exceptionTranslator;\n        \n        this.sqlSessionProxy = (SqlSession) newProxyInstance(\n                SqlSessionFactory.class.getClassLoader(),\n                new Class[] { SqlSession.class }, \n                new SqlSessionInterceptor());\n \n        this.defaultTargetSqlSessionFactory = sqlSessionFactory;\n    }\n \n    @Override\n    public SqlSessionFactory getSqlSessionFactory() {\n \n        SqlSessionFactory targetSqlSessionFactory = targetSqlSessionFactorys.get(CustomerContextHolder.getContextType());\n        if (targetSqlSessionFactory != null) {\n            return targetSqlSessionFactory;\n        } else if (defaultTargetSqlSessionFactory != null) {\n            return defaultTargetSqlSessionFactory;\n        } else {\n            Assert.notNull(targetSqlSessionFactorys, \"Property 'targetSqlSessionFactorys' or 'defaultTargetSqlSessionFactory' are required\");\n            Assert.notNull(defaultTargetSqlSessionFactory, \"Property 'defaultTargetSqlSessionFactory' or 'targetSqlSessionFactorys' are required\");\n        }\n        return this.sqlSessionFactory;\n    }\n \n    @Override\n    public Configuration getConfiguration() {\n        return this.getSqlSessionFactory().getConfiguration();\n    }\n \n    public ExecutorType getExecutorType() {\n        return this.executorType;\n    }\n \n    public PersistenceExceptionTranslator getPersistenceExceptionTranslator() {\n        return this.exceptionTranslator;\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <T> T selectOne(String statement) {\n        return this.sqlSessionProxy.<T> selectOne(statement);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <T> T selectOne(String statement, Object parameter) {\n        return this.sqlSessionProxy.<T> selectOne(statement, parameter);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <K, V> Map<K, V> selectMap(String statement, String mapKey) {\n        return this.sqlSessionProxy.<K, V> selectMap(statement, mapKey);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <K, V> Map<K, V> selectMap(String statement, Object parameter, String mapKey) {\n        return this.sqlSessionProxy.<K, V> selectMap(statement, parameter, mapKey);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <K, V> Map<K, V> selectMap(String statement, Object parameter, String mapKey, RowBounds rowBounds) {\n        return this.sqlSessionProxy.<K, V> selectMap(statement, parameter, mapKey, rowBounds);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <E> List<E> selectList(String statement) {\n        return this.sqlSessionProxy.<E> selectList(statement);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <E> List<E> selectList(String statement, Object parameter) {\n        return this.sqlSessionProxy.<E> selectList(statement, parameter);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <E> List<E> selectList(String statement, Object parameter, RowBounds rowBounds) {\n        return this.sqlSessionProxy.<E> selectList(statement, parameter, rowBounds);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void select(String statement, ResultHandler handler) {\n        this.sqlSessionProxy.select(statement, handler);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void select(String statement, Object parameter, ResultHandler handler) {\n        this.sqlSessionProxy.select(statement, parameter, handler);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void select(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler) {\n        this.sqlSessionProxy.select(statement, parameter, rowBounds, handler);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public int insert(String statement) {\n        return this.sqlSessionProxy.insert(statement);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public int insert(String statement, Object parameter) {\n        return this.sqlSessionProxy.insert(statement, parameter);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public int update(String statement) {\n        return this.sqlSessionProxy.update(statement);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public int update(String statement, Object parameter) {\n        return this.sqlSessionProxy.update(statement, parameter);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public int delete(String statement) {\n        return this.sqlSessionProxy.delete(statement);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public int delete(String statement, Object parameter) {\n        return this.sqlSessionProxy.delete(statement, parameter);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <T> T getMapper(Class<T> type) {\n        return getConfiguration().getMapper(type, this);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void commit() {\n        throw new UnsupportedOperationException(\"Manual commit is not allowed over a Spring managed SqlSession\");\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void commit(boolean force) {\n        throw new UnsupportedOperationException(\"Manual commit is not allowed over a Spring managed SqlSession\");\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void rollback() {\n        throw new UnsupportedOperationException(\"Manual rollback is not allowed over a Spring managed SqlSession\");\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void rollback(boolean force) {\n        throw new UnsupportedOperationException(\"Manual rollback is not allowed over a Spring managed SqlSession\");\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void close() {\n        throw new UnsupportedOperationException(\"Manual close is not allowed over a Spring managed SqlSession\");\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void clearCache() {\n        this.sqlSessionProxy.clearCache();\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public Connection getConnection() {\n        return this.sqlSessionProxy.getConnection();\n    }\n \n    /**\n     * {@inheritDoc}\n     * @since 1.0.2\n     */\n    public List<BatchResult> flushStatements() {\n        return this.sqlSessionProxy.flushStatements();\n    }\n \n    /**\n     * Proxy needed to route MyBatis method calls to the proper SqlSession got from Spring's Transaction Manager It also\n     * unwraps exceptions thrown by {@code Method#invoke(Object, Object...)} to pass a {@code PersistenceException} to\n     * the {@code PersistenceExceptionTranslator}.\n     */\n    private class SqlSessionInterceptor implements InvocationHandler {\n        public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n            final SqlSession sqlSession = getSqlSession(\n                    CustomSqlSessionTemplate.this.getSqlSessionFactory(),\n                    CustomSqlSessionTemplate.this.executorType, \n                    CustomSqlSessionTemplate.this.exceptionTranslator);\n            try {\n                Object result = method.invoke(sqlSession, args);\n                if (!isSqlSessionTransactional(sqlSession, CustomSqlSessionTemplate.this.getSqlSessionFactory())) {\n                    // force commit even on non-dirty sessions because some databases require\n                    // a commit/rollback before calling close()\n                    sqlSession.commit(true);\n                }\n                return result;\n            } catch (Throwable t) {\n                Throwable unwrapped = unwrapThrowable(t);\n                if (CustomSqlSessionTemplate.this.exceptionTranslator != null && unwrapped instanceof PersistenceException) {\n                    Throwable translated = CustomSqlSessionTemplate.this.exceptionTranslator\n                        .translateExceptionIfPossible((PersistenceException) unwrapped);\n                    if (translated != null) {\n                        unwrapped = translated;\n                    }\n                }\n                throw unwrapped;\n            } finally {\n                closeSqlSession(sqlSession, CustomSqlSessionTemplate.this.getSqlSessionFactory());\n            }\n        }\n    }\n}\n```\n\n重写后的getSqlSessionFactory方法会从我们配置的SqlSessionFactory集合targetSqlSessionFactorys或默认的defaultTargetSqlSessionFactory中获取Session对象。而改写的SqlSessionInterceptor 是这个MyBatis整合Spring的关键，所有的SqlSessionFactory对象的session都将在这里完成创建、提交、关闭等操作。所以我们改写这里的代码，在这里获取getSqlSessionFactory的时候，从多个SqlSessionFactory中获取我们设置的那个即可。\n\n上面添加了targetSqlSessionFactorys、defaultTargetSqlSessionFactory两个属性来配置多个SqlSessionFactory对象和默认的SqlSessionFactory对象。\n\n### CustomerContextHolder 设置SqlSessionFactory的类型\n\n```java\n/**\n * <b>function:</b> 多数据源\n * @author hoojo\n * @createDate 2013-9-27 上午11:36:57\n * @file CustomerContextHolder.java\n * @package com.hoo.framework.spring.support\n * @project SHMB\n * @blog http://blog.csdn.net/IBM_hoojo\n * @email hoojo_@126.com\n * @version 1.0\n */\npublic abstract class CustomerContextHolder {\n \n    public final static String SESSION_FACTORY_MYSQL = \"mysql\";\n    public final static String SESSION_FACTORY_ORACLE = \"oracle\";\n    \n    private static final ThreadLocal<String> contextHolder = new ThreadLocal<String>();  \n    \n    public static void setContextType(String contextType) {  \n        contextHolder.set(contextType);  \n    }  \n      \n    public static String getContextType() {  \n        return contextHolder.get();  \n    }  \n      \n    public static void clearContextType() {  \n        contextHolder.remove();  \n    }  \n}\n```\n### 配置相关的文件applicationContext-session-factory.xml\n```xml\n<bean id=\"mysqlDataSource\" class=\"com.alibaba.druid.pool.DruidDataSource\" init-method=\"init\" destroy-method=\"close\">  \n        <!-- 基本属性 url、user、password -->  \n        <property name=\"url\" value=\"${jdbc.url}\" />  \n        <property name=\"username\" value=\"${jdbc.username}\" />  \n        <property name=\"password\" value=\"${jdbc.password}\" />  \n        <!-- Filters -->  \n        <!-- <property name=\"filters\" value=\"config,stat\" />  \n        <property name=\"connectionProperties\" value=\"config.decrypt=true\" /> -->  \n        <property name=\"filters\" value=\"stat\" />  \n        <!-- 配置初始化大小、最小、最大 -->  \n        <property name=\"initialSize\" value=\"1\" />  \n        <property name=\"minIdle\" value=\"1\" />  \n        <property name=\"maxActive\" value=\"20\" />  \n        <!-- 配置获取连接等待超时的时间 -->  \n        <property name=\"maxWait\" value=\"60000\" />  \n        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  \n        <property name=\"timeBetweenEvictionRunsMillis\" value=\"60000\" />  \n        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  \n        <property name=\"minEvictableIdleTimeMillis\" value=\"300000\" />  \n        <property name=\"validationQuery\" value=\"SELECT 'x'\" />  \n        <property name=\"testWhileIdle\" value=\"true\" />  \n        <property name=\"testOnBorrow\" value=\"false\" />  \n        <property name=\"testOnReturn\" value=\"false\" />  \n        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  \n        <property name=\"poolPreparedStatements\" value=\"false\" />  \n        <property name=\"maxPoolPreparedStatementPerConnectionSize\" value=\"20\" />  \n    </bean>  \n      \n    <!-- 数据源2 -->    \n    <bean id=\"oracleDataSource\" class=\"com.alibaba.druid.pool.DruidDataSource\" init-method=\"init\" destroy-method=\"close\">    \n        <!-- 基本属性 url、user、password -->    \n        <property name=\"driverClassName\" value=\"${dataSource2.driver}\" />  \n        <property name=\"url\" value=\"${dataSource2.url}\" />    \n        <property name=\"username\" value=\"${dataSource2.username}\" />    \n        <property name=\"password\" value=\"${dataSource2.password}\" />    \n        <!-- 配置初始化大小、最小、最大 -->    \n        <property name=\"initialSize\" value=\"1\" />    \n        <property name=\"minIdle\" value=\"1\" />    \n        <property name=\"maxActive\" value=\"20\" />    \n        <!-- 配置获取连接等待超时的时间 -->    \n        <property name=\"maxWait\" value=\"60000\" />    \n        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->    \n        <property name=\"timeBetweenEvictionRunsMillis\" value=\"60000\" />    \n        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->    \n        <property name=\"minEvictableIdleTimeMillis\" value=\"300000\" />    \n        <property name=\"validationQuery\" value=\"SELECT 'x' FROM DUAL\" />    \n        <property name=\"testWhileIdle\" value=\"true\" />    \n        <property name=\"testOnBorrow\" value=\"false\" />    \n        <property name=\"testOnReturn\" value=\"false\" />    \n        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->    \n        <property name=\"poolPreparedStatements\" value=\"true\" />    \n        <property name=\"maxPoolPreparedStatementPerConnectionSize\" value=\"20\" />    \n        <!-- 配置监控统计拦截的filters -->    \n        <property name=\"filters\" value=\"stat\" />    \n    </bean>    \n      \n    <bean id=\"oracleSqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">  \n        <property name=\"dataSource\" ref=\"oracleDataSource\"/>  \n        <property name=\"configLocation\" value=\"classpath:mybatis/mybatis-config.xml\"/>  \n        <!-- mapper和resultmap配置路径 -->   \n        <property name=\"mapperLocations\">  \n            <list>  \n                <!-- 表示在com.hoo目录下的任意包下的resultmap包目录中，以-resultmap.xml或-mapper.xml结尾所有文件 -->   \n                <value>classpath*:/mapper/TestMapper.xml</value>  \n            </list>  \n        </property>  \n    </bean>  \n      \n    <!-- 配置SqlSessionFactoryBean -->  \n    <bean id=\"mysqlSqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">  \n        <property name=\"dataSource\" ref=\"mysqlDataSource\"/>  \n        <property name=\"configLocation\" value=\"classpath:mybatis/mybatis-config.xml\"/>  \n        <!-- mapper和resultmap配置路径 -->    \n        <property name=\"mapperLocations\">  \n            <list>  \n                <!-- 表示在com.hoo目录下的任意包下的resultmap包目录中，以-resultmap.xml或-mapper.xml结尾所有文件 （oracle和mysql扫描的配置和路径不一样，如果是公共的都扫描 这里要区分下，不然就报错 找不到对应的表、视图）-->   \n                <value>classpath:com/zlzkj/app/mapper/*-mapper.xml</value>  \n            </list>  \n        </property>  \n    </bean>      \n      \n    <!-- 配置自定义的SqlSessionTemplate模板，注入相关配置 -->  \n    <bean id=\"sqlSessionTemplate\" class=\"com.zlzkj.app.support.CustomSqlSessionTemplate\">  \n        <constructor-arg ref=\"mysqlSqlSessionFactory\" />  \n        <property name=\"targetSqlSessionFactorys\">  \n            <map>       \n                <entry value-ref=\"oracleSqlSessionFactory\" key=\"oracle\"/>  \n                <entry value-ref=\"mysqlSqlSessionFactory\" key=\"mysql\"/>  \n            </map>   \n        </property>  \n    </bean>  \n      \n    <!-- 通过扫描的模式，扫描目录在com/hoo/任意目录下的mapper目录下，所有的mapper都需要继承SqlMapper接口的接口 -->  \n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">  \n        <!-- 注意注入sqlSessionTemplate -->  \n        <property name=\"sqlSessionTemplateBeanName\" value=\"sqlSessionTemplate\"/>  \n        <property name=\"basePackage\" value=\"com.zlzkj.app.mapper,com.zlzkj.core.mybatis,com.zlzkj.app.omapper\" />  \n    </bean>   \n```\n\n### Sercice测试调用\n```java\nCustomerContextHolder.setContextType(CustomerContextHolder.SESSION_FACTORY_ORACLE);  \ntry {  \n    Test test = mapper.selectByPrimaryKey((short)1);  \n    System.out.println(\">>>>>>\"+test.getName());  \n} catch (Exception e) {  \n    e.printStackTrace();  \n} \n```\n\n好了，如果数据能读出来，那就恭喜你，你配置多数据源成功了。\n\n\n## 注解支持\n使用注解方式, 动态配置数据源\n\n### 自定义定义注解:\n\n``` java\n/**\n * 切换数据源\n * 在service impl方法进行注解\n */\n@Target({ElementType.METHOD})\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\npublic @interface SwitchDataSource {\n\n    DataSoure value() default DataSoure.gt3;\n\n}\n\n\n/**\n * 数据源\n */\npublic enum DataSoure {\n\n    //mysql数据源\n    mysql,\n    //oracle数据源\n    oracle\n}\n```\n\n### AOP拦截注解\n使用业务前置的方式,对业务方法进行切面处理\n```java\n/**\n * 多数据源切面处理\n */\n@Aspect\npublic class SwitchDataSourceAspect {\n\n    @Before(value = \"execution(* gov.etax.dzswj.nsrzx.services..service..*.*(..)) and @annotation(gov.etax.dzswj.nsrzx.services.common.datasource.annotation.SwitchDataSource))\")\n    public void doBefore(JoinPoint joinPoint) throws Throwable {\n        Signature signature = joinPoint.getSignature();\n        MethodSignature methodSignature = (MethodSignature) signature;\n        Method method = methodSignature.getMethod();\n\n        if (method != null) {\n            SwitchDataSource annotation = method.getAnnotation(SwitchDataSource.class);\n            //设置数据源\n            CustomerContextHolder.setContextType(annotation.value().name());\n            return;\n        }\n        CustomerContextHolder.clearContextType();\n    }\n}\n```\n\n### 调用示例\n``` java\n/**\n * 纳税人信息查询服务实现类\n * @author SIVEN\n * @version 1.0\n */\n@Service\npublic class NsrxxServiceImpl implements INsrxxService{\n\n    @Override\n    @SwitchDataSource(DataSoure.gt3)\n    public ResultDto<NsrxxDto> queryNsrxxByDjxh(QueryDto<QueryByDjxh> dto) {\n\n        //int i = 1 /0;\n        INsrxxMapper mapper = SessionTemplateUtil.getMapper(INsrxxMapper.class);\n        return ResultDtoHelper.success(mapper.queryNsrxxByDjxh(dto.getQueryObj()));\n    }\n\n}\n```\n\n\n> 参考文章:\n- [Spring3 整合MyBatis3 配置多数据源 动态选择SqlSessionFactory](http://www.cnblogs.com/hoojo/p/dynamic_switch_sqlSessionfactory_muliteSqlSessionFactory.html)\n- [Spring+Mybatis多数据源配置mysql+oracle](http://blog.csdn.net/qq_28118497/article/details/52751202)\n","source":"_posts/Spring3-整合MyBatis3-配置多数据源-动态选择SqlSessionFactory.md","raw":"---\ntitle: Spring3 整合MyBatis3 配置多数据源 动态选择SqlSessionFactory\ndate: 2017-09-10 10:57:21\ntags:\n - JAVA\n - Mybatis\n - Spring\ncategories: \n - JAVA\n - Mybatis\n---\n\n## 摘要\n\nSpring整合MyBatis切换SqlSessionFactory有两种方法，第一、 继承SqlSessionDaoSupport，重写获取SqlSessionFactory的方法。第二、继承SqlSessionTemplate 重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor这个拦截器。其中最为关键还是继承SqlSessionTemplate 并重写里面的方法。\n\n而Spring整合MyBatis也有两种方式，一种是配置MapperFactoryBean，另一种则是利用MapperScannerConfigurer进行扫描接口或包完成对象的自动创建。相对来说后者更方便些。MapperFactoryBean继承了SqlSessionDaoSupport也就是动态切换SqlSessionFactory的第一种方法，我们需要重写和实现SqlSessionDaoSupport方法，或者是继承MapperFactoryBean来重写覆盖相关方法。如果利用MapperScannerConfigurer的配置整合来切换SqlSessionFactory，那么我们就需要继承SqlSessionTemplate，重写上面提到的方法。在整合的配置中很多地方都是可以注入SqlSessionTemplate代替SqlSessionFactory的注入的。因为SqlSessionTemplate的创建也是需要注入SqlSessionFactory的。\n\n<!-- more -->\n\n## 实现代码\n\n### 继承SqlSessionTemplate 重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor\n```java\nimport static java.lang.reflect.Proxy.newProxyInstance;\nimport static org.apache.ibatis.reflection.ExceptionUtil.unwrapThrowable;\nimport static org.mybatis.spring.SqlSessionUtils.closeSqlSession;\nimport static org.mybatis.spring.SqlSessionUtils.getSqlSession;\nimport static org.mybatis.spring.SqlSessionUtils.isSqlSessionTransactional;\n \nimport java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\nimport java.sql.Connection;\nimport java.util.List;\nimport java.util.Map;\n \nimport org.apache.ibatis.exceptions.PersistenceException;\nimport org.apache.ibatis.executor.BatchResult;\nimport org.apache.ibatis.session.Configuration;\nimport org.apache.ibatis.session.ExecutorType;\nimport org.apache.ibatis.session.ResultHandler;\nimport org.apache.ibatis.session.RowBounds;\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.mybatis.spring.MyBatisExceptionTranslator;\nimport org.mybatis.spring.SqlSessionTemplate;\nimport org.springframework.dao.support.PersistenceExceptionTranslator;\nimport org.springframework.util.Assert;\n \n/**\n * <b>function:</b> 继承SqlSessionTemplate 重写相关方法\n * @author hoojo\n * @createDate 2013-10-18 下午03:07:46\n * @file CustomSqlSessionTemplate.java\n * @package com.hoo.framework.mybatis.support\n * @project SHMB\n * @blog http://blog.csdn.net/IBM_hoojo\n * @email hoojo_@126.com\n * @version 1.0\n */\npublic class CustomSqlSessionTemplate extends SqlSessionTemplate {\n \n    private final SqlSessionFactory sqlSessionFactory;\n    private final ExecutorType executorType;\n    private final SqlSession sqlSessionProxy;\n    private final PersistenceExceptionTranslator exceptionTranslator;\n \n    private Map<Object, SqlSessionFactory> targetSqlSessionFactorys;\n    private SqlSessionFactory defaultTargetSqlSessionFactory;\n \n    public void setTargetSqlSessionFactorys(Map<Object, SqlSessionFactory> targetSqlSessionFactorys) {\n        this.targetSqlSessionFactorys = targetSqlSessionFactorys;\n    }\n \n    public void setDefaultTargetSqlSessionFactory(SqlSessionFactory defaultTargetSqlSessionFactory) {\n        this.defaultTargetSqlSessionFactory = defaultTargetSqlSessionFactory;\n    }\n \n    public CustomSqlSessionTemplate(SqlSessionFactory sqlSessionFactory) {\n        this(sqlSessionFactory, sqlSessionFactory.getConfiguration().getDefaultExecutorType());\n    }\n \n    public CustomSqlSessionTemplate(SqlSessionFactory sqlSessionFactory, ExecutorType executorType) {\n        this(sqlSessionFactory, executorType, new MyBatisExceptionTranslator(sqlSessionFactory.getConfiguration()\n                .getEnvironment().getDataSource(), true));\n    }\n \n    public CustomSqlSessionTemplate(SqlSessionFactory sqlSessionFactory, ExecutorType executorType,\n            PersistenceExceptionTranslator exceptionTranslator) {\n \n        super(sqlSessionFactory, executorType, exceptionTranslator);\n \n        this.sqlSessionFactory = sqlSessionFactory;\n        this.executorType = executorType;\n        this.exceptionTranslator = exceptionTranslator;\n        \n        this.sqlSessionProxy = (SqlSession) newProxyInstance(\n                SqlSessionFactory.class.getClassLoader(),\n                new Class[] { SqlSession.class }, \n                new SqlSessionInterceptor());\n \n        this.defaultTargetSqlSessionFactory = sqlSessionFactory;\n    }\n \n    @Override\n    public SqlSessionFactory getSqlSessionFactory() {\n \n        SqlSessionFactory targetSqlSessionFactory = targetSqlSessionFactorys.get(CustomerContextHolder.getContextType());\n        if (targetSqlSessionFactory != null) {\n            return targetSqlSessionFactory;\n        } else if (defaultTargetSqlSessionFactory != null) {\n            return defaultTargetSqlSessionFactory;\n        } else {\n            Assert.notNull(targetSqlSessionFactorys, \"Property 'targetSqlSessionFactorys' or 'defaultTargetSqlSessionFactory' are required\");\n            Assert.notNull(defaultTargetSqlSessionFactory, \"Property 'defaultTargetSqlSessionFactory' or 'targetSqlSessionFactorys' are required\");\n        }\n        return this.sqlSessionFactory;\n    }\n \n    @Override\n    public Configuration getConfiguration() {\n        return this.getSqlSessionFactory().getConfiguration();\n    }\n \n    public ExecutorType getExecutorType() {\n        return this.executorType;\n    }\n \n    public PersistenceExceptionTranslator getPersistenceExceptionTranslator() {\n        return this.exceptionTranslator;\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <T> T selectOne(String statement) {\n        return this.sqlSessionProxy.<T> selectOne(statement);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <T> T selectOne(String statement, Object parameter) {\n        return this.sqlSessionProxy.<T> selectOne(statement, parameter);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <K, V> Map<K, V> selectMap(String statement, String mapKey) {\n        return this.sqlSessionProxy.<K, V> selectMap(statement, mapKey);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <K, V> Map<K, V> selectMap(String statement, Object parameter, String mapKey) {\n        return this.sqlSessionProxy.<K, V> selectMap(statement, parameter, mapKey);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <K, V> Map<K, V> selectMap(String statement, Object parameter, String mapKey, RowBounds rowBounds) {\n        return this.sqlSessionProxy.<K, V> selectMap(statement, parameter, mapKey, rowBounds);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <E> List<E> selectList(String statement) {\n        return this.sqlSessionProxy.<E> selectList(statement);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <E> List<E> selectList(String statement, Object parameter) {\n        return this.sqlSessionProxy.<E> selectList(statement, parameter);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <E> List<E> selectList(String statement, Object parameter, RowBounds rowBounds) {\n        return this.sqlSessionProxy.<E> selectList(statement, parameter, rowBounds);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void select(String statement, ResultHandler handler) {\n        this.sqlSessionProxy.select(statement, handler);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void select(String statement, Object parameter, ResultHandler handler) {\n        this.sqlSessionProxy.select(statement, parameter, handler);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void select(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler) {\n        this.sqlSessionProxy.select(statement, parameter, rowBounds, handler);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public int insert(String statement) {\n        return this.sqlSessionProxy.insert(statement);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public int insert(String statement, Object parameter) {\n        return this.sqlSessionProxy.insert(statement, parameter);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public int update(String statement) {\n        return this.sqlSessionProxy.update(statement);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public int update(String statement, Object parameter) {\n        return this.sqlSessionProxy.update(statement, parameter);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public int delete(String statement) {\n        return this.sqlSessionProxy.delete(statement);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public int delete(String statement, Object parameter) {\n        return this.sqlSessionProxy.delete(statement, parameter);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public <T> T getMapper(Class<T> type) {\n        return getConfiguration().getMapper(type, this);\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void commit() {\n        throw new UnsupportedOperationException(\"Manual commit is not allowed over a Spring managed SqlSession\");\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void commit(boolean force) {\n        throw new UnsupportedOperationException(\"Manual commit is not allowed over a Spring managed SqlSession\");\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void rollback() {\n        throw new UnsupportedOperationException(\"Manual rollback is not allowed over a Spring managed SqlSession\");\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void rollback(boolean force) {\n        throw new UnsupportedOperationException(\"Manual rollback is not allowed over a Spring managed SqlSession\");\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void close() {\n        throw new UnsupportedOperationException(\"Manual close is not allowed over a Spring managed SqlSession\");\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public void clearCache() {\n        this.sqlSessionProxy.clearCache();\n    }\n \n    /**\n     * {@inheritDoc}\n     */\n    public Connection getConnection() {\n        return this.sqlSessionProxy.getConnection();\n    }\n \n    /**\n     * {@inheritDoc}\n     * @since 1.0.2\n     */\n    public List<BatchResult> flushStatements() {\n        return this.sqlSessionProxy.flushStatements();\n    }\n \n    /**\n     * Proxy needed to route MyBatis method calls to the proper SqlSession got from Spring's Transaction Manager It also\n     * unwraps exceptions thrown by {@code Method#invoke(Object, Object...)} to pass a {@code PersistenceException} to\n     * the {@code PersistenceExceptionTranslator}.\n     */\n    private class SqlSessionInterceptor implements InvocationHandler {\n        public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n            final SqlSession sqlSession = getSqlSession(\n                    CustomSqlSessionTemplate.this.getSqlSessionFactory(),\n                    CustomSqlSessionTemplate.this.executorType, \n                    CustomSqlSessionTemplate.this.exceptionTranslator);\n            try {\n                Object result = method.invoke(sqlSession, args);\n                if (!isSqlSessionTransactional(sqlSession, CustomSqlSessionTemplate.this.getSqlSessionFactory())) {\n                    // force commit even on non-dirty sessions because some databases require\n                    // a commit/rollback before calling close()\n                    sqlSession.commit(true);\n                }\n                return result;\n            } catch (Throwable t) {\n                Throwable unwrapped = unwrapThrowable(t);\n                if (CustomSqlSessionTemplate.this.exceptionTranslator != null && unwrapped instanceof PersistenceException) {\n                    Throwable translated = CustomSqlSessionTemplate.this.exceptionTranslator\n                        .translateExceptionIfPossible((PersistenceException) unwrapped);\n                    if (translated != null) {\n                        unwrapped = translated;\n                    }\n                }\n                throw unwrapped;\n            } finally {\n                closeSqlSession(sqlSession, CustomSqlSessionTemplate.this.getSqlSessionFactory());\n            }\n        }\n    }\n}\n```\n\n重写后的getSqlSessionFactory方法会从我们配置的SqlSessionFactory集合targetSqlSessionFactorys或默认的defaultTargetSqlSessionFactory中获取Session对象。而改写的SqlSessionInterceptor 是这个MyBatis整合Spring的关键，所有的SqlSessionFactory对象的session都将在这里完成创建、提交、关闭等操作。所以我们改写这里的代码，在这里获取getSqlSessionFactory的时候，从多个SqlSessionFactory中获取我们设置的那个即可。\n\n上面添加了targetSqlSessionFactorys、defaultTargetSqlSessionFactory两个属性来配置多个SqlSessionFactory对象和默认的SqlSessionFactory对象。\n\n### CustomerContextHolder 设置SqlSessionFactory的类型\n\n```java\n/**\n * <b>function:</b> 多数据源\n * @author hoojo\n * @createDate 2013-9-27 上午11:36:57\n * @file CustomerContextHolder.java\n * @package com.hoo.framework.spring.support\n * @project SHMB\n * @blog http://blog.csdn.net/IBM_hoojo\n * @email hoojo_@126.com\n * @version 1.0\n */\npublic abstract class CustomerContextHolder {\n \n    public final static String SESSION_FACTORY_MYSQL = \"mysql\";\n    public final static String SESSION_FACTORY_ORACLE = \"oracle\";\n    \n    private static final ThreadLocal<String> contextHolder = new ThreadLocal<String>();  \n    \n    public static void setContextType(String contextType) {  \n        contextHolder.set(contextType);  \n    }  \n      \n    public static String getContextType() {  \n        return contextHolder.get();  \n    }  \n      \n    public static void clearContextType() {  \n        contextHolder.remove();  \n    }  \n}\n```\n### 配置相关的文件applicationContext-session-factory.xml\n```xml\n<bean id=\"mysqlDataSource\" class=\"com.alibaba.druid.pool.DruidDataSource\" init-method=\"init\" destroy-method=\"close\">  \n        <!-- 基本属性 url、user、password -->  \n        <property name=\"url\" value=\"${jdbc.url}\" />  \n        <property name=\"username\" value=\"${jdbc.username}\" />  \n        <property name=\"password\" value=\"${jdbc.password}\" />  \n        <!-- Filters -->  \n        <!-- <property name=\"filters\" value=\"config,stat\" />  \n        <property name=\"connectionProperties\" value=\"config.decrypt=true\" /> -->  \n        <property name=\"filters\" value=\"stat\" />  \n        <!-- 配置初始化大小、最小、最大 -->  \n        <property name=\"initialSize\" value=\"1\" />  \n        <property name=\"minIdle\" value=\"1\" />  \n        <property name=\"maxActive\" value=\"20\" />  \n        <!-- 配置获取连接等待超时的时间 -->  \n        <property name=\"maxWait\" value=\"60000\" />  \n        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  \n        <property name=\"timeBetweenEvictionRunsMillis\" value=\"60000\" />  \n        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  \n        <property name=\"minEvictableIdleTimeMillis\" value=\"300000\" />  \n        <property name=\"validationQuery\" value=\"SELECT 'x'\" />  \n        <property name=\"testWhileIdle\" value=\"true\" />  \n        <property name=\"testOnBorrow\" value=\"false\" />  \n        <property name=\"testOnReturn\" value=\"false\" />  \n        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  \n        <property name=\"poolPreparedStatements\" value=\"false\" />  \n        <property name=\"maxPoolPreparedStatementPerConnectionSize\" value=\"20\" />  \n    </bean>  \n      \n    <!-- 数据源2 -->    \n    <bean id=\"oracleDataSource\" class=\"com.alibaba.druid.pool.DruidDataSource\" init-method=\"init\" destroy-method=\"close\">    \n        <!-- 基本属性 url、user、password -->    \n        <property name=\"driverClassName\" value=\"${dataSource2.driver}\" />  \n        <property name=\"url\" value=\"${dataSource2.url}\" />    \n        <property name=\"username\" value=\"${dataSource2.username}\" />    \n        <property name=\"password\" value=\"${dataSource2.password}\" />    \n        <!-- 配置初始化大小、最小、最大 -->    \n        <property name=\"initialSize\" value=\"1\" />    \n        <property name=\"minIdle\" value=\"1\" />    \n        <property name=\"maxActive\" value=\"20\" />    \n        <!-- 配置获取连接等待超时的时间 -->    \n        <property name=\"maxWait\" value=\"60000\" />    \n        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->    \n        <property name=\"timeBetweenEvictionRunsMillis\" value=\"60000\" />    \n        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->    \n        <property name=\"minEvictableIdleTimeMillis\" value=\"300000\" />    \n        <property name=\"validationQuery\" value=\"SELECT 'x' FROM DUAL\" />    \n        <property name=\"testWhileIdle\" value=\"true\" />    \n        <property name=\"testOnBorrow\" value=\"false\" />    \n        <property name=\"testOnReturn\" value=\"false\" />    \n        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->    \n        <property name=\"poolPreparedStatements\" value=\"true\" />    \n        <property name=\"maxPoolPreparedStatementPerConnectionSize\" value=\"20\" />    \n        <!-- 配置监控统计拦截的filters -->    \n        <property name=\"filters\" value=\"stat\" />    \n    </bean>    \n      \n    <bean id=\"oracleSqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">  \n        <property name=\"dataSource\" ref=\"oracleDataSource\"/>  \n        <property name=\"configLocation\" value=\"classpath:mybatis/mybatis-config.xml\"/>  \n        <!-- mapper和resultmap配置路径 -->   \n        <property name=\"mapperLocations\">  \n            <list>  \n                <!-- 表示在com.hoo目录下的任意包下的resultmap包目录中，以-resultmap.xml或-mapper.xml结尾所有文件 -->   \n                <value>classpath*:/mapper/TestMapper.xml</value>  \n            </list>  \n        </property>  \n    </bean>  \n      \n    <!-- 配置SqlSessionFactoryBean -->  \n    <bean id=\"mysqlSqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">  \n        <property name=\"dataSource\" ref=\"mysqlDataSource\"/>  \n        <property name=\"configLocation\" value=\"classpath:mybatis/mybatis-config.xml\"/>  \n        <!-- mapper和resultmap配置路径 -->    \n        <property name=\"mapperLocations\">  \n            <list>  \n                <!-- 表示在com.hoo目录下的任意包下的resultmap包目录中，以-resultmap.xml或-mapper.xml结尾所有文件 （oracle和mysql扫描的配置和路径不一样，如果是公共的都扫描 这里要区分下，不然就报错 找不到对应的表、视图）-->   \n                <value>classpath:com/zlzkj/app/mapper/*-mapper.xml</value>  \n            </list>  \n        </property>  \n    </bean>      \n      \n    <!-- 配置自定义的SqlSessionTemplate模板，注入相关配置 -->  \n    <bean id=\"sqlSessionTemplate\" class=\"com.zlzkj.app.support.CustomSqlSessionTemplate\">  \n        <constructor-arg ref=\"mysqlSqlSessionFactory\" />  \n        <property name=\"targetSqlSessionFactorys\">  \n            <map>       \n                <entry value-ref=\"oracleSqlSessionFactory\" key=\"oracle\"/>  \n                <entry value-ref=\"mysqlSqlSessionFactory\" key=\"mysql\"/>  \n            </map>   \n        </property>  \n    </bean>  \n      \n    <!-- 通过扫描的模式，扫描目录在com/hoo/任意目录下的mapper目录下，所有的mapper都需要继承SqlMapper接口的接口 -->  \n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">  \n        <!-- 注意注入sqlSessionTemplate -->  \n        <property name=\"sqlSessionTemplateBeanName\" value=\"sqlSessionTemplate\"/>  \n        <property name=\"basePackage\" value=\"com.zlzkj.app.mapper,com.zlzkj.core.mybatis,com.zlzkj.app.omapper\" />  \n    </bean>   \n```\n\n### Sercice测试调用\n```java\nCustomerContextHolder.setContextType(CustomerContextHolder.SESSION_FACTORY_ORACLE);  \ntry {  \n    Test test = mapper.selectByPrimaryKey((short)1);  \n    System.out.println(\">>>>>>\"+test.getName());  \n} catch (Exception e) {  \n    e.printStackTrace();  \n} \n```\n\n好了，如果数据能读出来，那就恭喜你，你配置多数据源成功了。\n\n\n## 注解支持\n使用注解方式, 动态配置数据源\n\n### 自定义定义注解:\n\n``` java\n/**\n * 切换数据源\n * 在service impl方法进行注解\n */\n@Target({ElementType.METHOD})\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\npublic @interface SwitchDataSource {\n\n    DataSoure value() default DataSoure.gt3;\n\n}\n\n\n/**\n * 数据源\n */\npublic enum DataSoure {\n\n    //mysql数据源\n    mysql,\n    //oracle数据源\n    oracle\n}\n```\n\n### AOP拦截注解\n使用业务前置的方式,对业务方法进行切面处理\n```java\n/**\n * 多数据源切面处理\n */\n@Aspect\npublic class SwitchDataSourceAspect {\n\n    @Before(value = \"execution(* gov.etax.dzswj.nsrzx.services..service..*.*(..)) and @annotation(gov.etax.dzswj.nsrzx.services.common.datasource.annotation.SwitchDataSource))\")\n    public void doBefore(JoinPoint joinPoint) throws Throwable {\n        Signature signature = joinPoint.getSignature();\n        MethodSignature methodSignature = (MethodSignature) signature;\n        Method method = methodSignature.getMethod();\n\n        if (method != null) {\n            SwitchDataSource annotation = method.getAnnotation(SwitchDataSource.class);\n            //设置数据源\n            CustomerContextHolder.setContextType(annotation.value().name());\n            return;\n        }\n        CustomerContextHolder.clearContextType();\n    }\n}\n```\n\n### 调用示例\n``` java\n/**\n * 纳税人信息查询服务实现类\n * @author SIVEN\n * @version 1.0\n */\n@Service\npublic class NsrxxServiceImpl implements INsrxxService{\n\n    @Override\n    @SwitchDataSource(DataSoure.gt3)\n    public ResultDto<NsrxxDto> queryNsrxxByDjxh(QueryDto<QueryByDjxh> dto) {\n\n        //int i = 1 /0;\n        INsrxxMapper mapper = SessionTemplateUtil.getMapper(INsrxxMapper.class);\n        return ResultDtoHelper.success(mapper.queryNsrxxByDjxh(dto.getQueryObj()));\n    }\n\n}\n```\n\n\n> 参考文章:\n- [Spring3 整合MyBatis3 配置多数据源 动态选择SqlSessionFactory](http://www.cnblogs.com/hoojo/p/dynamic_switch_sqlSessionfactory_muliteSqlSessionFactory.html)\n- [Spring+Mybatis多数据源配置mysql+oracle](http://blog.csdn.net/qq_28118497/article/details/52751202)\n","slug":"Spring3-整合MyBatis3-配置多数据源-动态选择SqlSessionFactory","published":1,"updated":"2017-09-16T11:16:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7n84lkk0009zxrxntlo43o7","content":"<h2 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h2><p>Spring整合MyBatis切换SqlSessionFactory有两种方法，第一、 继承SqlSessionDaoSupport，重写获取SqlSessionFactory的方法。第二、继承SqlSessionTemplate 重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor这个拦截器。其中最为关键还是继承SqlSessionTemplate 并重写里面的方法。</p>\n<p>而Spring整合MyBatis也有两种方式，一种是配置MapperFactoryBean，另一种则是利用MapperScannerConfigurer进行扫描接口或包完成对象的自动创建。相对来说后者更方便些。MapperFactoryBean继承了SqlSessionDaoSupport也就是动态切换SqlSessionFactory的第一种方法，我们需要重写和实现SqlSessionDaoSupport方法，或者是继承MapperFactoryBean来重写覆盖相关方法。如果利用MapperScannerConfigurer的配置整合来切换SqlSessionFactory，那么我们就需要继承SqlSessionTemplate，重写上面提到的方法。在整合的配置中很多地方都是可以注入SqlSessionTemplate代替SqlSessionFactory的注入的。因为SqlSessionTemplate的创建也是需要注入SqlSessionFactory的。</p>\n<a id=\"more\"></a>\n<h2 id=\"实现代码\"><a href=\"#实现代码\" class=\"headerlink\" title=\"实现代码\"></a>实现代码</h2><h3 id=\"继承SqlSessionTemplate-重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor\"><a href=\"#继承SqlSessionTemplate-重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor\" class=\"headerlink\" title=\"继承SqlSessionTemplate 重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor\"></a>继承SqlSessionTemplate 重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> java.lang.reflect.Proxy.newProxyInstance;</div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> org.apache.ibatis.reflection.ExceptionUtil.unwrapThrowable;</div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> org.mybatis.spring.SqlSessionUtils.closeSqlSession;</div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> org.mybatis.spring.SqlSessionUtils.getSqlSession;</div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> org.mybatis.spring.SqlSessionUtils.isSqlSessionTransactional;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.InvocationHandler;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.exceptions.PersistenceException;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.executor.BatchResult;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.Configuration;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.ExecutorType;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.ResultHandler;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.RowBounds;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSession;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.mybatis.spring.MyBatisExceptionTranslator;</div><div class=\"line\"><span class=\"keyword\">import</span> org.mybatis.spring.SqlSessionTemplate;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.dao.support.PersistenceExceptionTranslator;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.Assert;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * &lt;b&gt;function:&lt;/b&gt; 继承SqlSessionTemplate 重写相关方法</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> hoojo</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@createDate</span> 2013-10-18 下午03:07:46</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@file</span> CustomSqlSessionTemplate.java</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> com.hoo.framework.mybatis.support</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@project</span> SHMB</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@blog</span> http://blog.csdn.net/IBM_hoojo</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@email</span> hoojo_@126.com</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomSqlSessionTemplate</span> <span class=\"keyword\">extends</span> <span class=\"title\">SqlSessionTemplate</span> </span>&#123;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> SqlSessionFactory sqlSessionFactory;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ExecutorType executorType;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> SqlSession sqlSessionProxy;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> PersistenceExceptionTranslator exceptionTranslator;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"keyword\">private</span> Map&lt;Object, SqlSessionFactory&gt; targetSqlSessionFactorys;</div><div class=\"line\">    <span class=\"keyword\">private</span> SqlSessionFactory defaultTargetSqlSessionFactory;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setTargetSqlSessionFactorys</span><span class=\"params\">(Map&lt;Object, SqlSessionFactory&gt; targetSqlSessionFactorys)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.targetSqlSessionFactorys = targetSqlSessionFactorys;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDefaultTargetSqlSessionFactory</span><span class=\"params\">(SqlSessionFactory defaultTargetSqlSessionFactory)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.defaultTargetSqlSessionFactory = defaultTargetSqlSessionFactory;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CustomSqlSessionTemplate</span><span class=\"params\">(SqlSessionFactory sqlSessionFactory)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>(sqlSessionFactory, sqlSessionFactory.getConfiguration().getDefaultExecutorType());</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CustomSqlSessionTemplate</span><span class=\"params\">(SqlSessionFactory sqlSessionFactory, ExecutorType executorType)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>(sqlSessionFactory, executorType, <span class=\"keyword\">new</span> MyBatisExceptionTranslator(sqlSessionFactory.getConfiguration()</div><div class=\"line\">                .getEnvironment().getDataSource(), <span class=\"keyword\">true</span>));</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CustomSqlSessionTemplate</span><span class=\"params\">(SqlSessionFactory sqlSessionFactory, ExecutorType executorType,</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"params\">            PersistenceExceptionTranslator exceptionTranslator)</span> </span>&#123;</div><div class=\"line\"> </div><div class=\"line\">        <span class=\"keyword\">super</span>(sqlSessionFactory, executorType, exceptionTranslator);</div><div class=\"line\"> </div><div class=\"line\">        <span class=\"keyword\">this</span>.sqlSessionFactory = sqlSessionFactory;</div><div class=\"line\">        <span class=\"keyword\">this</span>.executorType = executorType;</div><div class=\"line\">        <span class=\"keyword\">this</span>.exceptionTranslator = exceptionTranslator;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">this</span>.sqlSessionProxy = (SqlSession) newProxyInstance(</div><div class=\"line\">                SqlSessionFactory.class.getClassLoader(),</div><div class=\"line\">                <span class=\"keyword\">new</span> Class[] &#123; SqlSession.class &#125;, </div><div class=\"line\">                <span class=\"keyword\">new</span> SqlSessionInterceptor());</div><div class=\"line\"> </div><div class=\"line\">        <span class=\"keyword\">this</span>.defaultTargetSqlSessionFactory = sqlSessionFactory;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> SqlSessionFactory <span class=\"title\">getSqlSessionFactory</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"> </div><div class=\"line\">        SqlSessionFactory targetSqlSessionFactory = targetSqlSessionFactorys.get(CustomerContextHolder.getContextType());</div><div class=\"line\">        <span class=\"keyword\">if</span> (targetSqlSessionFactory != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> targetSqlSessionFactory;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (defaultTargetSqlSessionFactory != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> defaultTargetSqlSessionFactory;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            Assert.notNull(targetSqlSessionFactorys, <span class=\"string\">\"Property 'targetSqlSessionFactorys' or 'defaultTargetSqlSessionFactory' are required\"</span>);</div><div class=\"line\">            Assert.notNull(defaultTargetSqlSessionFactory, <span class=\"string\">\"Property 'defaultTargetSqlSessionFactory' or 'targetSqlSessionFactorys' are required\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionFactory;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Configuration <span class=\"title\">getConfiguration</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.getSqlSessionFactory().getConfiguration();</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ExecutorType <span class=\"title\">getExecutorType</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.executorType;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> PersistenceExceptionTranslator <span class=\"title\">getPersistenceExceptionTranslator</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.exceptionTranslator;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">selectOne</span><span class=\"params\">(String statement)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;T&gt; selectOne(statement);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">selectOne</span><span class=\"params\">(String statement, Object parameter)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;T&gt; selectOne(statement, parameter);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;K, V&gt; <span class=\"function\">Map&lt;K, V&gt; <span class=\"title\">selectMap</span><span class=\"params\">(String statement, String mapKey)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;K, V&gt; selectMap(statement, mapKey);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;K, V&gt; <span class=\"function\">Map&lt;K, V&gt; <span class=\"title\">selectMap</span><span class=\"params\">(String statement, Object parameter, String mapKey)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;K, V&gt; selectMap(statement, parameter, mapKey);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;K, V&gt; <span class=\"function\">Map&lt;K, V&gt; <span class=\"title\">selectMap</span><span class=\"params\">(String statement, Object parameter, String mapKey, RowBounds rowBounds)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;K, V&gt; selectMap(statement, parameter, mapKey, rowBounds);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;E&gt; <span class=\"function\">List&lt;E&gt; <span class=\"title\">selectList</span><span class=\"params\">(String statement)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;E&gt; selectList(statement);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;E&gt; <span class=\"function\">List&lt;E&gt; <span class=\"title\">selectList</span><span class=\"params\">(String statement, Object parameter)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;E&gt; selectList(statement, parameter);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;E&gt; <span class=\"function\">List&lt;E&gt; <span class=\"title\">selectList</span><span class=\"params\">(String statement, Object parameter, RowBounds rowBounds)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;E&gt; selectList(statement, parameter, rowBounds);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">select</span><span class=\"params\">(String statement, ResultHandler handler)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.sqlSessionProxy.select(statement, handler);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">select</span><span class=\"params\">(String statement, Object parameter, ResultHandler handler)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.sqlSessionProxy.select(statement, parameter, handler);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">select</span><span class=\"params\">(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.sqlSessionProxy.select(statement, parameter, rowBounds, handler);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">insert</span><span class=\"params\">(String statement)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.insert(statement);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">insert</span><span class=\"params\">(String statement, Object parameter)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.insert(statement, parameter);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">update</span><span class=\"params\">(String statement)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.update(statement);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">update</span><span class=\"params\">(String statement, Object parameter)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.update(statement, parameter);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">delete</span><span class=\"params\">(String statement)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.delete(statement);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">delete</span><span class=\"params\">(String statement, Object parameter)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.delete(statement, parameter);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getMapper</span><span class=\"params\">(Class&lt;T&gt; type)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> getConfiguration().getMapper(type, <span class=\"keyword\">this</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">commit</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> UnsupportedOperationException(<span class=\"string\">\"Manual commit is not allowed over a Spring managed SqlSession\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">commit</span><span class=\"params\">(<span class=\"keyword\">boolean</span> force)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> UnsupportedOperationException(<span class=\"string\">\"Manual commit is not allowed over a Spring managed SqlSession\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">rollback</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> UnsupportedOperationException(<span class=\"string\">\"Manual rollback is not allowed over a Spring managed SqlSession\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">rollback</span><span class=\"params\">(<span class=\"keyword\">boolean</span> force)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> UnsupportedOperationException(<span class=\"string\">\"Manual rollback is not allowed over a Spring managed SqlSession\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> UnsupportedOperationException(<span class=\"string\">\"Manual close is not allowed over a Spring managed SqlSession\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clearCache</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.sqlSessionProxy.clearCache();</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.getConnection();</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@since</span> 1.0.2</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;BatchResult&gt; <span class=\"title\">flushStatements</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.flushStatements();</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Proxy needed to route MyBatis method calls to the proper SqlSession got from Spring's Transaction Manager It also</span></div><div class=\"line\"><span class=\"comment\">     * unwraps exceptions thrown by &#123;<span class=\"doctag\">@code</span> Method#invoke(Object, Object...)&#125; to pass a &#123;<span class=\"doctag\">@code</span> PersistenceException&#125; to</span></div><div class=\"line\"><span class=\"comment\">     * the &#123;<span class=\"doctag\">@code</span> PersistenceExceptionTranslator&#125;.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SqlSessionInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title\">InvocationHandler</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">invoke</span><span class=\"params\">(Object proxy, Method method, Object[] args)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">final</span> SqlSession sqlSession = getSqlSession(</div><div class=\"line\">                    CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.getSqlSessionFactory(),</div><div class=\"line\">                    CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.executorType, </div><div class=\"line\">                    CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.exceptionTranslator);</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                Object result = method.invoke(sqlSession, args);</div><div class=\"line\">                <span class=\"keyword\">if</span> (!isSqlSessionTransactional(sqlSession, CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.getSqlSessionFactory())) &#123;</div><div class=\"line\">                    <span class=\"comment\">// force commit even on non-dirty sessions because some databases require</span></div><div class=\"line\">                    <span class=\"comment\">// a commit/rollback before calling close()</span></div><div class=\"line\">                    sqlSession.commit(<span class=\"keyword\">true</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">return</span> result;</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Throwable t) &#123;</div><div class=\"line\">                Throwable unwrapped = unwrapThrowable(t);</div><div class=\"line\">                <span class=\"keyword\">if</span> (CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.exceptionTranslator != <span class=\"keyword\">null</span> &amp;&amp; unwrapped <span class=\"keyword\">instanceof</span> PersistenceException) &#123;</div><div class=\"line\">                    Throwable translated = CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.exceptionTranslator</div><div class=\"line\">                        .translateExceptionIfPossible((PersistenceException) unwrapped);</div><div class=\"line\">                    <span class=\"keyword\">if</span> (translated != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                        unwrapped = translated;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">throw</span> unwrapped;</div><div class=\"line\">            &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">                closeSqlSession(sqlSession, CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.getSqlSessionFactory());</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>重写后的getSqlSessionFactory方法会从我们配置的SqlSessionFactory集合targetSqlSessionFactorys或默认的defaultTargetSqlSessionFactory中获取Session对象。而改写的SqlSessionInterceptor 是这个MyBatis整合Spring的关键，所有的SqlSessionFactory对象的session都将在这里完成创建、提交、关闭等操作。所以我们改写这里的代码，在这里获取getSqlSessionFactory的时候，从多个SqlSessionFactory中获取我们设置的那个即可。</p>\n<p>上面添加了targetSqlSessionFactorys、defaultTargetSqlSessionFactory两个属性来配置多个SqlSessionFactory对象和默认的SqlSessionFactory对象。</p>\n<h3 id=\"CustomerContextHolder-设置SqlSessionFactory的类型\"><a href=\"#CustomerContextHolder-设置SqlSessionFactory的类型\" class=\"headerlink\" title=\"CustomerContextHolder 设置SqlSessionFactory的类型\"></a>CustomerContextHolder 设置SqlSessionFactory的类型</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * &lt;b&gt;function:&lt;/b&gt; 多数据源</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> hoojo</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@createDate</span> 2013-9-27 上午11:36:57</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@file</span> CustomerContextHolder.java</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> com.hoo.framework.spring.support</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@project</span> SHMB</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@blog</span> http://blog.csdn.net/IBM_hoojo</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@email</span> hoojo_@126.com</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomerContextHolder</span> </span>&#123;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String SESSION_FACTORY_MYSQL = <span class=\"string\">\"mysql\"</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String SESSION_FACTORY_ORACLE = <span class=\"string\">\"oracle\"</span>;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ThreadLocal&lt;String&gt; contextHolder = <span class=\"keyword\">new</span> ThreadLocal&lt;String&gt;();  </div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setContextType</span><span class=\"params\">(String contextType)</span> </span>&#123;  </div><div class=\"line\">        contextHolder.set(contextType);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getContextType</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">return</span> contextHolder.get();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">clearContextType</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">        contextHolder.remove();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"配置相关的文件applicationContext-session-factory-xml\"><a href=\"#配置相关的文件applicationContext-session-factory-xml\" class=\"headerlink\" title=\"配置相关的文件applicationContext-session-factory.xml\"></a>配置相关的文件applicationContext-session-factory.xml</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mysqlDataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.alibaba.druid.pool.DruidDataSource\"</span> <span class=\"attr\">init-method</span>=<span class=\"string\">\"init\"</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">\"close\"</span>&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 基本属性 url、user、password --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.url&#125;\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.username&#125;\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- Filters --&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- &lt;property name=\"filters\" value=\"config,stat\" /&gt;  </span></div><div class=\"line\"><span class=\"comment\">        &lt;property name=\"connectionProperties\" value=\"config.decrypt=true\" /&gt; --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"filters\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"stat\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"initialSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxActive\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"20\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxWait\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"60000\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"timeBetweenEvictionRunsMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"60000\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minEvictableIdleTimeMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"300000\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"validationQuery\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"SELECT 'x'\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testWhileIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnBorrow\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnReturn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"poolPreparedStatements\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxPoolPreparedStatementPerConnectionSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"20\"</span> /&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>  </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 数据源2 --&gt;</span>    </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"oracleDataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.alibaba.druid.pool.DruidDataSource\"</span> <span class=\"attr\">init-method</span>=<span class=\"string\">\"init\"</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">\"close\"</span>&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 基本属性 url、user、password --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClassName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;dataSource2.driver&#125;\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;dataSource2.url&#125;\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;dataSource2.username&#125;\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;dataSource2.password&#125;\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"initialSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxActive\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"20\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxWait\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"60000\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"timeBetweenEvictionRunsMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"60000\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minEvictableIdleTimeMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"300000\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"validationQuery\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"SELECT 'x' FROM DUAL\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testWhileIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnBorrow\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnReturn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"poolPreparedStatements\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxPoolPreparedStatementPerConnectionSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"20\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置监控统计拦截的filters --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"filters\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"stat\"</span> /&gt;</span>    </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>    </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"oracleSqlSessionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.SqlSessionFactoryBean\"</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"oracleDataSource\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"configLocation\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"classpath:mybatis/mybatis-config.xml\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- mapper和resultmap配置路径 --&gt;</span>   </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"mapperLocations\"</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span>  </div><div class=\"line\">                <span class=\"comment\">&lt;!-- 表示在com.hoo目录下的任意包下的resultmap包目录中，以-resultmap.xml或-mapper.xml结尾所有文件 --&gt;</span>   </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>classpath*:/mapper/TestMapper.xml<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>  </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 配置SqlSessionFactoryBean --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mysqlSqlSessionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.SqlSessionFactoryBean\"</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"mysqlDataSource\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"configLocation\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"classpath:mybatis/mybatis-config.xml\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- mapper和resultmap配置路径 --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"mapperLocations\"</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span>  </div><div class=\"line\">                <span class=\"comment\">&lt;!-- 表示在com.hoo目录下的任意包下的resultmap包目录中，以-resultmap.xml或-mapper.xml结尾所有文件 （oracle和mysql扫描的配置和路径不一样，如果是公共的都扫描 这里要区分下，不然就报错 找不到对应的表、视图）--&gt;</span>   </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>classpath:com/zlzkj/app/mapper/*-mapper.xml<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>      </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 配置自定义的SqlSessionTemplate模板，注入相关配置 --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"sqlSessionTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.zlzkj.app.support.CustomSqlSessionTemplate\"</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"mysqlSqlSessionFactory\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"targetSqlSessionFactorys\"</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">map</span>&gt;</span>       </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">value-ref</span>=<span class=\"string\">\"oracleSqlSessionFactory\"</span> <span class=\"attr\">key</span>=<span class=\"string\">\"oracle\"</span>/&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">value-ref</span>=<span class=\"string\">\"mysqlSqlSessionFactory\"</span> <span class=\"attr\">key</span>=<span class=\"string\">\"mysql\"</span>/&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">map</span>&gt;</span>   </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>  </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 通过扫描的模式，扫描目录在com/hoo/任意目录下的mapper目录下，所有的mapper都需要继承SqlMapper接口的接口 --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.mapper.MapperScannerConfigurer\"</span>&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 注意注入sqlSessionTemplate --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sqlSessionTemplateBeanName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"sqlSessionTemplate\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"basePackage\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.zlzkj.app.mapper,com.zlzkj.core.mybatis,com.zlzkj.app.omapper\"</span> /&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Sercice测试调用\"><a href=\"#Sercice测试调用\" class=\"headerlink\" title=\"Sercice测试调用\"></a>Sercice测试调用</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CustomerContextHolder.setContextType(CustomerContextHolder.SESSION_FACTORY_ORACLE);  </div><div class=\"line\"><span class=\"keyword\">try</span> &#123;  </div><div class=\"line\">    Test test = mapper.selectByPrimaryKey((<span class=\"keyword\">short</span>)<span class=\"number\">1</span>);  </div><div class=\"line\">    System.out.println(<span class=\"string\">\"&gt;&gt;&gt;&gt;&gt;&gt;\"</span>+test.getName());  </div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;  </div><div class=\"line\">    e.printStackTrace();  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>好了，如果数据能读出来，那就恭喜你，你配置多数据源成功了。</p>\n<h2 id=\"注解支持\"><a href=\"#注解支持\" class=\"headerlink\" title=\"注解支持\"></a>注解支持</h2><p>使用注解方式, 动态配置数据源</p>\n<h3 id=\"自定义定义注解\"><a href=\"#自定义定义注解\" class=\"headerlink\" title=\"自定义定义注解:\"></a>自定义定义注解:</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 切换数据源</span></div><div class=\"line\"><span class=\"comment\"> * 在service impl方法进行注解</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"meta\">@Target</span>(&#123;ElementType.METHOD&#125;)</div><div class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class=\"line\"><span class=\"meta\">@Documented</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> SwitchDataSource &#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\">DataSoure <span class=\"title\">value</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> DataSoure.gt3</span>;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 数据源</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> DataSoure &#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//mysql数据源</span></div><div class=\"line\">    mysql,</div><div class=\"line\">    <span class=\"comment\">//oracle数据源</span></div><div class=\"line\">    oracle</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"AOP拦截注解\"><a href=\"#AOP拦截注解\" class=\"headerlink\" title=\"AOP拦截注解\"></a>AOP拦截注解</h3><p>使用业务前置的方式,对业务方法进行切面处理<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 多数据源切面处理</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"meta\">@Aspect</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SwitchDataSourceAspect</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Before</span>(value = <span class=\"string\">\"execution(* gov.etax.dzswj.nsrzx.services..service..*.*(..)) and @annotation(gov.etax.dzswj.nsrzx.services.common.datasource.annotation.SwitchDataSource))\"</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doBefore</span><span class=\"params\">(JoinPoint joinPoint)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</div><div class=\"line\">        Signature signature = joinPoint.getSignature();</div><div class=\"line\">        MethodSignature methodSignature = (MethodSignature) signature;</div><div class=\"line\">        Method method = methodSignature.getMethod();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (method != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            SwitchDataSource annotation = method.getAnnotation(SwitchDataSource.class);</div><div class=\"line\">            <span class=\"comment\">//设置数据源</span></div><div class=\"line\">            CustomerContextHolder.setContextType(annotation.value().name());</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        CustomerContextHolder.clearContextType();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"调用示例\"><a href=\"#调用示例\" class=\"headerlink\" title=\"调用示例\"></a>调用示例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 纳税人信息查询服务实现类</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> SIVEN</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"meta\">@Service</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NsrxxServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">INsrxxService</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"meta\">@SwitchDataSource</span>(DataSoure.gt3)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ResultDto&lt;NsrxxDto&gt; <span class=\"title\">queryNsrxxByDjxh</span><span class=\"params\">(QueryDto&lt;QueryByDjxh&gt; dto)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//int i = 1 /0;</span></div><div class=\"line\">        INsrxxMapper mapper = SessionTemplateUtil.getMapper(INsrxxMapper.class);</div><div class=\"line\">        <span class=\"keyword\">return</span> ResultDtoHelper.success(mapper.queryNsrxxByDjxh(dto.getQueryObj()));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>参考文章:</p>\n<ul>\n<li><a href=\"http://www.cnblogs.com/hoojo/p/dynamic_switch_sqlSessionfactory_muliteSqlSessionFactory.html\" target=\"_blank\" rel=\"external\">Spring3 整合MyBatis3 配置多数据源 动态选择SqlSessionFactory</a></li>\n<li><a href=\"http://blog.csdn.net/qq_28118497/article/details/52751202\" target=\"_blank\" rel=\"external\">Spring+Mybatis多数据源配置mysql+oracle</a></li>\n</ul>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h2><p>Spring整合MyBatis切换SqlSessionFactory有两种方法，第一、 继承SqlSessionDaoSupport，重写获取SqlSessionFactory的方法。第二、继承SqlSessionTemplate 重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor这个拦截器。其中最为关键还是继承SqlSessionTemplate 并重写里面的方法。</p>\n<p>而Spring整合MyBatis也有两种方式，一种是配置MapperFactoryBean，另一种则是利用MapperScannerConfigurer进行扫描接口或包完成对象的自动创建。相对来说后者更方便些。MapperFactoryBean继承了SqlSessionDaoSupport也就是动态切换SqlSessionFactory的第一种方法，我们需要重写和实现SqlSessionDaoSupport方法，或者是继承MapperFactoryBean来重写覆盖相关方法。如果利用MapperScannerConfigurer的配置整合来切换SqlSessionFactory，那么我们就需要继承SqlSessionTemplate，重写上面提到的方法。在整合的配置中很多地方都是可以注入SqlSessionTemplate代替SqlSessionFactory的注入的。因为SqlSessionTemplate的创建也是需要注入SqlSessionFactory的。</p>","more":"<h2 id=\"实现代码\"><a href=\"#实现代码\" class=\"headerlink\" title=\"实现代码\"></a>实现代码</h2><h3 id=\"继承SqlSessionTemplate-重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor\"><a href=\"#继承SqlSessionTemplate-重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor\" class=\"headerlink\" title=\"继承SqlSessionTemplate 重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor\"></a>继承SqlSessionTemplate 重写getSqlSessionFactory、getConfiguration和SqlSessionInterceptor</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> java.lang.reflect.Proxy.newProxyInstance;</div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> org.apache.ibatis.reflection.ExceptionUtil.unwrapThrowable;</div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> org.mybatis.spring.SqlSessionUtils.closeSqlSession;</div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> org.mybatis.spring.SqlSessionUtils.getSqlSession;</div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> org.mybatis.spring.SqlSessionUtils.isSqlSessionTransactional;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.InvocationHandler;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.exceptions.PersistenceException;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.executor.BatchResult;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.Configuration;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.ExecutorType;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.ResultHandler;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.RowBounds;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSession;</div><div class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.mybatis.spring.MyBatisExceptionTranslator;</div><div class=\"line\"><span class=\"keyword\">import</span> org.mybatis.spring.SqlSessionTemplate;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.dao.support.PersistenceExceptionTranslator;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.Assert;</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * &lt;b&gt;function:&lt;/b&gt; 继承SqlSessionTemplate 重写相关方法</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> hoojo</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@createDate</span> 2013-10-18 下午03:07:46</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@file</span> CustomSqlSessionTemplate.java</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> com.hoo.framework.mybatis.support</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@project</span> SHMB</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@blog</span> http://blog.csdn.net/IBM_hoojo</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@email</span> hoojo_@126.com</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomSqlSessionTemplate</span> <span class=\"keyword\">extends</span> <span class=\"title\">SqlSessionTemplate</span> </span>&#123;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> SqlSessionFactory sqlSessionFactory;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ExecutorType executorType;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> SqlSession sqlSessionProxy;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> PersistenceExceptionTranslator exceptionTranslator;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"keyword\">private</span> Map&lt;Object, SqlSessionFactory&gt; targetSqlSessionFactorys;</div><div class=\"line\">    <span class=\"keyword\">private</span> SqlSessionFactory defaultTargetSqlSessionFactory;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setTargetSqlSessionFactorys</span><span class=\"params\">(Map&lt;Object, SqlSessionFactory&gt; targetSqlSessionFactorys)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.targetSqlSessionFactorys = targetSqlSessionFactorys;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDefaultTargetSqlSessionFactory</span><span class=\"params\">(SqlSessionFactory defaultTargetSqlSessionFactory)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.defaultTargetSqlSessionFactory = defaultTargetSqlSessionFactory;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CustomSqlSessionTemplate</span><span class=\"params\">(SqlSessionFactory sqlSessionFactory)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>(sqlSessionFactory, sqlSessionFactory.getConfiguration().getDefaultExecutorType());</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CustomSqlSessionTemplate</span><span class=\"params\">(SqlSessionFactory sqlSessionFactory, ExecutorType executorType)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>(sqlSessionFactory, executorType, <span class=\"keyword\">new</span> MyBatisExceptionTranslator(sqlSessionFactory.getConfiguration()</div><div class=\"line\">                .getEnvironment().getDataSource(), <span class=\"keyword\">true</span>));</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CustomSqlSessionTemplate</span><span class=\"params\">(SqlSessionFactory sqlSessionFactory, ExecutorType executorType,</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"params\">            PersistenceExceptionTranslator exceptionTranslator)</span> </span>&#123;</div><div class=\"line\"> </div><div class=\"line\">        <span class=\"keyword\">super</span>(sqlSessionFactory, executorType, exceptionTranslator);</div><div class=\"line\"> </div><div class=\"line\">        <span class=\"keyword\">this</span>.sqlSessionFactory = sqlSessionFactory;</div><div class=\"line\">        <span class=\"keyword\">this</span>.executorType = executorType;</div><div class=\"line\">        <span class=\"keyword\">this</span>.exceptionTranslator = exceptionTranslator;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">this</span>.sqlSessionProxy = (SqlSession) newProxyInstance(</div><div class=\"line\">                SqlSessionFactory.class.getClassLoader(),</div><div class=\"line\">                <span class=\"keyword\">new</span> Class[] &#123; SqlSession.class &#125;, </div><div class=\"line\">                <span class=\"keyword\">new</span> SqlSessionInterceptor());</div><div class=\"line\"> </div><div class=\"line\">        <span class=\"keyword\">this</span>.defaultTargetSqlSessionFactory = sqlSessionFactory;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> SqlSessionFactory <span class=\"title\">getSqlSessionFactory</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"> </div><div class=\"line\">        SqlSessionFactory targetSqlSessionFactory = targetSqlSessionFactorys.get(CustomerContextHolder.getContextType());</div><div class=\"line\">        <span class=\"keyword\">if</span> (targetSqlSessionFactory != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> targetSqlSessionFactory;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (defaultTargetSqlSessionFactory != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> defaultTargetSqlSessionFactory;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            Assert.notNull(targetSqlSessionFactorys, <span class=\"string\">\"Property 'targetSqlSessionFactorys' or 'defaultTargetSqlSessionFactory' are required\"</span>);</div><div class=\"line\">            Assert.notNull(defaultTargetSqlSessionFactory, <span class=\"string\">\"Property 'defaultTargetSqlSessionFactory' or 'targetSqlSessionFactorys' are required\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionFactory;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Configuration <span class=\"title\">getConfiguration</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.getSqlSessionFactory().getConfiguration();</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ExecutorType <span class=\"title\">getExecutorType</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.executorType;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> PersistenceExceptionTranslator <span class=\"title\">getPersistenceExceptionTranslator</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.exceptionTranslator;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">selectOne</span><span class=\"params\">(String statement)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;T&gt; selectOne(statement);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">selectOne</span><span class=\"params\">(String statement, Object parameter)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;T&gt; selectOne(statement, parameter);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;K, V&gt; <span class=\"function\">Map&lt;K, V&gt; <span class=\"title\">selectMap</span><span class=\"params\">(String statement, String mapKey)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;K, V&gt; selectMap(statement, mapKey);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;K, V&gt; <span class=\"function\">Map&lt;K, V&gt; <span class=\"title\">selectMap</span><span class=\"params\">(String statement, Object parameter, String mapKey)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;K, V&gt; selectMap(statement, parameter, mapKey);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;K, V&gt; <span class=\"function\">Map&lt;K, V&gt; <span class=\"title\">selectMap</span><span class=\"params\">(String statement, Object parameter, String mapKey, RowBounds rowBounds)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;K, V&gt; selectMap(statement, parameter, mapKey, rowBounds);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;E&gt; <span class=\"function\">List&lt;E&gt; <span class=\"title\">selectList</span><span class=\"params\">(String statement)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;E&gt; selectList(statement);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;E&gt; <span class=\"function\">List&lt;E&gt; <span class=\"title\">selectList</span><span class=\"params\">(String statement, Object parameter)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;E&gt; selectList(statement, parameter);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;E&gt; <span class=\"function\">List&lt;E&gt; <span class=\"title\">selectList</span><span class=\"params\">(String statement, Object parameter, RowBounds rowBounds)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.&lt;E&gt; selectList(statement, parameter, rowBounds);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">select</span><span class=\"params\">(String statement, ResultHandler handler)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.sqlSessionProxy.select(statement, handler);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">select</span><span class=\"params\">(String statement, Object parameter, ResultHandler handler)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.sqlSessionProxy.select(statement, parameter, handler);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">select</span><span class=\"params\">(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.sqlSessionProxy.select(statement, parameter, rowBounds, handler);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">insert</span><span class=\"params\">(String statement)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.insert(statement);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">insert</span><span class=\"params\">(String statement, Object parameter)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.insert(statement, parameter);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">update</span><span class=\"params\">(String statement)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.update(statement);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">update</span><span class=\"params\">(String statement, Object parameter)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.update(statement, parameter);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">delete</span><span class=\"params\">(String statement)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.delete(statement);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">delete</span><span class=\"params\">(String statement, Object parameter)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.delete(statement, parameter);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getMapper</span><span class=\"params\">(Class&lt;T&gt; type)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> getConfiguration().getMapper(type, <span class=\"keyword\">this</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">commit</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> UnsupportedOperationException(<span class=\"string\">\"Manual commit is not allowed over a Spring managed SqlSession\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">commit</span><span class=\"params\">(<span class=\"keyword\">boolean</span> force)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> UnsupportedOperationException(<span class=\"string\">\"Manual commit is not allowed over a Spring managed SqlSession\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">rollback</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> UnsupportedOperationException(<span class=\"string\">\"Manual rollback is not allowed over a Spring managed SqlSession\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">rollback</span><span class=\"params\">(<span class=\"keyword\">boolean</span> force)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> UnsupportedOperationException(<span class=\"string\">\"Manual rollback is not allowed over a Spring managed SqlSession\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> UnsupportedOperationException(<span class=\"string\">\"Manual close is not allowed over a Spring managed SqlSession\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clearCache</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.sqlSessionProxy.clearCache();</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.getConnection();</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@since</span> 1.0.2</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;BatchResult&gt; <span class=\"title\">flushStatements</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sqlSessionProxy.flushStatements();</div><div class=\"line\">    &#125;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Proxy needed to route MyBatis method calls to the proper SqlSession got from Spring's Transaction Manager It also</span></div><div class=\"line\"><span class=\"comment\">     * unwraps exceptions thrown by &#123;<span class=\"doctag\">@code</span> Method#invoke(Object, Object...)&#125; to pass a &#123;<span class=\"doctag\">@code</span> PersistenceException&#125; to</span></div><div class=\"line\"><span class=\"comment\">     * the &#123;<span class=\"doctag\">@code</span> PersistenceExceptionTranslator&#125;.</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SqlSessionInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title\">InvocationHandler</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">invoke</span><span class=\"params\">(Object proxy, Method method, Object[] args)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">final</span> SqlSession sqlSession = getSqlSession(</div><div class=\"line\">                    CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.getSqlSessionFactory(),</div><div class=\"line\">                    CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.executorType, </div><div class=\"line\">                    CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.exceptionTranslator);</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                Object result = method.invoke(sqlSession, args);</div><div class=\"line\">                <span class=\"keyword\">if</span> (!isSqlSessionTransactional(sqlSession, CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.getSqlSessionFactory())) &#123;</div><div class=\"line\">                    <span class=\"comment\">// force commit even on non-dirty sessions because some databases require</span></div><div class=\"line\">                    <span class=\"comment\">// a commit/rollback before calling close()</span></div><div class=\"line\">                    sqlSession.commit(<span class=\"keyword\">true</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">return</span> result;</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Throwable t) &#123;</div><div class=\"line\">                Throwable unwrapped = unwrapThrowable(t);</div><div class=\"line\">                <span class=\"keyword\">if</span> (CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.exceptionTranslator != <span class=\"keyword\">null</span> &amp;&amp; unwrapped <span class=\"keyword\">instanceof</span> PersistenceException) &#123;</div><div class=\"line\">                    Throwable translated = CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.exceptionTranslator</div><div class=\"line\">                        .translateExceptionIfPossible((PersistenceException) unwrapped);</div><div class=\"line\">                    <span class=\"keyword\">if</span> (translated != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                        unwrapped = translated;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">throw</span> unwrapped;</div><div class=\"line\">            &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">                closeSqlSession(sqlSession, CustomSqlSessionTemplate.<span class=\"keyword\">this</span>.getSqlSessionFactory());</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>重写后的getSqlSessionFactory方法会从我们配置的SqlSessionFactory集合targetSqlSessionFactorys或默认的defaultTargetSqlSessionFactory中获取Session对象。而改写的SqlSessionInterceptor 是这个MyBatis整合Spring的关键，所有的SqlSessionFactory对象的session都将在这里完成创建、提交、关闭等操作。所以我们改写这里的代码，在这里获取getSqlSessionFactory的时候，从多个SqlSessionFactory中获取我们设置的那个即可。</p>\n<p>上面添加了targetSqlSessionFactorys、defaultTargetSqlSessionFactory两个属性来配置多个SqlSessionFactory对象和默认的SqlSessionFactory对象。</p>\n<h3 id=\"CustomerContextHolder-设置SqlSessionFactory的类型\"><a href=\"#CustomerContextHolder-设置SqlSessionFactory的类型\" class=\"headerlink\" title=\"CustomerContextHolder 设置SqlSessionFactory的类型\"></a>CustomerContextHolder 设置SqlSessionFactory的类型</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * &lt;b&gt;function:&lt;/b&gt; 多数据源</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> hoojo</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@createDate</span> 2013-9-27 上午11:36:57</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@file</span> CustomerContextHolder.java</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> com.hoo.framework.spring.support</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@project</span> SHMB</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@blog</span> http://blog.csdn.net/IBM_hoojo</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@email</span> hoojo_@126.com</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomerContextHolder</span> </span>&#123;</div><div class=\"line\"> </div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String SESSION_FACTORY_MYSQL = <span class=\"string\">\"mysql\"</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String SESSION_FACTORY_ORACLE = <span class=\"string\">\"oracle\"</span>;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ThreadLocal&lt;String&gt; contextHolder = <span class=\"keyword\">new</span> ThreadLocal&lt;String&gt;();  </div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setContextType</span><span class=\"params\">(String contextType)</span> </span>&#123;  </div><div class=\"line\">        contextHolder.set(contextType);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getContextType</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">return</span> contextHolder.get();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">clearContextType</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">        contextHolder.remove();  </div><div class=\"line\">    &#125;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"配置相关的文件applicationContext-session-factory-xml\"><a href=\"#配置相关的文件applicationContext-session-factory-xml\" class=\"headerlink\" title=\"配置相关的文件applicationContext-session-factory.xml\"></a>配置相关的文件applicationContext-session-factory.xml</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mysqlDataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.alibaba.druid.pool.DruidDataSource\"</span> <span class=\"attr\">init-method</span>=<span class=\"string\">\"init\"</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">\"close\"</span>&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 基本属性 url、user、password --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.url&#125;\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.username&#125;\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- Filters --&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- &lt;property name=\"filters\" value=\"config,stat\" /&gt;  </span></div><div class=\"line\"><span class=\"comment\">        &lt;property name=\"connectionProperties\" value=\"config.decrypt=true\" /&gt; --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"filters\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"stat\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"initialSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxActive\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"20\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxWait\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"60000\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"timeBetweenEvictionRunsMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"60000\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minEvictableIdleTimeMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"300000\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"validationQuery\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"SELECT 'x'\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testWhileIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnBorrow\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnReturn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"poolPreparedStatements\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxPoolPreparedStatementPerConnectionSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"20\"</span> /&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>  </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 数据源2 --&gt;</span>    </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"oracleDataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.alibaba.druid.pool.DruidDataSource\"</span> <span class=\"attr\">init-method</span>=<span class=\"string\">\"init\"</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">\"close\"</span>&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 基本属性 url、user、password --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClassName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;dataSource2.driver&#125;\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;dataSource2.url&#125;\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;dataSource2.username&#125;\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;dataSource2.password&#125;\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置初始化大小、最小、最大 --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"initialSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxActive\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"20\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxWait\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"60000\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"timeBetweenEvictionRunsMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"60000\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minEvictableIdleTimeMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"300000\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"validationQuery\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"SELECT 'x' FROM DUAL\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testWhileIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnBorrow\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnReturn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"poolPreparedStatements\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxPoolPreparedStatementPerConnectionSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"20\"</span> /&gt;</span>    </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 配置监控统计拦截的filters --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"filters\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"stat\"</span> /&gt;</span>    </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>    </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"oracleSqlSessionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.SqlSessionFactoryBean\"</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"oracleDataSource\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"configLocation\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"classpath:mybatis/mybatis-config.xml\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- mapper和resultmap配置路径 --&gt;</span>   </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"mapperLocations\"</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span>  </div><div class=\"line\">                <span class=\"comment\">&lt;!-- 表示在com.hoo目录下的任意包下的resultmap包目录中，以-resultmap.xml或-mapper.xml结尾所有文件 --&gt;</span>   </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>classpath*:/mapper/TestMapper.xml<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>  </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 配置SqlSessionFactoryBean --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mysqlSqlSessionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.SqlSessionFactoryBean\"</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"mysqlDataSource\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"configLocation\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"classpath:mybatis/mybatis-config.xml\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- mapper和resultmap配置路径 --&gt;</span>    </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"mapperLocations\"</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span>  </div><div class=\"line\">                <span class=\"comment\">&lt;!-- 表示在com.hoo目录下的任意包下的resultmap包目录中，以-resultmap.xml或-mapper.xml结尾所有文件 （oracle和mysql扫描的配置和路径不一样，如果是公共的都扫描 这里要区分下，不然就报错 找不到对应的表、视图）--&gt;</span>   </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>classpath:com/zlzkj/app/mapper/*-mapper.xml<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>      </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 配置自定义的SqlSessionTemplate模板，注入相关配置 --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"sqlSessionTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.zlzkj.app.support.CustomSqlSessionTemplate\"</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"mysqlSqlSessionFactory\"</span> /&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"targetSqlSessionFactorys\"</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">map</span>&gt;</span>       </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">value-ref</span>=<span class=\"string\">\"oracleSqlSessionFactory\"</span> <span class=\"attr\">key</span>=<span class=\"string\">\"oracle\"</span>/&gt;</span>  </div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">value-ref</span>=<span class=\"string\">\"mysqlSqlSessionFactory\"</span> <span class=\"attr\">key</span>=<span class=\"string\">\"mysql\"</span>/&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">map</span>&gt;</span>   </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span>  </div><div class=\"line\">      </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 通过扫描的模式，扫描目录在com/hoo/任意目录下的mapper目录下，所有的mapper都需要继承SqlMapper接口的接口 --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.mapper.MapperScannerConfigurer\"</span>&gt;</span>  </div><div class=\"line\">        <span class=\"comment\">&lt;!-- 注意注入sqlSessionTemplate --&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sqlSessionTemplateBeanName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"sqlSessionTemplate\"</span>/&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"basePackage\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.zlzkj.app.mapper,com.zlzkj.core.mybatis,com.zlzkj.app.omapper\"</span> /&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Sercice测试调用\"><a href=\"#Sercice测试调用\" class=\"headerlink\" title=\"Sercice测试调用\"></a>Sercice测试调用</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CustomerContextHolder.setContextType(CustomerContextHolder.SESSION_FACTORY_ORACLE);  </div><div class=\"line\"><span class=\"keyword\">try</span> &#123;  </div><div class=\"line\">    Test test = mapper.selectByPrimaryKey((<span class=\"keyword\">short</span>)<span class=\"number\">1</span>);  </div><div class=\"line\">    System.out.println(<span class=\"string\">\"&gt;&gt;&gt;&gt;&gt;&gt;\"</span>+test.getName());  </div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;  </div><div class=\"line\">    e.printStackTrace();  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>好了，如果数据能读出来，那就恭喜你，你配置多数据源成功了。</p>\n<h2 id=\"注解支持\"><a href=\"#注解支持\" class=\"headerlink\" title=\"注解支持\"></a>注解支持</h2><p>使用注解方式, 动态配置数据源</p>\n<h3 id=\"自定义定义注解\"><a href=\"#自定义定义注解\" class=\"headerlink\" title=\"自定义定义注解:\"></a>自定义定义注解:</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 切换数据源</span></div><div class=\"line\"><span class=\"comment\"> * 在service impl方法进行注解</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"meta\">@Target</span>(&#123;ElementType.METHOD&#125;)</div><div class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class=\"line\"><span class=\"meta\">@Documented</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> SwitchDataSource &#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\">DataSoure <span class=\"title\">value</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> DataSoure.gt3</span>;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 数据源</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> DataSoure &#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//mysql数据源</span></div><div class=\"line\">    mysql,</div><div class=\"line\">    <span class=\"comment\">//oracle数据源</span></div><div class=\"line\">    oracle</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"AOP拦截注解\"><a href=\"#AOP拦截注解\" class=\"headerlink\" title=\"AOP拦截注解\"></a>AOP拦截注解</h3><p>使用业务前置的方式,对业务方法进行切面处理<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 多数据源切面处理</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"meta\">@Aspect</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SwitchDataSourceAspect</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Before</span>(value = <span class=\"string\">\"execution(* gov.etax.dzswj.nsrzx.services..service..*.*(..)) and @annotation(gov.etax.dzswj.nsrzx.services.common.datasource.annotation.SwitchDataSource))\"</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doBefore</span><span class=\"params\">(JoinPoint joinPoint)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</div><div class=\"line\">        Signature signature = joinPoint.getSignature();</div><div class=\"line\">        MethodSignature methodSignature = (MethodSignature) signature;</div><div class=\"line\">        Method method = methodSignature.getMethod();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (method != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            SwitchDataSource annotation = method.getAnnotation(SwitchDataSource.class);</div><div class=\"line\">            <span class=\"comment\">//设置数据源</span></div><div class=\"line\">            CustomerContextHolder.setContextType(annotation.value().name());</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        CustomerContextHolder.clearContextType();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"调用示例\"><a href=\"#调用示例\" class=\"headerlink\" title=\"调用示例\"></a>调用示例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 纳税人信息查询服务实现类</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> SIVEN</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"meta\">@Service</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NsrxxServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">INsrxxService</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"meta\">@SwitchDataSource</span>(DataSoure.gt3)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ResultDto&lt;NsrxxDto&gt; <span class=\"title\">queryNsrxxByDjxh</span><span class=\"params\">(QueryDto&lt;QueryByDjxh&gt; dto)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//int i = 1 /0;</span></div><div class=\"line\">        INsrxxMapper mapper = SessionTemplateUtil.getMapper(INsrxxMapper.class);</div><div class=\"line\">        <span class=\"keyword\">return</span> ResultDtoHelper.success(mapper.queryNsrxxByDjxh(dto.getQueryObj()));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>参考文章:</p>\n<ul>\n<li><a href=\"http://www.cnblogs.com/hoojo/p/dynamic_switch_sqlSessionfactory_muliteSqlSessionFactory.html\" target=\"_blank\" rel=\"external\">Spring3 整合MyBatis3 配置多数据源 动态选择SqlSessionFactory</a></li>\n<li><a href=\"http://blog.csdn.net/qq_28118497/article/details/52751202\" target=\"_blank\" rel=\"external\">Spring+Mybatis多数据源配置mysql+oracle</a></li>\n</ul>\n</blockquote>"},{"title":"Spring通过ApplicationContext主动获取bean","date":"2017-09-10T03:40:41.000Z","_content":"\n最近在做项目的时候我发现一个问题：Spring的IOC容器不能在Web中被引用(或者说不能被任意地引用)。我们在配置文件中让Spring自动装配，但并没有留住ApplicationContext的实例。我们如果希望在我们的项目中任何位置都能拿到同一个ApplicationContext来获取IOC容器中的资源，就要让Spring将上下文环境填充到我们能获取的地方，比如下面的做法：\n- 方法一: 实现自ApplicationContextAware接口\n- 方法二，使用了注解和静态化的方式来产生SpringFactory对象\n\n<!-- more -->\n\n# 方法一: 实现自ApplicationContextAware接口\n自定义一个工具类，实现自ApplicationContextAware接口，接口的方法是setApplicationContext，我们实现它，并让其为我们服务，因为Spring在load自己的时候会将上下文环境填充进来。我们所要做的就是将得到的ApplicationContext保存下来用。\n\n## 关键代码\n\n```java\nimport org.springframework.context.ApplicationContext;  \nimport org.springframework.context.ApplicationContextAware;  \n\npublic class SpringContextUtil implements ApplicationContextAware {  \n    private static ApplicationContext applicationContext;  \n  \n    /** \n     * 实现ApplicationContextAware接口的context注入函数, 将其存入静态变量. \n     */  \n    public void setApplicationContext(ApplicationContext applicationContext) {  \n        SpringContextUtil.applicationContext = applicationContext; // NOSONAR  \n    }  \n  \n    /** \n     * 取得存储在静态变量中的ApplicationContext. \n     */  \n    public static ApplicationContext getApplicationContext() {  \n        checkApplicationContext();  \n        return applicationContext;  \n    }  \n  \n    /** \n     * 从静态变量ApplicationContext中取得Bean, 自动转型为所赋值对象的类型. \n     */  \n    @SuppressWarnings(\"unchecked\")  \n    public static <T> T getBean(String name) {  \n        checkApplicationContext();  \n        return (T) applicationContext.getBean(name);  \n    }  \n  \n    /** \n     * 从静态变量ApplicationContext中取得Bean, 自动转型为所赋值对象的类型. \n     */  \n    @SuppressWarnings(\"unchecked\")  \n    public static <T> T getBean(Class<T> clazz) {  \n        checkApplicationContext();  \n        return (T) applicationContext.getBeansOfType(clazz);  \n    }  \n  \n    /** \n     * 清除applicationContext静态变量. \n     */  \n    public static void cleanApplicationContext() {  \n        applicationContext = null;  \n    }  \n  \n    private static void checkApplicationContext() {  \n        if (applicationContext == null) {  \n            throw new IllegalStateException(\"applicaitonContext未注入,请在applicationContext.xml中定义SpringContextHolder\");  \n        }  \n    }  \n}  \n```\n\n## SPRING配置\n上文的类就是我们要用的，而其中的setApplicationContext是接口中需要实现的，Spring会自动进行填充。我们在Spring的配置文件中注册一下：\n```xml\n<bean id=\"springContextUtil\" class=\"xxx.xx.SpringContextUtil\" />\n```\n\n## 使用示例\n这样就可以了，Spring把我们需要的东西给我们了。\n我们就可以在需要的地方这样做：\n```java\nYouClass obj = (YouClass)SpringUtil.getObject(\"beanid\");\n```\n\n\n# 方法二，使用了注解和静态化的方式来产生SpringFactory对象\n上文的方法有个麻烦的地方：需要配置。而Spring2.5及之后的版本实际上加入了注解的方式进行依赖项的注入，使用如下代码也许更好：\n```java\npublic class SpringContextUtil extends SpringBeanAutowiringSupport {\n\n    @Autowired\n    private BeanFactory beanFactory;\n\n    //静态方法初始化类\n    private static SpringContextUtil instance;\n\n    static {\n        instance = new SpringContextUtil();\n    }\n\n    //根据bean的id，获取对应类对象\n    //根据bean的id获取bean对象要比根据class获取bean对象效率高，但容易出现人为错误\n    public <T> T getBean(String beanId) {\n        return (T)beanFactory.getBean(beanId);\n    }\n\n    //根据bean的类型，获取对应类对象，\n    //不容易出现认为错误，但效率不如根据id获取bean对象，因为spring内部是把class转换为name，然后再进行查找\n    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public <T> T getBean(Class<T> classT) {\n        return beanFactory.getBean(classT);\n    }\n\n    public static SpringContextUtil getInstance() {\n        return instance;\n    }\n\n}\n```\n\n## 注解扫描\n如果使用@Autowired注解自动装配的话，继承SpringBeanAutowiringSupport类是不能少的。当然，使用@Component等注解也是可以的。使用注解的话配置就需要改动了，不过因为我们为支持Spring注解的配置是可以多用的，所以还好。如下：\n```xml\n<context:component-scan base-package=\"org.ahe\"></context:component-scan>\n```\n配置即可让org.ahe下所有包(您依然可以通过子标签的正则表达式匹配来进行更多设置)下的注解起作用。\n\n## 使用示例\n这样就可以了，Spring把我们需要的东西给我们了。\n我们就可以在需要的地方这样做：\n```java\nMyTestBean myTestBean = (MyTestBean ) SpringUtil.getInstance().getBean(MyTestBean.class);\nMyTestBean myTestBean1 = (MyTestBean) SpringUtil.getInstance().getBean(\"myTestBean\");\n```\n\n# 系统初始化无法获取bean\n目前又做了个系统初始化的东东SystemInit，然后发现上面的getBean()用不了了。看了下发现是因为在系统初始化的时候SpringContextUtil还没有初始化，导致在SystemInit类里面的东西getBean()失败。 \n于是小改造了下，把ApplicationContextAware放在SystemInit类，然后注入到SpringContextUtil，这样就保证了在执行系统初始化方法之前，applicationContext一定不是null。\n\n## SpringContextUtil\n```java\n/**\n * spring上下文配置\n * @author Mingchenchen\n *\n */\npublic class SpringContextUtil {\n    private static Logger logger = Logger.getLogger(SpringContextUtil.class);\n\n    //@Autowired 沿用springTest的这种方法 是否会更好？\n    //ApplicationContext ctx;\n    private static ApplicationContext applicationContext = null;\n\n    public static void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n        SpringContextUtil.applicationContext = applicationContext;\n    }\n\n    //注意此处变成了static\n    public static ApplicationContext getApplicationContext() {\n        return applicationContext;\n    }\n\n    /**\n     * 注意 bean name默认 = 类名(首字母小写)\n     * 例如: A8sClusterDao = getBean(\"k8sClusterDao\")\n     * @param name\n     * @return\n     * @throws BeansException\n     */\n    public static Object getBean(String name) throws BeansException {\n        return applicationContext.getBean(name);\n    }\n\n    /**\n     * 根据类名获取到bean\n     * @param <T>\n     * @param clazz\n     * @return\n     * @throws BeansException\n     */\n    @SuppressWarnings(\"unchecked\")\n    public static <T> T getBeanByName(Class<T> clazz) throws BeansException {\n        try {\n            char[] cs=clazz.getSimpleName().toCharArray();\n            cs[0] += 32;//首字母大写到小写\n            return (T) applicationContext.getBean(String.valueOf(cs));\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        } \n    }\n\n    public static boolean containsBean(String name) {\n        return applicationContext.containsBean(name);\n    }\n\n    public static boolean isSingleton(String name) throws NoSuchBeanDefinitionException {\n        return applicationContext.isSingleton(name);\n    }\n\n}\n```\n\n\n## 系统初始化代码\n```java\n/**\n * Descripties: 系统初始化\n * @author wangkaiping\n * 2016年5月23日 上午11:58:09\n */\n@Component\npublic class SystemInit implements InitializingBean,ApplicationContextAware{\n    private static Logger logger = Logger.getLogger(SystemInit.class);\n    @Autowired\n    private ClusterDao clusterDao;\n\n    @Override\n    public void afterPropertiesSet() throws Exception {\n        logger.info(\"--------------系统初始化中-------------------\");\n        initClusterCache();//初始化集群数据 必须最开始完成\n        initRefreshAppStatusTask();\n        initUpdateAppStatusToDB();\n        initUpdateSession();\n        logger.info(\"--------------系统初始化完成-------------------\");\n    }\n\n    /**\n     * 1.初始化集群数据\n     */\n    private void initClusterCache(){\n        logger.info(\"1.初始化集群信息到缓存中:ClusterCache开始\");\n        //查询数据库所有的集群数据\n        List<ClusterEntity> allClusterInfoList = clusterDao.selectAll(ClusterEntity.class, \"delete_flag=0\");\n        for (ClusterEntity k8sClusterEntity : allClusterInfoList) {\n            ClusterCache.put(k8sClusterEntity.getUuid() , k8sClusterEntity);//存入缓存\n        }\n        logger.info(\"1.初始化集群信息到缓存中:ClusterCache完成,总共\" + allClusterInfoList.size() + \"条数据\");\n    }\n\n    /**\n     * 2.初始化异步任务:刷新所有应用状态\n     */\n    private void initRefreshAppStatusTask() {\n        logger.info(\"2.初始化任务:RefreshAllAppStatusTask 刷新应用下的k8s的pod状态并存入待更新队列\");\n        RefreshAppStatusExcutor.init();\n        logger.info(\"2.初始化任务:RefreshAllAppStatusTask 完成\");\n    }\n\n    /**\n     * 3.初始化异步任务:更新状态到数据库\n     */\n    private void initUpdateAppStatusToDB() {\n        logger.info(\"3.初始化任务:RefreshToDBTask 从待更新Appinstance队列取出数据并更新数据库\");\n        UpdateAppStatusToDBExcutor.init();\n        logger.info(\"3.初始化任务:RefreshToDBTask 完成\");\n    }\n\n    /**\n     * 4. 初始化异步任务： 更新用户的所有session\n     */\n    private void initUpdateSession() {\n        logger.info(\"4.初始化任务：更新session开始\");\n        UserSessionUpdateExcutor.init();\n        logger.info(\"4.初始化任务：更新session结束\");\n    }\n\n    ////////////////////////////////////////////////////////////////\n\n    //此方法一定不要写成static\n    @Override\n    public void setApplicationContext(ApplicationContext applicationContext) \n                                                throws BeansException {\n        //实际上是把applicationContext传入到了SpringContextUtil里面\n        SpringContextUtil.setApplicationContext(applicationContext);\n    }\n}\n```","source":"_posts/Spring通过ApplicationContext主动获取bean.md","raw":"---\ntitle: Spring通过ApplicationContext主动获取bean\ndate: 2017-09-10 11:40:41\ntags:\n - JAVA\n - Spring\ncategories: \n - JAVA\n - Spring\n---\n\n最近在做项目的时候我发现一个问题：Spring的IOC容器不能在Web中被引用(或者说不能被任意地引用)。我们在配置文件中让Spring自动装配，但并没有留住ApplicationContext的实例。我们如果希望在我们的项目中任何位置都能拿到同一个ApplicationContext来获取IOC容器中的资源，就要让Spring将上下文环境填充到我们能获取的地方，比如下面的做法：\n- 方法一: 实现自ApplicationContextAware接口\n- 方法二，使用了注解和静态化的方式来产生SpringFactory对象\n\n<!-- more -->\n\n# 方法一: 实现自ApplicationContextAware接口\n自定义一个工具类，实现自ApplicationContextAware接口，接口的方法是setApplicationContext，我们实现它，并让其为我们服务，因为Spring在load自己的时候会将上下文环境填充进来。我们所要做的就是将得到的ApplicationContext保存下来用。\n\n## 关键代码\n\n```java\nimport org.springframework.context.ApplicationContext;  \nimport org.springframework.context.ApplicationContextAware;  \n\npublic class SpringContextUtil implements ApplicationContextAware {  \n    private static ApplicationContext applicationContext;  \n  \n    /** \n     * 实现ApplicationContextAware接口的context注入函数, 将其存入静态变量. \n     */  \n    public void setApplicationContext(ApplicationContext applicationContext) {  \n        SpringContextUtil.applicationContext = applicationContext; // NOSONAR  \n    }  \n  \n    /** \n     * 取得存储在静态变量中的ApplicationContext. \n     */  \n    public static ApplicationContext getApplicationContext() {  \n        checkApplicationContext();  \n        return applicationContext;  \n    }  \n  \n    /** \n     * 从静态变量ApplicationContext中取得Bean, 自动转型为所赋值对象的类型. \n     */  \n    @SuppressWarnings(\"unchecked\")  \n    public static <T> T getBean(String name) {  \n        checkApplicationContext();  \n        return (T) applicationContext.getBean(name);  \n    }  \n  \n    /** \n     * 从静态变量ApplicationContext中取得Bean, 自动转型为所赋值对象的类型. \n     */  \n    @SuppressWarnings(\"unchecked\")  \n    public static <T> T getBean(Class<T> clazz) {  \n        checkApplicationContext();  \n        return (T) applicationContext.getBeansOfType(clazz);  \n    }  \n  \n    /** \n     * 清除applicationContext静态变量. \n     */  \n    public static void cleanApplicationContext() {  \n        applicationContext = null;  \n    }  \n  \n    private static void checkApplicationContext() {  \n        if (applicationContext == null) {  \n            throw new IllegalStateException(\"applicaitonContext未注入,请在applicationContext.xml中定义SpringContextHolder\");  \n        }  \n    }  \n}  \n```\n\n## SPRING配置\n上文的类就是我们要用的，而其中的setApplicationContext是接口中需要实现的，Spring会自动进行填充。我们在Spring的配置文件中注册一下：\n```xml\n<bean id=\"springContextUtil\" class=\"xxx.xx.SpringContextUtil\" />\n```\n\n## 使用示例\n这样就可以了，Spring把我们需要的东西给我们了。\n我们就可以在需要的地方这样做：\n```java\nYouClass obj = (YouClass)SpringUtil.getObject(\"beanid\");\n```\n\n\n# 方法二，使用了注解和静态化的方式来产生SpringFactory对象\n上文的方法有个麻烦的地方：需要配置。而Spring2.5及之后的版本实际上加入了注解的方式进行依赖项的注入，使用如下代码也许更好：\n```java\npublic class SpringContextUtil extends SpringBeanAutowiringSupport {\n\n    @Autowired\n    private BeanFactory beanFactory;\n\n    //静态方法初始化类\n    private static SpringContextUtil instance;\n\n    static {\n        instance = new SpringContextUtil();\n    }\n\n    //根据bean的id，获取对应类对象\n    //根据bean的id获取bean对象要比根据class获取bean对象效率高，但容易出现人为错误\n    public <T> T getBean(String beanId) {\n        return (T)beanFactory.getBean(beanId);\n    }\n\n    //根据bean的类型，获取对应类对象，\n    //不容易出现认为错误，但效率不如根据id获取bean对象，因为spring内部是把class转换为name，然后再进行查找\n    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public <T> T getBean(Class<T> classT) {\n        return beanFactory.getBean(classT);\n    }\n\n    public static SpringContextUtil getInstance() {\n        return instance;\n    }\n\n}\n```\n\n## 注解扫描\n如果使用@Autowired注解自动装配的话，继承SpringBeanAutowiringSupport类是不能少的。当然，使用@Component等注解也是可以的。使用注解的话配置就需要改动了，不过因为我们为支持Spring注解的配置是可以多用的，所以还好。如下：\n```xml\n<context:component-scan base-package=\"org.ahe\"></context:component-scan>\n```\n配置即可让org.ahe下所有包(您依然可以通过子标签的正则表达式匹配来进行更多设置)下的注解起作用。\n\n## 使用示例\n这样就可以了，Spring把我们需要的东西给我们了。\n我们就可以在需要的地方这样做：\n```java\nMyTestBean myTestBean = (MyTestBean ) SpringUtil.getInstance().getBean(MyTestBean.class);\nMyTestBean myTestBean1 = (MyTestBean) SpringUtil.getInstance().getBean(\"myTestBean\");\n```\n\n# 系统初始化无法获取bean\n目前又做了个系统初始化的东东SystemInit，然后发现上面的getBean()用不了了。看了下发现是因为在系统初始化的时候SpringContextUtil还没有初始化，导致在SystemInit类里面的东西getBean()失败。 \n于是小改造了下，把ApplicationContextAware放在SystemInit类，然后注入到SpringContextUtil，这样就保证了在执行系统初始化方法之前，applicationContext一定不是null。\n\n## SpringContextUtil\n```java\n/**\n * spring上下文配置\n * @author Mingchenchen\n *\n */\npublic class SpringContextUtil {\n    private static Logger logger = Logger.getLogger(SpringContextUtil.class);\n\n    //@Autowired 沿用springTest的这种方法 是否会更好？\n    //ApplicationContext ctx;\n    private static ApplicationContext applicationContext = null;\n\n    public static void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n        SpringContextUtil.applicationContext = applicationContext;\n    }\n\n    //注意此处变成了static\n    public static ApplicationContext getApplicationContext() {\n        return applicationContext;\n    }\n\n    /**\n     * 注意 bean name默认 = 类名(首字母小写)\n     * 例如: A8sClusterDao = getBean(\"k8sClusterDao\")\n     * @param name\n     * @return\n     * @throws BeansException\n     */\n    public static Object getBean(String name) throws BeansException {\n        return applicationContext.getBean(name);\n    }\n\n    /**\n     * 根据类名获取到bean\n     * @param <T>\n     * @param clazz\n     * @return\n     * @throws BeansException\n     */\n    @SuppressWarnings(\"unchecked\")\n    public static <T> T getBeanByName(Class<T> clazz) throws BeansException {\n        try {\n            char[] cs=clazz.getSimpleName().toCharArray();\n            cs[0] += 32;//首字母大写到小写\n            return (T) applicationContext.getBean(String.valueOf(cs));\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        } \n    }\n\n    public static boolean containsBean(String name) {\n        return applicationContext.containsBean(name);\n    }\n\n    public static boolean isSingleton(String name) throws NoSuchBeanDefinitionException {\n        return applicationContext.isSingleton(name);\n    }\n\n}\n```\n\n\n## 系统初始化代码\n```java\n/**\n * Descripties: 系统初始化\n * @author wangkaiping\n * 2016年5月23日 上午11:58:09\n */\n@Component\npublic class SystemInit implements InitializingBean,ApplicationContextAware{\n    private static Logger logger = Logger.getLogger(SystemInit.class);\n    @Autowired\n    private ClusterDao clusterDao;\n\n    @Override\n    public void afterPropertiesSet() throws Exception {\n        logger.info(\"--------------系统初始化中-------------------\");\n        initClusterCache();//初始化集群数据 必须最开始完成\n        initRefreshAppStatusTask();\n        initUpdateAppStatusToDB();\n        initUpdateSession();\n        logger.info(\"--------------系统初始化完成-------------------\");\n    }\n\n    /**\n     * 1.初始化集群数据\n     */\n    private void initClusterCache(){\n        logger.info(\"1.初始化集群信息到缓存中:ClusterCache开始\");\n        //查询数据库所有的集群数据\n        List<ClusterEntity> allClusterInfoList = clusterDao.selectAll(ClusterEntity.class, \"delete_flag=0\");\n        for (ClusterEntity k8sClusterEntity : allClusterInfoList) {\n            ClusterCache.put(k8sClusterEntity.getUuid() , k8sClusterEntity);//存入缓存\n        }\n        logger.info(\"1.初始化集群信息到缓存中:ClusterCache完成,总共\" + allClusterInfoList.size() + \"条数据\");\n    }\n\n    /**\n     * 2.初始化异步任务:刷新所有应用状态\n     */\n    private void initRefreshAppStatusTask() {\n        logger.info(\"2.初始化任务:RefreshAllAppStatusTask 刷新应用下的k8s的pod状态并存入待更新队列\");\n        RefreshAppStatusExcutor.init();\n        logger.info(\"2.初始化任务:RefreshAllAppStatusTask 完成\");\n    }\n\n    /**\n     * 3.初始化异步任务:更新状态到数据库\n     */\n    private void initUpdateAppStatusToDB() {\n        logger.info(\"3.初始化任务:RefreshToDBTask 从待更新Appinstance队列取出数据并更新数据库\");\n        UpdateAppStatusToDBExcutor.init();\n        logger.info(\"3.初始化任务:RefreshToDBTask 完成\");\n    }\n\n    /**\n     * 4. 初始化异步任务： 更新用户的所有session\n     */\n    private void initUpdateSession() {\n        logger.info(\"4.初始化任务：更新session开始\");\n        UserSessionUpdateExcutor.init();\n        logger.info(\"4.初始化任务：更新session结束\");\n    }\n\n    ////////////////////////////////////////////////////////////////\n\n    //此方法一定不要写成static\n    @Override\n    public void setApplicationContext(ApplicationContext applicationContext) \n                                                throws BeansException {\n        //实际上是把applicationContext传入到了SpringContextUtil里面\n        SpringContextUtil.setApplicationContext(applicationContext);\n    }\n}\n```","slug":"Spring通过ApplicationContext主动获取bean","published":1,"updated":"2017-09-16T11:16:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7n84lkl000azxrxbbtvlejb","content":"<p>最近在做项目的时候我发现一个问题：Spring的IOC容器不能在Web中被引用(或者说不能被任意地引用)。我们在配置文件中让Spring自动装配，但并没有留住ApplicationContext的实例。我们如果希望在我们的项目中任何位置都能拿到同一个ApplicationContext来获取IOC容器中的资源，就要让Spring将上下文环境填充到我们能获取的地方，比如下面的做法：</p>\n<ul>\n<li>方法一: 实现自ApplicationContextAware接口</li>\n<li>方法二，使用了注解和静态化的方式来产生SpringFactory对象</li>\n</ul>\n<a id=\"more\"></a>\n<h1 id=\"方法一-实现自ApplicationContextAware接口\"><a href=\"#方法一-实现自ApplicationContextAware接口\" class=\"headerlink\" title=\"方法一: 实现自ApplicationContextAware接口\"></a>方法一: 实现自ApplicationContextAware接口</h1><p>自定义一个工具类，实现自ApplicationContextAware接口，接口的方法是setApplicationContext，我们实现它，并让其为我们服务，因为Spring在load自己的时候会将上下文环境填充进来。我们所要做的就是将得到的ApplicationContext保存下来用。</p>\n<h2 id=\"关键代码\"><a href=\"#关键代码\" class=\"headerlink\" title=\"关键代码\"></a>关键代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ApplicationContext;  </div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ApplicationContextAware;  </div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringContextUtil</span> <span class=\"keyword\">implements</span> <span class=\"title\">ApplicationContextAware</span> </span>&#123;  </div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ApplicationContext applicationContext;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\">     * 实现ApplicationContextAware接口的context注入函数, 将其存入静态变量. </span></div><div class=\"line\"><span class=\"comment\">     */</span>  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setApplicationContext</span><span class=\"params\">(ApplicationContext applicationContext)</span> </span>&#123;  </div><div class=\"line\">        SpringContextUtil.applicationContext = applicationContext; <span class=\"comment\">// NOSONAR  </span></div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\">     * 取得存储在静态变量中的ApplicationContext. </span></div><div class=\"line\"><span class=\"comment\">     */</span>  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ApplicationContext <span class=\"title\">getApplicationContext</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">        checkApplicationContext();  </div><div class=\"line\">        <span class=\"keyword\">return</span> applicationContext;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\">     * 从静态变量ApplicationContext中取得Bean, 自动转型为所赋值对象的类型. </span></div><div class=\"line\"><span class=\"comment\">     */</span>  </div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)  </div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getBean</span><span class=\"params\">(String name)</span> </span>&#123;  </div><div class=\"line\">        checkApplicationContext();  </div><div class=\"line\">        <span class=\"keyword\">return</span> (T) applicationContext.getBean(name);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\">     * 从静态变量ApplicationContext中取得Bean, 自动转型为所赋值对象的类型. </span></div><div class=\"line\"><span class=\"comment\">     */</span>  </div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)  </div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getBean</span><span class=\"params\">(Class&lt;T&gt; clazz)</span> </span>&#123;  </div><div class=\"line\">        checkApplicationContext();  </div><div class=\"line\">        <span class=\"keyword\">return</span> (T) applicationContext.getBeansOfType(clazz);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\">     * 清除applicationContext静态变量. </span></div><div class=\"line\"><span class=\"comment\">     */</span>  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">cleanApplicationContext</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">        applicationContext = <span class=\"keyword\">null</span>;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">checkApplicationContext</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">if</span> (applicationContext == <span class=\"keyword\">null</span>) &#123;  </div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(<span class=\"string\">\"applicaitonContext未注入,请在applicationContext.xml中定义SpringContextHolder\"</span>);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"SPRING配置\"><a href=\"#SPRING配置\" class=\"headerlink\" title=\"SPRING配置\"></a>SPRING配置</h2><p>上文的类就是我们要用的，而其中的setApplicationContext是接口中需要实现的，Spring会自动进行填充。我们在Spring的配置文件中注册一下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"springContextUtil\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"xxx.xx.SpringContextUtil\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><p>这样就可以了，Spring把我们需要的东西给我们了。<br>我们就可以在需要的地方这样做：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">YouClass obj = (YouClass)SpringUtil.getObject(<span class=\"string\">\"beanid\"</span>);</div></pre></td></tr></table></figure></p>\n<h1 id=\"方法二，使用了注解和静态化的方式来产生SpringFactory对象\"><a href=\"#方法二，使用了注解和静态化的方式来产生SpringFactory对象\" class=\"headerlink\" title=\"方法二，使用了注解和静态化的方式来产生SpringFactory对象\"></a>方法二，使用了注解和静态化的方式来产生SpringFactory对象</h1><p>上文的方法有个麻烦的地方：需要配置。而Spring2.5及之后的版本实际上加入了注解的方式进行依赖项的注入，使用如下代码也许更好：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringContextUtil</span> <span class=\"keyword\">extends</span> <span class=\"title\">SpringBeanAutowiringSupport</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    <span class=\"keyword\">private</span> BeanFactory beanFactory;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//静态方法初始化类</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> SpringContextUtil instance;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">static</span> &#123;</div><div class=\"line\">        instance = <span class=\"keyword\">new</span> SpringContextUtil();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//根据bean的id，获取对应类对象</span></div><div class=\"line\">    <span class=\"comment\">//根据bean的id获取bean对象要比根据class获取bean对象效率高，但容易出现人为错误</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getBean</span><span class=\"params\">(String beanId)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> (T)beanFactory.getBean(beanId);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//根据bean的类型，获取对应类对象，</span></div><div class=\"line\">    <span class=\"comment\">//不容易出现认为错误，但效率不如根据id获取bean对象，因为spring内部是把class转换为name，然后再进行查找</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(&#123;<span class=\"string\">\"unchecked\"</span>, <span class=\"string\">\"rawtypes\"</span>&#125;)</div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getBean</span><span class=\"params\">(Class&lt;T&gt; classT)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> beanFactory.getBean(classT);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SpringContextUtil <span class=\"title\">getInstance</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> instance;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"注解扫描\"><a href=\"#注解扫描\" class=\"headerlink\" title=\"注解扫描\"></a>注解扫描</h2><p>如果使用@Autowired注解自动装配的话，继承SpringBeanAutowiringSupport类是不能少的。当然，使用@Component等注解也是可以的。使用注解的话配置就需要改动了，不过因为我们为支持Spring注解的配置是可以多用的，所以还好。如下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"org.ahe\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">context:component-scan</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>配置即可让org.ahe下所有包(您依然可以通过子标签的正则表达式匹配来进行更多设置)下的注解起作用。</p>\n<h2 id=\"使用示例-1\"><a href=\"#使用示例-1\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><p>这样就可以了，Spring把我们需要的东西给我们了。<br>我们就可以在需要的地方这样做：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">MyTestBean myTestBean = (MyTestBean ) SpringUtil.getInstance().getBean(MyTestBean.class);</div><div class=\"line\">MyTestBean myTestBean1 = (MyTestBean) SpringUtil.getInstance().getBean(<span class=\"string\">\"myTestBean\"</span>);</div></pre></td></tr></table></figure></p>\n<h1 id=\"系统初始化无法获取bean\"><a href=\"#系统初始化无法获取bean\" class=\"headerlink\" title=\"系统初始化无法获取bean\"></a>系统初始化无法获取bean</h1><p>目前又做了个系统初始化的东东SystemInit，然后发现上面的getBean()用不了了。看了下发现是因为在系统初始化的时候SpringContextUtil还没有初始化，导致在SystemInit类里面的东西getBean()失败。<br>于是小改造了下，把ApplicationContextAware放在SystemInit类，然后注入到SpringContextUtil，这样就保证了在执行系统初始化方法之前，applicationContext一定不是null。</p>\n<h2 id=\"SpringContextUtil\"><a href=\"#SpringContextUtil\" class=\"headerlink\" title=\"SpringContextUtil\"></a>SpringContextUtil</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * spring上下文配置</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Mingchenchen</span></div><div class=\"line\"><span class=\"comment\"> *</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringContextUtil</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Logger logger = Logger.getLogger(SpringContextUtil.class);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//@Autowired 沿用springTest的这种方法 是否会更好？</span></div><div class=\"line\">    <span class=\"comment\">//ApplicationContext ctx;</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ApplicationContext applicationContext = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setApplicationContext</span><span class=\"params\">(ApplicationContext applicationContext)</span> <span class=\"keyword\">throws</span> BeansException </span>&#123;</div><div class=\"line\">        SpringContextUtil.applicationContext = applicationContext;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//注意此处变成了static</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ApplicationContext <span class=\"title\">getApplicationContext</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> applicationContext;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 注意 bean name默认 = 类名(首字母小写)</span></div><div class=\"line\"><span class=\"comment\">     * 例如: A8sClusterDao = getBean(\"k8sClusterDao\")</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> name</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> BeansException</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">getBean</span><span class=\"params\">(String name)</span> <span class=\"keyword\">throws</span> BeansException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> applicationContext.getBean(name);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 根据类名获取到bean</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &lt;T&gt;</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> BeansException</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getBeanByName</span><span class=\"params\">(Class&lt;T&gt; clazz)</span> <span class=\"keyword\">throws</span> BeansException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">char</span>[] cs=clazz.getSimpleName().toCharArray();</div><div class=\"line\">            cs[<span class=\"number\">0</span>] += <span class=\"number\">32</span>;<span class=\"comment\">//首字母大写到小写</span></div><div class=\"line\">            <span class=\"keyword\">return</span> (T) applicationContext.getBean(String.valueOf(cs));</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125; </div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">containsBean</span><span class=\"params\">(String name)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> applicationContext.containsBean(name);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isSingleton</span><span class=\"params\">(String name)</span> <span class=\"keyword\">throws</span> NoSuchBeanDefinitionException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> applicationContext.isSingleton(name);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"系统初始化代码\"><a href=\"#系统初始化代码\" class=\"headerlink\" title=\"系统初始化代码\"></a>系统初始化代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Descripties: 系统初始化</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> wangkaiping</span></div><div class=\"line\"><span class=\"comment\"> * 2016年5月23日 上午11:58:09</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SystemInit</span> <span class=\"keyword\">implements</span> <span class=\"title\">InitializingBean</span>,<span class=\"title\">ApplicationContextAware</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Logger logger = Logger.getLogger(SystemInit.class);</div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    <span class=\"keyword\">private</span> ClusterDao clusterDao;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">afterPropertiesSet</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        logger.info(<span class=\"string\">\"--------------系统初始化中-------------------\"</span>);</div><div class=\"line\">        initClusterCache();<span class=\"comment\">//初始化集群数据 必须最开始完成</span></div><div class=\"line\">        initRefreshAppStatusTask();</div><div class=\"line\">        initUpdateAppStatusToDB();</div><div class=\"line\">        initUpdateSession();</div><div class=\"line\">        logger.info(<span class=\"string\">\"--------------系统初始化完成-------------------\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 1.初始化集群数据</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initClusterCache</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        logger.info(<span class=\"string\">\"1.初始化集群信息到缓存中:ClusterCache开始\"</span>);</div><div class=\"line\">        <span class=\"comment\">//查询数据库所有的集群数据</span></div><div class=\"line\">        List&lt;ClusterEntity&gt; allClusterInfoList = clusterDao.selectAll(ClusterEntity.class, <span class=\"string\">\"delete_flag=0\"</span>);</div><div class=\"line\">        <span class=\"keyword\">for</span> (ClusterEntity k8sClusterEntity : allClusterInfoList) &#123;</div><div class=\"line\">            ClusterCache.put(k8sClusterEntity.getUuid() , k8sClusterEntity);<span class=\"comment\">//存入缓存</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        logger.info(<span class=\"string\">\"1.初始化集群信息到缓存中:ClusterCache完成,总共\"</span> + allClusterInfoList.size() + <span class=\"string\">\"条数据\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 2.初始化异步任务:刷新所有应用状态</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initRefreshAppStatusTask</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        logger.info(<span class=\"string\">\"2.初始化任务:RefreshAllAppStatusTask 刷新应用下的k8s的pod状态并存入待更新队列\"</span>);</div><div class=\"line\">        RefreshAppStatusExcutor.init();</div><div class=\"line\">        logger.info(<span class=\"string\">\"2.初始化任务:RefreshAllAppStatusTask 完成\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 3.初始化异步任务:更新状态到数据库</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initUpdateAppStatusToDB</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        logger.info(<span class=\"string\">\"3.初始化任务:RefreshToDBTask 从待更新Appinstance队列取出数据并更新数据库\"</span>);</div><div class=\"line\">        UpdateAppStatusToDBExcutor.init();</div><div class=\"line\">        logger.info(<span class=\"string\">\"3.初始化任务:RefreshToDBTask 完成\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 4. 初始化异步任务： 更新用户的所有session</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initUpdateSession</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        logger.info(<span class=\"string\">\"4.初始化任务：更新session开始\"</span>);</div><div class=\"line\">        UserSessionUpdateExcutor.init();</div><div class=\"line\">        logger.info(<span class=\"string\">\"4.初始化任务：更新session结束\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">////////////////////////////////////////////////////////////////</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//此方法一定不要写成static</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setApplicationContext</span><span class=\"params\">(ApplicationContext applicationContext)</span> </span></div><div class=\"line\"><span class=\"function\">                                                <span class=\"keyword\">throws</span> BeansException </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//实际上是把applicationContext传入到了SpringContextUtil里面</span></div><div class=\"line\">        SpringContextUtil.setApplicationContext(applicationContext);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>最近在做项目的时候我发现一个问题：Spring的IOC容器不能在Web中被引用(或者说不能被任意地引用)。我们在配置文件中让Spring自动装配，但并没有留住ApplicationContext的实例。我们如果希望在我们的项目中任何位置都能拿到同一个ApplicationContext来获取IOC容器中的资源，就要让Spring将上下文环境填充到我们能获取的地方，比如下面的做法：</p>\n<ul>\n<li>方法一: 实现自ApplicationContextAware接口</li>\n<li>方法二，使用了注解和静态化的方式来产生SpringFactory对象</li>\n</ul>","more":"<h1 id=\"方法一-实现自ApplicationContextAware接口\"><a href=\"#方法一-实现自ApplicationContextAware接口\" class=\"headerlink\" title=\"方法一: 实现自ApplicationContextAware接口\"></a>方法一: 实现自ApplicationContextAware接口</h1><p>自定义一个工具类，实现自ApplicationContextAware接口，接口的方法是setApplicationContext，我们实现它，并让其为我们服务，因为Spring在load自己的时候会将上下文环境填充进来。我们所要做的就是将得到的ApplicationContext保存下来用。</p>\n<h2 id=\"关键代码\"><a href=\"#关键代码\" class=\"headerlink\" title=\"关键代码\"></a>关键代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ApplicationContext;  </div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ApplicationContextAware;  </div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringContextUtil</span> <span class=\"keyword\">implements</span> <span class=\"title\">ApplicationContextAware</span> </span>&#123;  </div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ApplicationContext applicationContext;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\">     * 实现ApplicationContextAware接口的context注入函数, 将其存入静态变量. </span></div><div class=\"line\"><span class=\"comment\">     */</span>  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setApplicationContext</span><span class=\"params\">(ApplicationContext applicationContext)</span> </span>&#123;  </div><div class=\"line\">        SpringContextUtil.applicationContext = applicationContext; <span class=\"comment\">// NOSONAR  </span></div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\">     * 取得存储在静态变量中的ApplicationContext. </span></div><div class=\"line\"><span class=\"comment\">     */</span>  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ApplicationContext <span class=\"title\">getApplicationContext</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">        checkApplicationContext();  </div><div class=\"line\">        <span class=\"keyword\">return</span> applicationContext;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\">     * 从静态变量ApplicationContext中取得Bean, 自动转型为所赋值对象的类型. </span></div><div class=\"line\"><span class=\"comment\">     */</span>  </div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)  </div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getBean</span><span class=\"params\">(String name)</span> </span>&#123;  </div><div class=\"line\">        checkApplicationContext();  </div><div class=\"line\">        <span class=\"keyword\">return</span> (T) applicationContext.getBean(name);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\">     * 从静态变量ApplicationContext中取得Bean, 自动转型为所赋值对象的类型. </span></div><div class=\"line\"><span class=\"comment\">     */</span>  </div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)  </div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getBean</span><span class=\"params\">(Class&lt;T&gt; clazz)</span> </span>&#123;  </div><div class=\"line\">        checkApplicationContext();  </div><div class=\"line\">        <span class=\"keyword\">return</span> (T) applicationContext.getBeansOfType(clazz);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\">     * 清除applicationContext静态变量. </span></div><div class=\"line\"><span class=\"comment\">     */</span>  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">cleanApplicationContext</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">        applicationContext = <span class=\"keyword\">null</span>;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">checkApplicationContext</span><span class=\"params\">()</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">if</span> (applicationContext == <span class=\"keyword\">null</span>) &#123;  </div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(<span class=\"string\">\"applicaitonContext未注入,请在applicationContext.xml中定义SpringContextHolder\"</span>);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"SPRING配置\"><a href=\"#SPRING配置\" class=\"headerlink\" title=\"SPRING配置\"></a>SPRING配置</h2><p>上文的类就是我们要用的，而其中的setApplicationContext是接口中需要实现的，Spring会自动进行填充。我们在Spring的配置文件中注册一下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"springContextUtil\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"xxx.xx.SpringContextUtil\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><p>这样就可以了，Spring把我们需要的东西给我们了。<br>我们就可以在需要的地方这样做：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">YouClass obj = (YouClass)SpringUtil.getObject(<span class=\"string\">\"beanid\"</span>);</div></pre></td></tr></table></figure></p>\n<h1 id=\"方法二，使用了注解和静态化的方式来产生SpringFactory对象\"><a href=\"#方法二，使用了注解和静态化的方式来产生SpringFactory对象\" class=\"headerlink\" title=\"方法二，使用了注解和静态化的方式来产生SpringFactory对象\"></a>方法二，使用了注解和静态化的方式来产生SpringFactory对象</h1><p>上文的方法有个麻烦的地方：需要配置。而Spring2.5及之后的版本实际上加入了注解的方式进行依赖项的注入，使用如下代码也许更好：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringContextUtil</span> <span class=\"keyword\">extends</span> <span class=\"title\">SpringBeanAutowiringSupport</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    <span class=\"keyword\">private</span> BeanFactory beanFactory;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//静态方法初始化类</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> SpringContextUtil instance;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">static</span> &#123;</div><div class=\"line\">        instance = <span class=\"keyword\">new</span> SpringContextUtil();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//根据bean的id，获取对应类对象</span></div><div class=\"line\">    <span class=\"comment\">//根据bean的id获取bean对象要比根据class获取bean对象效率高，但容易出现人为错误</span></div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getBean</span><span class=\"params\">(String beanId)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> (T)beanFactory.getBean(beanId);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//根据bean的类型，获取对应类对象，</span></div><div class=\"line\">    <span class=\"comment\">//不容易出现认为错误，但效率不如根据id获取bean对象，因为spring内部是把class转换为name，然后再进行查找</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(&#123;<span class=\"string\">\"unchecked\"</span>, <span class=\"string\">\"rawtypes\"</span>&#125;)</div><div class=\"line\">    <span class=\"keyword\">public</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getBean</span><span class=\"params\">(Class&lt;T&gt; classT)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> beanFactory.getBean(classT);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SpringContextUtil <span class=\"title\">getInstance</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> instance;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"注解扫描\"><a href=\"#注解扫描\" class=\"headerlink\" title=\"注解扫描\"></a>注解扫描</h2><p>如果使用@Autowired注解自动装配的话，继承SpringBeanAutowiringSupport类是不能少的。当然，使用@Component等注解也是可以的。使用注解的话配置就需要改动了，不过因为我们为支持Spring注解的配置是可以多用的，所以还好。如下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"org.ahe\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">context:component-scan</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>配置即可让org.ahe下所有包(您依然可以通过子标签的正则表达式匹配来进行更多设置)下的注解起作用。</p>\n<h2 id=\"使用示例-1\"><a href=\"#使用示例-1\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><p>这样就可以了，Spring把我们需要的东西给我们了。<br>我们就可以在需要的地方这样做：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">MyTestBean myTestBean = (MyTestBean ) SpringUtil.getInstance().getBean(MyTestBean.class);</div><div class=\"line\">MyTestBean myTestBean1 = (MyTestBean) SpringUtil.getInstance().getBean(<span class=\"string\">\"myTestBean\"</span>);</div></pre></td></tr></table></figure></p>\n<h1 id=\"系统初始化无法获取bean\"><a href=\"#系统初始化无法获取bean\" class=\"headerlink\" title=\"系统初始化无法获取bean\"></a>系统初始化无法获取bean</h1><p>目前又做了个系统初始化的东东SystemInit，然后发现上面的getBean()用不了了。看了下发现是因为在系统初始化的时候SpringContextUtil还没有初始化，导致在SystemInit类里面的东西getBean()失败。<br>于是小改造了下，把ApplicationContextAware放在SystemInit类，然后注入到SpringContextUtil，这样就保证了在执行系统初始化方法之前，applicationContext一定不是null。</p>\n<h2 id=\"SpringContextUtil\"><a href=\"#SpringContextUtil\" class=\"headerlink\" title=\"SpringContextUtil\"></a>SpringContextUtil</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * spring上下文配置</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Mingchenchen</span></div><div class=\"line\"><span class=\"comment\"> *</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringContextUtil</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Logger logger = Logger.getLogger(SpringContextUtil.class);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//@Autowired 沿用springTest的这种方法 是否会更好？</span></div><div class=\"line\">    <span class=\"comment\">//ApplicationContext ctx;</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ApplicationContext applicationContext = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setApplicationContext</span><span class=\"params\">(ApplicationContext applicationContext)</span> <span class=\"keyword\">throws</span> BeansException </span>&#123;</div><div class=\"line\">        SpringContextUtil.applicationContext = applicationContext;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//注意此处变成了static</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ApplicationContext <span class=\"title\">getApplicationContext</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> applicationContext;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 注意 bean name默认 = 类名(首字母小写)</span></div><div class=\"line\"><span class=\"comment\">     * 例如: A8sClusterDao = getBean(\"k8sClusterDao\")</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> name</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> BeansException</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">getBean</span><span class=\"params\">(String name)</span> <span class=\"keyword\">throws</span> BeansException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> applicationContext.getBean(name);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 根据类名获取到bean</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &lt;T&gt;</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> clazz</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> BeansException</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">T <span class=\"title\">getBeanByName</span><span class=\"params\">(Class&lt;T&gt; clazz)</span> <span class=\"keyword\">throws</span> BeansException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">char</span>[] cs=clazz.getSimpleName().toCharArray();</div><div class=\"line\">            cs[<span class=\"number\">0</span>] += <span class=\"number\">32</span>;<span class=\"comment\">//首字母大写到小写</span></div><div class=\"line\">            <span class=\"keyword\">return</span> (T) applicationContext.getBean(String.valueOf(cs));</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125; </div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">containsBean</span><span class=\"params\">(String name)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> applicationContext.containsBean(name);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isSingleton</span><span class=\"params\">(String name)</span> <span class=\"keyword\">throws</span> NoSuchBeanDefinitionException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> applicationContext.isSingleton(name);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"系统初始化代码\"><a href=\"#系统初始化代码\" class=\"headerlink\" title=\"系统初始化代码\"></a>系统初始化代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Descripties: 系统初始化</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> wangkaiping</span></div><div class=\"line\"><span class=\"comment\"> * 2016年5月23日 上午11:58:09</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SystemInit</span> <span class=\"keyword\">implements</span> <span class=\"title\">InitializingBean</span>,<span class=\"title\">ApplicationContextAware</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Logger logger = Logger.getLogger(SystemInit.class);</div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    <span class=\"keyword\">private</span> ClusterDao clusterDao;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">afterPropertiesSet</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        logger.info(<span class=\"string\">\"--------------系统初始化中-------------------\"</span>);</div><div class=\"line\">        initClusterCache();<span class=\"comment\">//初始化集群数据 必须最开始完成</span></div><div class=\"line\">        initRefreshAppStatusTask();</div><div class=\"line\">        initUpdateAppStatusToDB();</div><div class=\"line\">        initUpdateSession();</div><div class=\"line\">        logger.info(<span class=\"string\">\"--------------系统初始化完成-------------------\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 1.初始化集群数据</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initClusterCache</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        logger.info(<span class=\"string\">\"1.初始化集群信息到缓存中:ClusterCache开始\"</span>);</div><div class=\"line\">        <span class=\"comment\">//查询数据库所有的集群数据</span></div><div class=\"line\">        List&lt;ClusterEntity&gt; allClusterInfoList = clusterDao.selectAll(ClusterEntity.class, <span class=\"string\">\"delete_flag=0\"</span>);</div><div class=\"line\">        <span class=\"keyword\">for</span> (ClusterEntity k8sClusterEntity : allClusterInfoList) &#123;</div><div class=\"line\">            ClusterCache.put(k8sClusterEntity.getUuid() , k8sClusterEntity);<span class=\"comment\">//存入缓存</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        logger.info(<span class=\"string\">\"1.初始化集群信息到缓存中:ClusterCache完成,总共\"</span> + allClusterInfoList.size() + <span class=\"string\">\"条数据\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 2.初始化异步任务:刷新所有应用状态</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initRefreshAppStatusTask</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        logger.info(<span class=\"string\">\"2.初始化任务:RefreshAllAppStatusTask 刷新应用下的k8s的pod状态并存入待更新队列\"</span>);</div><div class=\"line\">        RefreshAppStatusExcutor.init();</div><div class=\"line\">        logger.info(<span class=\"string\">\"2.初始化任务:RefreshAllAppStatusTask 完成\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 3.初始化异步任务:更新状态到数据库</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initUpdateAppStatusToDB</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        logger.info(<span class=\"string\">\"3.初始化任务:RefreshToDBTask 从待更新Appinstance队列取出数据并更新数据库\"</span>);</div><div class=\"line\">        UpdateAppStatusToDBExcutor.init();</div><div class=\"line\">        logger.info(<span class=\"string\">\"3.初始化任务:RefreshToDBTask 完成\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 4. 初始化异步任务： 更新用户的所有session</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initUpdateSession</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        logger.info(<span class=\"string\">\"4.初始化任务：更新session开始\"</span>);</div><div class=\"line\">        UserSessionUpdateExcutor.init();</div><div class=\"line\">        logger.info(<span class=\"string\">\"4.初始化任务：更新session结束\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">////////////////////////////////////////////////////////////////</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//此方法一定不要写成static</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setApplicationContext</span><span class=\"params\">(ApplicationContext applicationContext)</span> </span></div><div class=\"line\"><span class=\"function\">                                                <span class=\"keyword\">throws</span> BeansException </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//实际上是把applicationContext传入到了SpringContextUtil里面</span></div><div class=\"line\">        SpringContextUtil.setApplicationContext(applicationContext);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Hello World","date":"2017-09-05T04:39:04.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n<!-- more -->\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2017-09-05 12:39:04\ntags: [HEXO]\ncategories: 随笔\n\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n<!-- more -->\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2017-09-16T11:16:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7n84lkn000dzxrxcgi3azja","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>","more":"<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>"},{"title":"idea无法下载依赖包的source,使用maven下载source","date":"2017-09-10T04:08:07.000Z","_content":"\n## 问题描述\n使用Idea时，想查看依赖包的源码，但出现无法下载的提示：\n> idea Sources for ‘spring-context-4.3.2.RELEASE.jar’ not found\n\n## 解决方法\n### 方法1\n使用Maven命令。经过测试，好用。下载了所有POM里的依赖包的source，这点不是想要的，原来只想下载想看的依赖的source。参考：IDEA-165800 Can’t download dependency’s source code\n``` \nmvn dependency:resolve -Dclassifier=sources\n```\n### 方法2\n1.下载POM文件依赖的包的source\n```\nmvn dependency:sources\n```\n2.下载POM文件依赖的包的javadoce\n```\nmvn dependency:resolve -Dclassifier=javadoc\n```\n3.下载指定依赖包（artifactId）的source。这个很不错，是我想要的。\n```\nmvn dependency:sources -DincludeArtifactIds=guava\n```\n参考：[Get source JARs from Maven repository](https://stackoverflow.com/questions/2059431/get-source-jars-from-maven-repository)\n　 ","source":"_posts/idea无法下载依赖包的source-使用maven下载source.md","raw":"---\ntitle: 'idea无法下载依赖包的source,使用maven下载source'\ndate: 2017-09-10 12:08:07\ntags:\n - IDEA\n - Maven\ncategories: \n - JAVA\n - Maven\n---\n\n## 问题描述\n使用Idea时，想查看依赖包的源码，但出现无法下载的提示：\n> idea Sources for ‘spring-context-4.3.2.RELEASE.jar’ not found\n\n## 解决方法\n### 方法1\n使用Maven命令。经过测试，好用。下载了所有POM里的依赖包的source，这点不是想要的，原来只想下载想看的依赖的source。参考：IDEA-165800 Can’t download dependency’s source code\n``` \nmvn dependency:resolve -Dclassifier=sources\n```\n### 方法2\n1.下载POM文件依赖的包的source\n```\nmvn dependency:sources\n```\n2.下载POM文件依赖的包的javadoce\n```\nmvn dependency:resolve -Dclassifier=javadoc\n```\n3.下载指定依赖包（artifactId）的source。这个很不错，是我想要的。\n```\nmvn dependency:sources -DincludeArtifactIds=guava\n```\n参考：[Get source JARs from Maven repository](https://stackoverflow.com/questions/2059431/get-source-jars-from-maven-repository)\n　 ","slug":"idea无法下载依赖包的source-使用maven下载source","published":1,"updated":"2017-09-16T11:16:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7n84lko000ezxrxge45ahgw","content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>使用Idea时，想查看依赖包的源码，但出现无法下载的提示：</p>\n<blockquote>\n<p>idea Sources for ‘spring-context-4.3.2.RELEASE.jar’ not found</p>\n</blockquote>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1\"></a>方法1</h3><p>使用Maven命令。经过测试，好用。下载了所有POM里的依赖包的source，这点不是想要的，原来只想下载想看的依赖的source。参考：IDEA-165800 Can’t download dependency’s source code<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn dependency:resolve -Dclassifier=sources</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2\"></a>方法2</h3><p>1.下载POM文件依赖的包的source<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn dependency:sources</div></pre></td></tr></table></figure></p>\n<p>2.下载POM文件依赖的包的javadoce<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn dependency:resolve -Dclassifier=javadoc</div></pre></td></tr></table></figure></p>\n<p>3.下载指定依赖包（artifactId）的source。这个很不错，是我想要的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn dependency:sources -DincludeArtifactIds=guava</div></pre></td></tr></table></figure></p>\n<p>参考：<a href=\"https://stackoverflow.com/questions/2059431/get-source-jars-from-maven-repository\" target=\"_blank\" rel=\"external\">Get source JARs from Maven repository</a>\n　 </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>使用Idea时，想查看依赖包的源码，但出现无法下载的提示：</p>\n<blockquote>\n<p>idea Sources for ‘spring-context-4.3.2.RELEASE.jar’ not found</p>\n</blockquote>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1\"></a>方法1</h3><p>使用Maven命令。经过测试，好用。下载了所有POM里的依赖包的source，这点不是想要的，原来只想下载想看的依赖的source。参考：IDEA-165800 Can’t download dependency’s source code<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn dependency:resolve -Dclassifier=sources</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2\"></a>方法2</h3><p>1.下载POM文件依赖的包的source<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn dependency:sources</div></pre></td></tr></table></figure></p>\n<p>2.下载POM文件依赖的包的javadoce<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn dependency:resolve -Dclassifier=javadoc</div></pre></td></tr></table></figure></p>\n<p>3.下载指定依赖包（artifactId）的source。这个很不错，是我想要的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn dependency:sources -DincludeArtifactIds=guava</div></pre></td></tr></table></figure></p>\n<p>参考：<a href=\"https://stackoverflow.com/questions/2059431/get-source-jars-from-maven-repository\" target=\"_blank\" rel=\"external\">Get source JARs from Maven repository</a>\n　 </p>\n"},{"title":"两台Linux服务器之间通过SCP传输文件夹（无须密码验证）","date":"2017-09-05T13:00:10.000Z","_content":"\n原文参考：http://buddie.iteye.com/blog/1988730\n\n最近因工作需要，要在两台Linux服务器之间传输文件夹。\nLinux命令选择是SCP，SCP命令的基本格式如下：\n\n``` bash\nscp -p port user@serverip:/home/user/filename /home/user/filename  \n```\n\n以上端口p 为参数，port 端口；\nuser 为远程服务器的用户；\nserverip 为远程服务器ip或者域名；\n第一个/home/user/filename 为要传输的远程服务器的文件名；\n第二个/home/user/filename 为本地服务服务器的文件名。\n\n<!-- more -->\n\n如果端口是默认，则可省略-p port；如果传传输的为文件夹，则要加-r参数。如下所示：\n``` bash\nscp -r user@serverip:/home/user/folder /home/user/folder  \n```\n\n以上是从serverip这台服务器上下载文件夹/home/user/folder到本服务器的/home/user/folder中。\n如果要从本地上传文件夹到远程服务器，那就是下面的类似指令：\n \n``` bash\nscp -r /home/user/folder user@serverip:/home/user/folder\n```\n 这样就实现了两台Linux服务器之间的文件、文件夹传输。\n \n可是每次都要输入密码验证，很麻烦。\n为了不用每次输入密码验证，需要在两个服务器这间建立互信通信。\n首先，使用ssh-keygen生成密钥文件和私钥文件\n``` bash\nssh-keygen -t rsa  \n```\n\n其中rsa为一种加密方式，另一种为dsa\n这时，服务器会提醒你输入密钥文件的文件名，默认为/root/.ssh/id_rsa\n直接回车\n这时，服务器会提醒你输入密码。如果想以后通过该密钥在两台服务器这间通信时，不需要再输入密码的话，这个时候，就不用输入任务字符，直接回车就好！\n系统会再确认一下密码，仍然回车。\n这样就在/root/.ssh/目录下，生成了id_rsa.pub和id_rsa两上文件。\n \n接下来，就要将id_rsa.pub文件上传到目标服务器的/root/.ssh/目录下，重命名为authorized_keys\n\n``` bash\nscp -r /root/.ssh/id_rsa.pub user@serverip:/root/.ssh/authorized_keys  \n```\n\n这时，输入目标服务器的密码，待文件传输完成后即可。\n如果目标服务器上，已经存在了authorized_keys，那么就将id_rsa.pub中的内容追加到目标服务器的authorized_keys文件中\n\n``` bash\ncat /root/.ssh/id_rsa.pub | ssh user@serverip 'cat >> /root/.ssh/authorized_keys'\n```\n此时，再使用scp在这两台服务器这间传输文件，只有第一次，需要输入密码外，以后就再也不用输入密码验证了。\n\n","source":"_posts/两台Linux服务器之间通过SCP传输文件夹（无须密码验证）.md","raw":"---\ntitle: 两台Linux服务器之间通过SCP传输文件夹（无须密码验证）\ndate: 2017-09-05 21:00:10\ntags: \n  - Linux\n  - SCP\ncategories: \n  - Linux\n  - SCP\n---\n\n原文参考：http://buddie.iteye.com/blog/1988730\n\n最近因工作需要，要在两台Linux服务器之间传输文件夹。\nLinux命令选择是SCP，SCP命令的基本格式如下：\n\n``` bash\nscp -p port user@serverip:/home/user/filename /home/user/filename  \n```\n\n以上端口p 为参数，port 端口；\nuser 为远程服务器的用户；\nserverip 为远程服务器ip或者域名；\n第一个/home/user/filename 为要传输的远程服务器的文件名；\n第二个/home/user/filename 为本地服务服务器的文件名。\n\n<!-- more -->\n\n如果端口是默认，则可省略-p port；如果传传输的为文件夹，则要加-r参数。如下所示：\n``` bash\nscp -r user@serverip:/home/user/folder /home/user/folder  \n```\n\n以上是从serverip这台服务器上下载文件夹/home/user/folder到本服务器的/home/user/folder中。\n如果要从本地上传文件夹到远程服务器，那就是下面的类似指令：\n \n``` bash\nscp -r /home/user/folder user@serverip:/home/user/folder\n```\n 这样就实现了两台Linux服务器之间的文件、文件夹传输。\n \n可是每次都要输入密码验证，很麻烦。\n为了不用每次输入密码验证，需要在两个服务器这间建立互信通信。\n首先，使用ssh-keygen生成密钥文件和私钥文件\n``` bash\nssh-keygen -t rsa  \n```\n\n其中rsa为一种加密方式，另一种为dsa\n这时，服务器会提醒你输入密钥文件的文件名，默认为/root/.ssh/id_rsa\n直接回车\n这时，服务器会提醒你输入密码。如果想以后通过该密钥在两台服务器这间通信时，不需要再输入密码的话，这个时候，就不用输入任务字符，直接回车就好！\n系统会再确认一下密码，仍然回车。\n这样就在/root/.ssh/目录下，生成了id_rsa.pub和id_rsa两上文件。\n \n接下来，就要将id_rsa.pub文件上传到目标服务器的/root/.ssh/目录下，重命名为authorized_keys\n\n``` bash\nscp -r /root/.ssh/id_rsa.pub user@serverip:/root/.ssh/authorized_keys  \n```\n\n这时，输入目标服务器的密码，待文件传输完成后即可。\n如果目标服务器上，已经存在了authorized_keys，那么就将id_rsa.pub中的内容追加到目标服务器的authorized_keys文件中\n\n``` bash\ncat /root/.ssh/id_rsa.pub | ssh user@serverip 'cat >> /root/.ssh/authorized_keys'\n```\n此时，再使用scp在这两台服务器这间传输文件，只有第一次，需要输入密码外，以后就再也不用输入密码验证了。\n\n","slug":"两台Linux服务器之间通过SCP传输文件夹（无须密码验证）","published":1,"updated":"2017-09-16T11:16:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7n84lks000hzxrxs8vbvuir","content":"<p>原文参考：<a href=\"http://buddie.iteye.com/blog/1988730\" target=\"_blank\" rel=\"external\">http://buddie.iteye.com/blog/1988730</a></p>\n<p>最近因工作需要，要在两台Linux服务器之间传输文件夹。<br>Linux命令选择是SCP，SCP命令的基本格式如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -p port user@serverip:/home/user/filename /home/user/filename</div></pre></td></tr></table></figure>\n<p>以上端口p 为参数，port 端口；<br>user 为远程服务器的用户；<br>serverip 为远程服务器ip或者域名；<br>第一个/home/user/filename 为要传输的远程服务器的文件名；<br>第二个/home/user/filename 为本地服务服务器的文件名。</p>\n<a id=\"more\"></a>\n<p>如果端口是默认，则可省略-p port；如果传传输的为文件夹，则要加-r参数。如下所示：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r user@serverip:/home/user/folder /home/user/folder</div></pre></td></tr></table></figure></p>\n<p>以上是从serverip这台服务器上下载文件夹/home/user/folder到本服务器的/home/user/folder中。<br>如果要从本地上传文件夹到远程服务器，那就是下面的类似指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r /home/user/folder user@serverip:/home/user/folder</div></pre></td></tr></table></figure>\n<p> 这样就实现了两台Linux服务器之间的文件、文件夹传输。</p>\n<p>可是每次都要输入密码验证，很麻烦。<br>为了不用每次输入密码验证，需要在两个服务器这间建立互信通信。<br>首先，使用ssh-keygen生成密钥文件和私钥文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa</div></pre></td></tr></table></figure></p>\n<p>其中rsa为一种加密方式，另一种为dsa<br>这时，服务器会提醒你输入密钥文件的文件名，默认为/root/.ssh/id_rsa<br>直接回车<br>这时，服务器会提醒你输入密码。如果想以后通过该密钥在两台服务器这间通信时，不需要再输入密码的话，这个时候，就不用输入任务字符，直接回车就好！<br>系统会再确认一下密码，仍然回车。<br>这样就在/root/.ssh/目录下，生成了id_rsa.pub和id_rsa两上文件。</p>\n<p>接下来，就要将id_rsa.pub文件上传到目标服务器的/root/.ssh/目录下，重命名为authorized_keys</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r /root/.ssh/id_rsa.pub user@serverip:/root/.ssh/authorized_keys</div></pre></td></tr></table></figure>\n<p>这时，输入目标服务器的密码，待文件传输完成后即可。<br>如果目标服务器上，已经存在了authorized_keys，那么就将id_rsa.pub中的内容追加到目标服务器的authorized_keys文件中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /root/.ssh/id_rsa.pub | ssh user@serverip <span class=\"string\">'cat &gt;&gt; /root/.ssh/authorized_keys'</span></div></pre></td></tr></table></figure>\n<p>此时，再使用scp在这两台服务器这间传输文件，只有第一次，需要输入密码外，以后就再也不用输入密码验证了。</p>\n","site":{"data":{}},"excerpt":"<p>原文参考：<a href=\"http://buddie.iteye.com/blog/1988730\" target=\"_blank\" rel=\"external\">http://buddie.iteye.com/blog/1988730</a></p>\n<p>最近因工作需要，要在两台Linux服务器之间传输文件夹。<br>Linux命令选择是SCP，SCP命令的基本格式如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -p port user@serverip:/home/user/filename /home/user/filename</div></pre></td></tr></table></figure>\n<p>以上端口p 为参数，port 端口；<br>user 为远程服务器的用户；<br>serverip 为远程服务器ip或者域名；<br>第一个/home/user/filename 为要传输的远程服务器的文件名；<br>第二个/home/user/filename 为本地服务服务器的文件名。</p>","more":"<p>如果端口是默认，则可省略-p port；如果传传输的为文件夹，则要加-r参数。如下所示：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r user@serverip:/home/user/folder /home/user/folder</div></pre></td></tr></table></figure></p>\n<p>以上是从serverip这台服务器上下载文件夹/home/user/folder到本服务器的/home/user/folder中。<br>如果要从本地上传文件夹到远程服务器，那就是下面的类似指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r /home/user/folder user@serverip:/home/user/folder</div></pre></td></tr></table></figure>\n<p> 这样就实现了两台Linux服务器之间的文件、文件夹传输。</p>\n<p>可是每次都要输入密码验证，很麻烦。<br>为了不用每次输入密码验证，需要在两个服务器这间建立互信通信。<br>首先，使用ssh-keygen生成密钥文件和私钥文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa</div></pre></td></tr></table></figure></p>\n<p>其中rsa为一种加密方式，另一种为dsa<br>这时，服务器会提醒你输入密钥文件的文件名，默认为/root/.ssh/id_rsa<br>直接回车<br>这时，服务器会提醒你输入密码。如果想以后通过该密钥在两台服务器这间通信时，不需要再输入密码的话，这个时候，就不用输入任务字符，直接回车就好！<br>系统会再确认一下密码，仍然回车。<br>这样就在/root/.ssh/目录下，生成了id_rsa.pub和id_rsa两上文件。</p>\n<p>接下来，就要将id_rsa.pub文件上传到目标服务器的/root/.ssh/目录下，重命名为authorized_keys</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r /root/.ssh/id_rsa.pub user@serverip:/root/.ssh/authorized_keys</div></pre></td></tr></table></figure>\n<p>这时，输入目标服务器的密码，待文件传输完成后即可。<br>如果目标服务器上，已经存在了authorized_keys，那么就将id_rsa.pub中的内容追加到目标服务器的authorized_keys文件中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /root/.ssh/id_rsa.pub | ssh user@serverip <span class=\"string\">'cat &gt;&gt; /root/.ssh/authorized_keys'</span></div></pre></td></tr></table></figure>\n<p>此时，再使用scp在这两台服务器这间传输文件，只有第一次，需要输入密码外，以后就再也不用输入密码验证了。</p>"},{"title":"使用AOP 实现Redis缓存注解，支持SPEL","date":"2017-09-10T04:11:36.000Z","_content":"\n公司项目对Redis使用比较多，因为之前没有做AOP，所以缓存逻辑和业务逻辑交织在一起，维护比较艰难\n所以最近实现了针对于Redis的@Cacheable，把缓存的对象依照类别分别存放到redis的Hash中，对于key也实现了SPEL支持。\n\n## 定义缓存注解\n创建注解，其实大部分数据都是以hash形式存储的（使的key易于管理），所以，注解中定义了fieldKey，用作Hash的field。\n\n```java\n/**\n * 数据缓存注解\n */\n@Target({ElementType.METHOD})\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\npublic @interface DataCacheable {\n\n    String cacheName() default \"\";//缓存的名称, 默认取(类名 + 方法名)\n    String[] fieldKey() ;//缓存的字段Key, 使用SPEL支持, 如:#userName\n    long expireTime() default 0; //过期时效(秒) [-1永不过期]\n\n}\n```\n\n<!-- more -->\n\n## 定义切面,定义PointCut\n\n```java\n\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.Signature;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.reflect.MethodSignature;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Value;\n\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\n\nimport java.lang.reflect.Method;\n\n/**\n * 数据缓存切面处理\n * http://www.cnblogs.com/DajiangDev/p/3770894.html\n * Created by SIVEN on 17/9/1.\n */\n@Aspect\npublic class DataCacheableAspect {\n\n    private final Logger logger = LoggerFactory.getLogger(this.getClass());\n\n    /**\n     * 可控的线程池\n     */\n    ExecutorService fixedThreadPool = Executors.newFixedThreadPool(10);\n\n\n    @Value(\"#{config['redis.cache.time']}\")\n    Long DEFAULT_CACHE_TIME = 600L; //默认10分钟\n\n    @Value(\"#{config['redis.cache.enable']}\")\n    boolean REDIS_CACHE_ENABLE;//启用缓存开关\n\n    @Resource\n    RedisClient redisClient;\n\n    /**\n     * 控制业务执行\n     *\n     * @param joinPoint\n     * @throws Throwable\n     */\n    @Around(\"execution(* gov.etax.dzswj.nsrzx.services..service..*.*(..)) && @annotation(gov.etax.dzswj.nsrzx.component.cache.annotation.DataCacheable)\")\n    public Object doAround(ProceedingJoinPoint pjp) throws Throwable {\n\n        if (!REDIS_CACHE_ENABLE) {\n            logger.debug(\"缓存开关 >> [禁用]\");\n            return pjp.proceed();\n        }\n\n        Method method = getMethod(pjp);\n        DataCacheable cacheable = method.getAnnotation(DataCacheable.class);\n        String hashKey = getHashKey(pjp, cacheable);\n        String fieldKey = parseKey(cacheable.fieldKey(), method, pjp.getArgs());\n        long expireTime = cacheable.expireTime();\n\n        //获取方法的返回类型,让缓存可以返回正确的类型\n        Class returnType = ((MethodSignature) pjp.getSignature()).getReturnType();\n\n        //使用redis 的hash进行存取，易于管理\n        Object result = redisClient.getMapField(hashKey, fieldKey, returnType);\n        if (result != null) {\n            logger.debug(\"DataCacheableAspect: doAround() 查找缓存不为空, 返回缓存数据\");\n            setExpireTime(hashKey, expireTime);\n            return result;\n        }\n        result = pjp.proceed();\n        //后置处理, 将业务数据加入到缓存中\n        doAfterReturning(hashKey, fieldKey, cacheable.expireTime(), result);\n        return result;\n    }\n\n\n    /**\n     * 后置处理方法 (写入缓存)\n     *\n     * @param point\n     * @param returnValue\n     */\n    private void doAfterReturning(final String hashKey, final String fieldKey, final Long expireTime, final Object result) {\n        //线程处理\n        fixedThreadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                logger.debug(\"DataCacheableAspect: doAfterReturning() 业务处理完毕, 异步将数据或写入缓存中..\");\n                //加入缓存\n                redisClient.addMap(hashKey, fieldKey, result);\n                //设置失效时长\n                setExpireTime(hashKey, expireTime);\n            }\n        });\n    }\n\n    /**\n     * 重置过期时间\n     *\n     * @param hashKey\n     * @param expireTime\n     */\n    private void setExpireTime(final String hashKey, Long expireTime) {\n        //设置失效时长\n        Long cacheTime = expireTime;\n        if (0 == expireTime) {\n            cacheTime = DEFAULT_CACHE_TIME;\n        }\n        redisClient.expire(hashKey, cacheTime);\n    }\n\n    /**\n     * 获取被拦截方法对象\n     * <p>\n     * MethodSignature.getMethod() 获取的是顶层接口或者父类的方法对象\n     * 而缓存的注解在实现类的方法上\n     * 所以应该使用反射获取当前对象的方法对象\n     */\n    public Method getMethod(JoinPoint pjp) {\n        //获取参数的类型\n        Object[] args = pjp.getArgs();\n        Class[] argTypes = new Class[pjp.getArgs().length];\n        for (int i = 0; i < args.length; i++) {\n            argTypes[i] = args[i].getClass();\n        }\n        Method method = null;\n        try {\n            method = pjp.getTarget().getClass().getMethod(pjp.getSignature().getName(), argTypes);\n        } catch (NoSuchMethodException e) {\n            e.printStackTrace();\n        } catch (SecurityException e) {\n            e.printStackTrace();\n        }\n        return method;\n\n    }\n\n    /**\n     * 获取缓存Hash Key\n     *\n     * @param cacheable\n     * @param point\n     * @return\n     */\n    private String getHashKey(JoinPoint point, DataCacheable cacheable) {\n        if (StringHelper.isNotEmpty(cacheable.cacheName())) {\n            return cacheable.cacheName();\n        }\n        Signature signature = point.getSignature();\n        return signature.getDeclaringTypeName() + \".\" + signature.getName();//类名 + 方法名\n    }\n\n    /**\n     * 获取缓存的key\n     * key 定义在注解上，支持SPEL表达式\n     *\n     * @param pjp\n     * @return\n     */\n    private String parseKey(String[] keys, Method method, Object[] args) {\n        //获取被拦截方法参数名列表(使用Spring支持类库)\n        LocalVariableTableParameterNameDiscoverer u =\n                new LocalVariableTableParameterNameDiscoverer();\n        String[] paraNameArr = u.getParameterNames(method);\n\n        //使用SPEL进行key的解析\n        ExpressionParser parser = new SpelExpressionParser();\n        //SPEL上下文\n        StandardEvaluationContext context = new StandardEvaluationContext();\n        //把方法参数放入SPEL上下文中\n        for (int i = 0; i < paraNameArr.length; i++) {\n            context.setVariable(paraNameArr[i], args[i]);\n        }\n\n        StringBuffer parseKeyBuff = new StringBuffer();\n        for (String key : keys) {\n            parseKeyBuff.append(\"_\").append(parser.parseExpression(key).getValue(context, String.class));\n        }\n        return parseKeyBuff.toString();\n    }\n}\n```\n## RedisClient相关封装\n参见文章[Redis配置 & 常规操作类封装](http://blog.siven.net/2017/09/10/Redis配置%20&%20常规操作类封装/)\n\n## AOP配置\n\n## 使用示例\n```java\n@Service\npublic class NsrxxServiceImpl implements INsrxxService{\n    @Override\n    @DataCacheable(fieldKey = \"#dto.queryObj.djxh\")\n    public ResultDto<NsrxxDto> queryNsrxxByDjxh(QueryDto<QueryByDjxh> dto) {\n        INsrxxMapper mapper = SessionTemplateUtil.getMapper(INsrxxMapper.class);\n        return ResultDtoHelper.success(mapper.queryNsrxxByDjxh(dto.getQueryObj()));\n    }\n}\n```\n","source":"_posts/使用AOP-实现Redis缓存注解，支持SPEL.md","raw":"---\ntitle: 使用AOP 实现Redis缓存注解，支持SPEL\ndate: 2017-09-10 12:11:36\ntags:\n - JAVA\n - Redis\n - Spring\n - AOP\ncategories: \n - JAVA\n - Spring\n - AOP\n---\n\n公司项目对Redis使用比较多，因为之前没有做AOP，所以缓存逻辑和业务逻辑交织在一起，维护比较艰难\n所以最近实现了针对于Redis的@Cacheable，把缓存的对象依照类别分别存放到redis的Hash中，对于key也实现了SPEL支持。\n\n## 定义缓存注解\n创建注解，其实大部分数据都是以hash形式存储的（使的key易于管理），所以，注解中定义了fieldKey，用作Hash的field。\n\n```java\n/**\n * 数据缓存注解\n */\n@Target({ElementType.METHOD})\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\npublic @interface DataCacheable {\n\n    String cacheName() default \"\";//缓存的名称, 默认取(类名 + 方法名)\n    String[] fieldKey() ;//缓存的字段Key, 使用SPEL支持, 如:#userName\n    long expireTime() default 0; //过期时效(秒) [-1永不过期]\n\n}\n```\n\n<!-- more -->\n\n## 定义切面,定义PointCut\n\n```java\n\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.Signature;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.reflect.MethodSignature;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Value;\n\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\n\nimport java.lang.reflect.Method;\n\n/**\n * 数据缓存切面处理\n * http://www.cnblogs.com/DajiangDev/p/3770894.html\n * Created by SIVEN on 17/9/1.\n */\n@Aspect\npublic class DataCacheableAspect {\n\n    private final Logger logger = LoggerFactory.getLogger(this.getClass());\n\n    /**\n     * 可控的线程池\n     */\n    ExecutorService fixedThreadPool = Executors.newFixedThreadPool(10);\n\n\n    @Value(\"#{config['redis.cache.time']}\")\n    Long DEFAULT_CACHE_TIME = 600L; //默认10分钟\n\n    @Value(\"#{config['redis.cache.enable']}\")\n    boolean REDIS_CACHE_ENABLE;//启用缓存开关\n\n    @Resource\n    RedisClient redisClient;\n\n    /**\n     * 控制业务执行\n     *\n     * @param joinPoint\n     * @throws Throwable\n     */\n    @Around(\"execution(* gov.etax.dzswj.nsrzx.services..service..*.*(..)) && @annotation(gov.etax.dzswj.nsrzx.component.cache.annotation.DataCacheable)\")\n    public Object doAround(ProceedingJoinPoint pjp) throws Throwable {\n\n        if (!REDIS_CACHE_ENABLE) {\n            logger.debug(\"缓存开关 >> [禁用]\");\n            return pjp.proceed();\n        }\n\n        Method method = getMethod(pjp);\n        DataCacheable cacheable = method.getAnnotation(DataCacheable.class);\n        String hashKey = getHashKey(pjp, cacheable);\n        String fieldKey = parseKey(cacheable.fieldKey(), method, pjp.getArgs());\n        long expireTime = cacheable.expireTime();\n\n        //获取方法的返回类型,让缓存可以返回正确的类型\n        Class returnType = ((MethodSignature) pjp.getSignature()).getReturnType();\n\n        //使用redis 的hash进行存取，易于管理\n        Object result = redisClient.getMapField(hashKey, fieldKey, returnType);\n        if (result != null) {\n            logger.debug(\"DataCacheableAspect: doAround() 查找缓存不为空, 返回缓存数据\");\n            setExpireTime(hashKey, expireTime);\n            return result;\n        }\n        result = pjp.proceed();\n        //后置处理, 将业务数据加入到缓存中\n        doAfterReturning(hashKey, fieldKey, cacheable.expireTime(), result);\n        return result;\n    }\n\n\n    /**\n     * 后置处理方法 (写入缓存)\n     *\n     * @param point\n     * @param returnValue\n     */\n    private void doAfterReturning(final String hashKey, final String fieldKey, final Long expireTime, final Object result) {\n        //线程处理\n        fixedThreadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                logger.debug(\"DataCacheableAspect: doAfterReturning() 业务处理完毕, 异步将数据或写入缓存中..\");\n                //加入缓存\n                redisClient.addMap(hashKey, fieldKey, result);\n                //设置失效时长\n                setExpireTime(hashKey, expireTime);\n            }\n        });\n    }\n\n    /**\n     * 重置过期时间\n     *\n     * @param hashKey\n     * @param expireTime\n     */\n    private void setExpireTime(final String hashKey, Long expireTime) {\n        //设置失效时长\n        Long cacheTime = expireTime;\n        if (0 == expireTime) {\n            cacheTime = DEFAULT_CACHE_TIME;\n        }\n        redisClient.expire(hashKey, cacheTime);\n    }\n\n    /**\n     * 获取被拦截方法对象\n     * <p>\n     * MethodSignature.getMethod() 获取的是顶层接口或者父类的方法对象\n     * 而缓存的注解在实现类的方法上\n     * 所以应该使用反射获取当前对象的方法对象\n     */\n    public Method getMethod(JoinPoint pjp) {\n        //获取参数的类型\n        Object[] args = pjp.getArgs();\n        Class[] argTypes = new Class[pjp.getArgs().length];\n        for (int i = 0; i < args.length; i++) {\n            argTypes[i] = args[i].getClass();\n        }\n        Method method = null;\n        try {\n            method = pjp.getTarget().getClass().getMethod(pjp.getSignature().getName(), argTypes);\n        } catch (NoSuchMethodException e) {\n            e.printStackTrace();\n        } catch (SecurityException e) {\n            e.printStackTrace();\n        }\n        return method;\n\n    }\n\n    /**\n     * 获取缓存Hash Key\n     *\n     * @param cacheable\n     * @param point\n     * @return\n     */\n    private String getHashKey(JoinPoint point, DataCacheable cacheable) {\n        if (StringHelper.isNotEmpty(cacheable.cacheName())) {\n            return cacheable.cacheName();\n        }\n        Signature signature = point.getSignature();\n        return signature.getDeclaringTypeName() + \".\" + signature.getName();//类名 + 方法名\n    }\n\n    /**\n     * 获取缓存的key\n     * key 定义在注解上，支持SPEL表达式\n     *\n     * @param pjp\n     * @return\n     */\n    private String parseKey(String[] keys, Method method, Object[] args) {\n        //获取被拦截方法参数名列表(使用Spring支持类库)\n        LocalVariableTableParameterNameDiscoverer u =\n                new LocalVariableTableParameterNameDiscoverer();\n        String[] paraNameArr = u.getParameterNames(method);\n\n        //使用SPEL进行key的解析\n        ExpressionParser parser = new SpelExpressionParser();\n        //SPEL上下文\n        StandardEvaluationContext context = new StandardEvaluationContext();\n        //把方法参数放入SPEL上下文中\n        for (int i = 0; i < paraNameArr.length; i++) {\n            context.setVariable(paraNameArr[i], args[i]);\n        }\n\n        StringBuffer parseKeyBuff = new StringBuffer();\n        for (String key : keys) {\n            parseKeyBuff.append(\"_\").append(parser.parseExpression(key).getValue(context, String.class));\n        }\n        return parseKeyBuff.toString();\n    }\n}\n```\n## RedisClient相关封装\n参见文章[Redis配置 & 常规操作类封装](http://blog.siven.net/2017/09/10/Redis配置%20&%20常规操作类封装/)\n\n## AOP配置\n\n## 使用示例\n```java\n@Service\npublic class NsrxxServiceImpl implements INsrxxService{\n    @Override\n    @DataCacheable(fieldKey = \"#dto.queryObj.djxh\")\n    public ResultDto<NsrxxDto> queryNsrxxByDjxh(QueryDto<QueryByDjxh> dto) {\n        INsrxxMapper mapper = SessionTemplateUtil.getMapper(INsrxxMapper.class);\n        return ResultDtoHelper.success(mapper.queryNsrxxByDjxh(dto.getQueryObj()));\n    }\n}\n```\n","slug":"使用AOP-实现Redis缓存注解，支持SPEL","published":1,"updated":"2017-09-16T11:16:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7n84lku000jzxrxvx48y4dr","content":"<p>公司项目对Redis使用比较多，因为之前没有做AOP，所以缓存逻辑和业务逻辑交织在一起，维护比较艰难<br>所以最近实现了针对于Redis的@Cacheable，把缓存的对象依照类别分别存放到redis的Hash中，对于key也实现了SPEL支持。</p>\n<h2 id=\"定义缓存注解\"><a href=\"#定义缓存注解\" class=\"headerlink\" title=\"定义缓存注解\"></a>定义缓存注解</h2><p>创建注解，其实大部分数据都是以hash形式存储的（使的key易于管理），所以，注解中定义了fieldKey，用作Hash的field。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 数据缓存注解</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"meta\">@Target</span>(&#123;ElementType.METHOD&#125;)</div><div class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class=\"line\"><span class=\"meta\">@Documented</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> DataCacheable &#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\">String <span class=\"title\">cacheName</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> \"\"</span>;<span class=\"comment\">//缓存的名称, 默认取(类名 + 方法名)</span></div><div class=\"line\">    String[] fieldKey() ;<span class=\"comment\">//缓存的字段Key, 使用SPEL支持, 如:#userName</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">long</span> <span class=\"title\">expireTime</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> 0</span>; <span class=\"comment\">//过期时效(秒) [-1永不过期]</span></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"定义切面-定义PointCut\"><a href=\"#定义切面-定义PointCut\" class=\"headerlink\" title=\"定义切面,定义PointCut\"></a>定义切面,定义PointCut</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.ProceedingJoinPoint;</div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.Signature;</div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Aspect;</div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.reflect.MethodSignature;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Value;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Around;</div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Aspect;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 数据缓存切面处理</span></div><div class=\"line\"><span class=\"comment\"> * http://www.cnblogs.com/DajiangDev/p/3770894.html</span></div><div class=\"line\"><span class=\"comment\"> * Created by SIVEN on 17/9/1.</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"meta\">@Aspect</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataCacheableAspect</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Logger logger = LoggerFactory.getLogger(<span class=\"keyword\">this</span>.getClass());</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 可控的线程池</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    ExecutorService fixedThreadPool = Executors.newFixedThreadPool(<span class=\"number\">10</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"#&#123;config['redis.cache.time']&#125;\"</span>)</div><div class=\"line\">    Long DEFAULT_CACHE_TIME = <span class=\"number\">600L</span>; <span class=\"comment\">//默认10分钟</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"#&#123;config['redis.cache.enable']&#125;\"</span>)</div><div class=\"line\">    <span class=\"keyword\">boolean</span> REDIS_CACHE_ENABLE;<span class=\"comment\">//启用缓存开关</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Resource</span></div><div class=\"line\">    RedisClient redisClient;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 控制业务执行</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> joinPoint</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> Throwable</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@Around</span>(<span class=\"string\">\"execution(* gov.etax.dzswj.nsrzx.services..service..*.*(..)) &amp;&amp; @annotation(gov.etax.dzswj.nsrzx.component.cache.annotation.DataCacheable)\"</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">doAround</span><span class=\"params\">(ProceedingJoinPoint pjp)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (!REDIS_CACHE_ENABLE) &#123;</div><div class=\"line\">            logger.debug(<span class=\"string\">\"缓存开关 &gt;&gt; [禁用]\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> pjp.proceed();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        Method method = getMethod(pjp);</div><div class=\"line\">        DataCacheable cacheable = method.getAnnotation(DataCacheable.class);</div><div class=\"line\">        String hashKey = getHashKey(pjp, cacheable);</div><div class=\"line\">        String fieldKey = parseKey(cacheable.fieldKey(), method, pjp.getArgs());</div><div class=\"line\">        <span class=\"keyword\">long</span> expireTime = cacheable.expireTime();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//获取方法的返回类型,让缓存可以返回正确的类型</span></div><div class=\"line\">        Class returnType = ((MethodSignature) pjp.getSignature()).getReturnType();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//使用redis 的hash进行存取，易于管理</span></div><div class=\"line\">        Object result = redisClient.getMapField(hashKey, fieldKey, returnType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (result != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            logger.debug(<span class=\"string\">\"DataCacheableAspect: doAround() 查找缓存不为空, 返回缓存数据\"</span>);</div><div class=\"line\">            setExpireTime(hashKey, expireTime);</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\">        result = pjp.proceed();</div><div class=\"line\">        <span class=\"comment\">//后置处理, 将业务数据加入到缓存中</span></div><div class=\"line\">        doAfterReturning(hashKey, fieldKey, cacheable.expireTime(), result);</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 后置处理方法 (写入缓存)</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> point</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> returnValue</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">doAfterReturning</span><span class=\"params\">(<span class=\"keyword\">final</span> String hashKey, <span class=\"keyword\">final</span> String fieldKey, <span class=\"keyword\">final</span> Long expireTime, <span class=\"keyword\">final</span> Object result)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//线程处理</span></div><div class=\"line\">        fixedThreadPool.execute(<span class=\"keyword\">new</span> Runnable() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">                logger.debug(<span class=\"string\">\"DataCacheableAspect: doAfterReturning() 业务处理完毕, 异步将数据或写入缓存中..\"</span>);</div><div class=\"line\">                <span class=\"comment\">//加入缓存</span></div><div class=\"line\">                redisClient.addMap(hashKey, fieldKey, result);</div><div class=\"line\">                <span class=\"comment\">//设置失效时长</span></div><div class=\"line\">                setExpireTime(hashKey, expireTime);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 重置过期时间</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> hashKey</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> expireTime</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setExpireTime</span><span class=\"params\">(<span class=\"keyword\">final</span> String hashKey, Long expireTime)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//设置失效时长</span></div><div class=\"line\">        Long cacheTime = expireTime;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == expireTime) &#123;</div><div class=\"line\">            cacheTime = DEFAULT_CACHE_TIME;</div><div class=\"line\">        &#125;</div><div class=\"line\">        redisClient.expire(hashKey, cacheTime);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取被拦截方法对象</span></div><div class=\"line\"><span class=\"comment\">     * &lt;p&gt;</span></div><div class=\"line\"><span class=\"comment\">     * MethodSignature.getMethod() 获取的是顶层接口或者父类的方法对象</span></div><div class=\"line\"><span class=\"comment\">     * 而缓存的注解在实现类的方法上</span></div><div class=\"line\"><span class=\"comment\">     * 所以应该使用反射获取当前对象的方法对象</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Method <span class=\"title\">getMethod</span><span class=\"params\">(JoinPoint pjp)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//获取参数的类型</span></div><div class=\"line\">        Object[] args = pjp.getArgs();</div><div class=\"line\">        Class[] argTypes = <span class=\"keyword\">new</span> Class[pjp.getArgs().length];</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; args.length; i++) &#123;</div><div class=\"line\">            argTypes[i] = args[i].getClass();</div><div class=\"line\">        &#125;</div><div class=\"line\">        Method method = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            method = pjp.getTarget().getClass().getMethod(pjp.getSignature().getName(), argTypes);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NoSuchMethodException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SecurityException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> method;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取缓存Hash Key</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> cacheable</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> point</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getHashKey</span><span class=\"params\">(JoinPoint point, DataCacheable cacheable)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (StringHelper.isNotEmpty(cacheable.cacheName())) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> cacheable.cacheName();</div><div class=\"line\">        &#125;</div><div class=\"line\">        Signature signature = point.getSignature();</div><div class=\"line\">        <span class=\"keyword\">return</span> signature.getDeclaringTypeName() + <span class=\"string\">\".\"</span> + signature.getName();<span class=\"comment\">//类名 + 方法名</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取缓存的key</span></div><div class=\"line\"><span class=\"comment\">     * key 定义在注解上，支持SPEL表达式</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> pjp</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">parseKey</span><span class=\"params\">(String[] keys, Method method, Object[] args)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//获取被拦截方法参数名列表(使用Spring支持类库)</span></div><div class=\"line\">        LocalVariableTableParameterNameDiscoverer u =</div><div class=\"line\">                <span class=\"keyword\">new</span> LocalVariableTableParameterNameDiscoverer();</div><div class=\"line\">        String[] paraNameArr = u.getParameterNames(method);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//使用SPEL进行key的解析</span></div><div class=\"line\">        ExpressionParser parser = <span class=\"keyword\">new</span> SpelExpressionParser();</div><div class=\"line\">        <span class=\"comment\">//SPEL上下文</span></div><div class=\"line\">        StandardEvaluationContext context = <span class=\"keyword\">new</span> StandardEvaluationContext();</div><div class=\"line\">        <span class=\"comment\">//把方法参数放入SPEL上下文中</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; paraNameArr.length; i++) &#123;</div><div class=\"line\">            context.setVariable(paraNameArr[i], args[i]);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        StringBuffer parseKeyBuff = <span class=\"keyword\">new</span> StringBuffer();</div><div class=\"line\">        <span class=\"keyword\">for</span> (String key : keys) &#123;</div><div class=\"line\">            parseKeyBuff.append(<span class=\"string\">\"_\"</span>).append(parser.parseExpression(key).getValue(context, String.class));</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> parseKeyBuff.toString();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"RedisClient相关封装\"><a href=\"#RedisClient相关封装\" class=\"headerlink\" title=\"RedisClient相关封装\"></a>RedisClient相关封装</h2><p>参见文章<a href=\"http://blog.siven.net/2017/09/10/Redis配置%20&amp;%20常规操作类封装/\">Redis配置 &amp; 常规操作类封装</a></p>\n<h2 id=\"AOP配置\"><a href=\"#AOP配置\" class=\"headerlink\" title=\"AOP配置\"></a>AOP配置</h2><h2 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Service</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NsrxxServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">INsrxxService</span></span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"meta\">@DataCacheable</span>(fieldKey = <span class=\"string\">\"#dto.queryObj.djxh\"</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ResultDto&lt;NsrxxDto&gt; <span class=\"title\">queryNsrxxByDjxh</span><span class=\"params\">(QueryDto&lt;QueryByDjxh&gt; dto)</span> </span>&#123;</div><div class=\"line\">        INsrxxMapper mapper = SessionTemplateUtil.getMapper(INsrxxMapper.class);</div><div class=\"line\">        <span class=\"keyword\">return</span> ResultDtoHelper.success(mapper.queryNsrxxByDjxh(dto.getQueryObj()));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>公司项目对Redis使用比较多，因为之前没有做AOP，所以缓存逻辑和业务逻辑交织在一起，维护比较艰难<br>所以最近实现了针对于Redis的@Cacheable，把缓存的对象依照类别分别存放到redis的Hash中，对于key也实现了SPEL支持。</p>\n<h2 id=\"定义缓存注解\"><a href=\"#定义缓存注解\" class=\"headerlink\" title=\"定义缓存注解\"></a>定义缓存注解</h2><p>创建注解，其实大部分数据都是以hash形式存储的（使的key易于管理），所以，注解中定义了fieldKey，用作Hash的field。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 数据缓存注解</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"meta\">@Target</span>(&#123;ElementType.METHOD&#125;)</div><div class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class=\"line\"><span class=\"meta\">@Documented</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> DataCacheable &#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\">String <span class=\"title\">cacheName</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> \"\"</span>;<span class=\"comment\">//缓存的名称, 默认取(类名 + 方法名)</span></div><div class=\"line\">    String[] fieldKey() ;<span class=\"comment\">//缓存的字段Key, 使用SPEL支持, 如:#userName</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">long</span> <span class=\"title\">expireTime</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> 0</span>; <span class=\"comment\">//过期时效(秒) [-1永不过期]</span></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","more":"<h2 id=\"定义切面-定义PointCut\"><a href=\"#定义切面-定义PointCut\" class=\"headerlink\" title=\"定义切面,定义PointCut\"></a>定义切面,定义PointCut</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.ProceedingJoinPoint;</div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.Signature;</div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Aspect;</div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.reflect.MethodSignature;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</div><div class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Value;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Around;</div><div class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Aspect;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 数据缓存切面处理</span></div><div class=\"line\"><span class=\"comment\"> * http://www.cnblogs.com/DajiangDev/p/3770894.html</span></div><div class=\"line\"><span class=\"comment\"> * Created by SIVEN on 17/9/1.</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"meta\">@Aspect</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataCacheableAspect</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Logger logger = LoggerFactory.getLogger(<span class=\"keyword\">this</span>.getClass());</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 可控的线程池</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    ExecutorService fixedThreadPool = Executors.newFixedThreadPool(<span class=\"number\">10</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"#&#123;config['redis.cache.time']&#125;\"</span>)</div><div class=\"line\">    Long DEFAULT_CACHE_TIME = <span class=\"number\">600L</span>; <span class=\"comment\">//默认10分钟</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"#&#123;config['redis.cache.enable']&#125;\"</span>)</div><div class=\"line\">    <span class=\"keyword\">boolean</span> REDIS_CACHE_ENABLE;<span class=\"comment\">//启用缓存开关</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Resource</span></div><div class=\"line\">    RedisClient redisClient;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 控制业务执行</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> joinPoint</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> Throwable</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"meta\">@Around</span>(<span class=\"string\">\"execution(* gov.etax.dzswj.nsrzx.services..service..*.*(..)) &amp;&amp; @annotation(gov.etax.dzswj.nsrzx.component.cache.annotation.DataCacheable)\"</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">doAround</span><span class=\"params\">(ProceedingJoinPoint pjp)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (!REDIS_CACHE_ENABLE) &#123;</div><div class=\"line\">            logger.debug(<span class=\"string\">\"缓存开关 &gt;&gt; [禁用]\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> pjp.proceed();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        Method method = getMethod(pjp);</div><div class=\"line\">        DataCacheable cacheable = method.getAnnotation(DataCacheable.class);</div><div class=\"line\">        String hashKey = getHashKey(pjp, cacheable);</div><div class=\"line\">        String fieldKey = parseKey(cacheable.fieldKey(), method, pjp.getArgs());</div><div class=\"line\">        <span class=\"keyword\">long</span> expireTime = cacheable.expireTime();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//获取方法的返回类型,让缓存可以返回正确的类型</span></div><div class=\"line\">        Class returnType = ((MethodSignature) pjp.getSignature()).getReturnType();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//使用redis 的hash进行存取，易于管理</span></div><div class=\"line\">        Object result = redisClient.getMapField(hashKey, fieldKey, returnType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (result != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            logger.debug(<span class=\"string\">\"DataCacheableAspect: doAround() 查找缓存不为空, 返回缓存数据\"</span>);</div><div class=\"line\">            setExpireTime(hashKey, expireTime);</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\">        result = pjp.proceed();</div><div class=\"line\">        <span class=\"comment\">//后置处理, 将业务数据加入到缓存中</span></div><div class=\"line\">        doAfterReturning(hashKey, fieldKey, cacheable.expireTime(), result);</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 后置处理方法 (写入缓存)</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> point</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> returnValue</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">doAfterReturning</span><span class=\"params\">(<span class=\"keyword\">final</span> String hashKey, <span class=\"keyword\">final</span> String fieldKey, <span class=\"keyword\">final</span> Long expireTime, <span class=\"keyword\">final</span> Object result)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//线程处理</span></div><div class=\"line\">        fixedThreadPool.execute(<span class=\"keyword\">new</span> Runnable() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">                logger.debug(<span class=\"string\">\"DataCacheableAspect: doAfterReturning() 业务处理完毕, 异步将数据或写入缓存中..\"</span>);</div><div class=\"line\">                <span class=\"comment\">//加入缓存</span></div><div class=\"line\">                redisClient.addMap(hashKey, fieldKey, result);</div><div class=\"line\">                <span class=\"comment\">//设置失效时长</span></div><div class=\"line\">                setExpireTime(hashKey, expireTime);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 重置过期时间</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> hashKey</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> expireTime</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setExpireTime</span><span class=\"params\">(<span class=\"keyword\">final</span> String hashKey, Long expireTime)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//设置失效时长</span></div><div class=\"line\">        Long cacheTime = expireTime;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == expireTime) &#123;</div><div class=\"line\">            cacheTime = DEFAULT_CACHE_TIME;</div><div class=\"line\">        &#125;</div><div class=\"line\">        redisClient.expire(hashKey, cacheTime);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取被拦截方法对象</span></div><div class=\"line\"><span class=\"comment\">     * &lt;p&gt;</span></div><div class=\"line\"><span class=\"comment\">     * MethodSignature.getMethod() 获取的是顶层接口或者父类的方法对象</span></div><div class=\"line\"><span class=\"comment\">     * 而缓存的注解在实现类的方法上</span></div><div class=\"line\"><span class=\"comment\">     * 所以应该使用反射获取当前对象的方法对象</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Method <span class=\"title\">getMethod</span><span class=\"params\">(JoinPoint pjp)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//获取参数的类型</span></div><div class=\"line\">        Object[] args = pjp.getArgs();</div><div class=\"line\">        Class[] argTypes = <span class=\"keyword\">new</span> Class[pjp.getArgs().length];</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; args.length; i++) &#123;</div><div class=\"line\">            argTypes[i] = args[i].getClass();</div><div class=\"line\">        &#125;</div><div class=\"line\">        Method method = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            method = pjp.getTarget().getClass().getMethod(pjp.getSignature().getName(), argTypes);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NoSuchMethodException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SecurityException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> method;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取缓存Hash Key</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> cacheable</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> point</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getHashKey</span><span class=\"params\">(JoinPoint point, DataCacheable cacheable)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (StringHelper.isNotEmpty(cacheable.cacheName())) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> cacheable.cacheName();</div><div class=\"line\">        &#125;</div><div class=\"line\">        Signature signature = point.getSignature();</div><div class=\"line\">        <span class=\"keyword\">return</span> signature.getDeclaringTypeName() + <span class=\"string\">\".\"</span> + signature.getName();<span class=\"comment\">//类名 + 方法名</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 获取缓存的key</span></div><div class=\"line\"><span class=\"comment\">     * key 定义在注解上，支持SPEL表达式</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> pjp</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">parseKey</span><span class=\"params\">(String[] keys, Method method, Object[] args)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//获取被拦截方法参数名列表(使用Spring支持类库)</span></div><div class=\"line\">        LocalVariableTableParameterNameDiscoverer u =</div><div class=\"line\">                <span class=\"keyword\">new</span> LocalVariableTableParameterNameDiscoverer();</div><div class=\"line\">        String[] paraNameArr = u.getParameterNames(method);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//使用SPEL进行key的解析</span></div><div class=\"line\">        ExpressionParser parser = <span class=\"keyword\">new</span> SpelExpressionParser();</div><div class=\"line\">        <span class=\"comment\">//SPEL上下文</span></div><div class=\"line\">        StandardEvaluationContext context = <span class=\"keyword\">new</span> StandardEvaluationContext();</div><div class=\"line\">        <span class=\"comment\">//把方法参数放入SPEL上下文中</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; paraNameArr.length; i++) &#123;</div><div class=\"line\">            context.setVariable(paraNameArr[i], args[i]);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        StringBuffer parseKeyBuff = <span class=\"keyword\">new</span> StringBuffer();</div><div class=\"line\">        <span class=\"keyword\">for</span> (String key : keys) &#123;</div><div class=\"line\">            parseKeyBuff.append(<span class=\"string\">\"_\"</span>).append(parser.parseExpression(key).getValue(context, String.class));</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> parseKeyBuff.toString();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"RedisClient相关封装\"><a href=\"#RedisClient相关封装\" class=\"headerlink\" title=\"RedisClient相关封装\"></a>RedisClient相关封装</h2><p>参见文章<a href=\"http://blog.siven.net/2017/09/10/Redis配置%20&amp;%20常规操作类封装/\">Redis配置 &amp; 常规操作类封装</a></p>\n<h2 id=\"AOP配置\"><a href=\"#AOP配置\" class=\"headerlink\" title=\"AOP配置\"></a>AOP配置</h2><h2 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Service</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NsrxxServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">INsrxxService</span></span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"meta\">@DataCacheable</span>(fieldKey = <span class=\"string\">\"#dto.queryObj.djxh\"</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ResultDto&lt;NsrxxDto&gt; <span class=\"title\">queryNsrxxByDjxh</span><span class=\"params\">(QueryDto&lt;QueryByDjxh&gt; dto)</span> </span>&#123;</div><div class=\"line\">        INsrxxMapper mapper = SessionTemplateUtil.getMapper(INsrxxMapper.class);</div><div class=\"line\">        <span class=\"keyword\">return</span> ResultDtoHelper.success(mapper.queryNsrxxByDjxh(dto.getQueryObj()));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"让Mac也能拥有apt-get类似的功能——Brew","date":"2017-09-05T13:03:13.000Z","_content":"原文地址：http://snowolf.iteye.com/blog/774312\n\n之前一直怀念ubuntu下的apt-get，因为实在是方便，需要安装什么，一个命令搞定，相关的依赖包统统由apt-get维护。下载，编译，安装，那叫一个痛快。什么软件用着不爽，一个命令卸载！\n\n怀念apt-get之余，发现了替代工具MacPorts，据说也可以解决我的问题。但可惜，我总是无法更新本地软件索引库！\n\nhomebrew主页对brew进行了详细的描述，不过我们更希望下载下来实战演练！\n\n<!-- more -->\n\n\n## 1.安装brew：\n\n``` bash\ncurl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/local --strip 1\n```\n\n上述命令，在官网上可以找到！\n\n\n## 2.使用brew安装软件\n\n别的工具不说，wget少不了，但是mac上默认没有！\n就先拿它来开刀了：\n\n\n``` bash\nbrew install wget\n```\n\n甚至是安装tomcat：\n\n\n``` bash\nbrew install tomcat\n```\n\n## 3.使用brew卸载软件\n\n安装简单，卸载就更简单了：\n\n``` bash\nbrew uninstall unrar\n```\n\n## 4.使用brew检索软件\n\n看看我们能搜到什么：\n\n``` bash\nbrew search /apache*/\n```\n\n/apache*/使用的是正则表达式，注意使用/分隔！\n\n","source":"_posts/让Mac也能拥有apt-get类似的功能——Brew.md","raw":"---\ntitle: 让Mac也能拥有apt-get类似的功能——Brew\ndate: 2017-09-05 21:03:13\ntags: \n  - MAC OS\n  - Brew\ncategories: \n  - MAC OS\n---\n原文地址：http://snowolf.iteye.com/blog/774312\n\n之前一直怀念ubuntu下的apt-get，因为实在是方便，需要安装什么，一个命令搞定，相关的依赖包统统由apt-get维护。下载，编译，安装，那叫一个痛快。什么软件用着不爽，一个命令卸载！\n\n怀念apt-get之余，发现了替代工具MacPorts，据说也可以解决我的问题。但可惜，我总是无法更新本地软件索引库！\n\nhomebrew主页对brew进行了详细的描述，不过我们更希望下载下来实战演练！\n\n<!-- more -->\n\n\n## 1.安装brew：\n\n``` bash\ncurl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/local --strip 1\n```\n\n上述命令，在官网上可以找到！\n\n\n## 2.使用brew安装软件\n\n别的工具不说，wget少不了，但是mac上默认没有！\n就先拿它来开刀了：\n\n\n``` bash\nbrew install wget\n```\n\n甚至是安装tomcat：\n\n\n``` bash\nbrew install tomcat\n```\n\n## 3.使用brew卸载软件\n\n安装简单，卸载就更简单了：\n\n``` bash\nbrew uninstall unrar\n```\n\n## 4.使用brew检索软件\n\n看看我们能搜到什么：\n\n``` bash\nbrew search /apache*/\n```\n\n/apache*/使用的是正则表达式，注意使用/分隔！\n\n","slug":"让Mac也能拥有apt-get类似的功能——Brew","published":1,"updated":"2017-09-16T11:16:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7n84lkx000nzxrxu59vrxwe","content":"<p>原文地址：<a href=\"http://snowolf.iteye.com/blog/774312\" target=\"_blank\" rel=\"external\">http://snowolf.iteye.com/blog/774312</a></p>\n<p>之前一直怀念ubuntu下的apt-get，因为实在是方便，需要安装什么，一个命令搞定，相关的依赖包统统由apt-get维护。下载，编译，安装，那叫一个痛快。什么软件用着不爽，一个命令卸载！</p>\n<p>怀念apt-get之余，发现了替代工具MacPorts，据说也可以解决我的问题。但可惜，我总是无法更新本地软件索引库！</p>\n<p>homebrew主页对brew进行了详细的描述，不过我们更希望下载下来实战演练！</p>\n<a id=\"more\"></a>\n<h2 id=\"1-安装brew：\"><a href=\"#1-安装brew：\" class=\"headerlink\" title=\"1.安装brew：\"></a>1.安装brew：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/<span class=\"built_in\">local</span> --strip 1</div></pre></td></tr></table></figure>\n<p>上述命令，在官网上可以找到！</p>\n<h2 id=\"2-使用brew安装软件\"><a href=\"#2-使用brew安装软件\" class=\"headerlink\" title=\"2.使用brew安装软件\"></a>2.使用brew安装软件</h2><p>别的工具不说，wget少不了，但是mac上默认没有！<br>就先拿它来开刀了：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install wget</div></pre></td></tr></table></figure>\n<p>甚至是安装tomcat：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install tomcat</div></pre></td></tr></table></figure>\n<h2 id=\"3-使用brew卸载软件\"><a href=\"#3-使用brew卸载软件\" class=\"headerlink\" title=\"3.使用brew卸载软件\"></a>3.使用brew卸载软件</h2><p>安装简单，卸载就更简单了：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew uninstall unrar</div></pre></td></tr></table></figure>\n<h2 id=\"4-使用brew检索软件\"><a href=\"#4-使用brew检索软件\" class=\"headerlink\" title=\"4.使用brew检索软件\"></a>4.使用brew检索软件</h2><p>看看我们能搜到什么：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew search /apache*/</div></pre></td></tr></table></figure>\n<p>/apache*/使用的是正则表达式，注意使用/分隔！</p>\n","site":{"data":{}},"excerpt":"<p>原文地址：<a href=\"http://snowolf.iteye.com/blog/774312\" target=\"_blank\" rel=\"external\">http://snowolf.iteye.com/blog/774312</a></p>\n<p>之前一直怀念ubuntu下的apt-get，因为实在是方便，需要安装什么，一个命令搞定，相关的依赖包统统由apt-get维护。下载，编译，安装，那叫一个痛快。什么软件用着不爽，一个命令卸载！</p>\n<p>怀念apt-get之余，发现了替代工具MacPorts，据说也可以解决我的问题。但可惜，我总是无法更新本地软件索引库！</p>\n<p>homebrew主页对brew进行了详细的描述，不过我们更希望下载下来实战演练！</p>","more":"<h2 id=\"1-安装brew：\"><a href=\"#1-安装brew：\" class=\"headerlink\" title=\"1.安装brew：\"></a>1.安装brew：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/<span class=\"built_in\">local</span> --strip 1</div></pre></td></tr></table></figure>\n<p>上述命令，在官网上可以找到！</p>\n<h2 id=\"2-使用brew安装软件\"><a href=\"#2-使用brew安装软件\" class=\"headerlink\" title=\"2.使用brew安装软件\"></a>2.使用brew安装软件</h2><p>别的工具不说，wget少不了，但是mac上默认没有！<br>就先拿它来开刀了：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install wget</div></pre></td></tr></table></figure>\n<p>甚至是安装tomcat：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install tomcat</div></pre></td></tr></table></figure>\n<h2 id=\"3-使用brew卸载软件\"><a href=\"#3-使用brew卸载软件\" class=\"headerlink\" title=\"3.使用brew卸载软件\"></a>3.使用brew卸载软件</h2><p>安装简单，卸载就更简单了：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew uninstall unrar</div></pre></td></tr></table></figure>\n<h2 id=\"4-使用brew检索软件\"><a href=\"#4-使用brew检索软件\" class=\"headerlink\" title=\"4.使用brew检索软件\"></a>4.使用brew检索软件</h2><p>看看我们能搜到什么：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew search /apache*/</div></pre></td></tr></table></figure>\n<p>/apache*/使用的是正则表达式，注意使用/分隔！</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj7n84lkk0009zxrxntlo43o7","category_id":"cj7n84lkd0006zxrx1598ot66","_id":"cj7n84ll0000tzxrxff7d1arp"},{"post_id":"cj7n84lkk0009zxrxntlo43o7","category_id":"cj7n84lkv000kzxrxol0d53n8","_id":"cj7n84ll1000wzxrxcwsqw8kt"},{"post_id":"cj7n84lk30002zxrxctq8k01b","category_id":"cj7n84lkd0006zxrx1598ot66","_id":"cj7n84ll2000yzxrxqjbo8gok"},{"post_id":"cj7n84lk30002zxrxctq8k01b","category_id":"cj7n84lkz000pzxrxz7j1i46h","_id":"cj7n84ll30012zxrx9x4vwihp"},{"post_id":"cj7n84lkl000azxrxbbtvlejb","category_id":"cj7n84lkd0006zxrx1598ot66","_id":"cj7n84ll30013zxrxsep6e91m"},{"post_id":"cj7n84lkl000azxrxbbtvlejb","category_id":"cj7n84ll0000uzxrxb9ejuqb8","_id":"cj7n84ll30016zxrxtpsam4d5"},{"post_id":"cj7n84lkn000dzxrxcgi3azja","category_id":"cj7n84ll20010zxrxyftspf7q","_id":"cj7n84ll30017zxrxey5imlzs"},{"post_id":"cj7n84lkb0004zxrxgzphtlvv","category_id":"cj7n84lkd0006zxrx1598ot66","_id":"cj7n84ll4001bzxrxfy4o5pbu"},{"post_id":"cj7n84lkb0004zxrxgzphtlvv","category_id":"cj7n84ll30014zxrxkdehjack","_id":"cj7n84ll5001fzxrxzsalwebn"},{"post_id":"cj7n84lko000ezxrxge45ahgw","category_id":"cj7n84lkd0006zxrx1598ot66","_id":"cj7n84ll5001hzxrxfdug4b54"},{"post_id":"cj7n84lko000ezxrxge45ahgw","category_id":"cj7n84lkz000pzxrxz7j1i46h","_id":"cj7n84ll7001kzxrx8f9hl2az"},{"post_id":"cj7n84lkg0008zxrx8vvzp3mk","category_id":"cj7n84lkq000fzxrxrcik1ywr","_id":"cj7n84lla001ozxrxma1apq8q"},{"post_id":"cj7n84lkg0008zxrx8vvzp3mk","category_id":"cj7n84ll5001izxrxpsudqryw","_id":"cj7n84llc001szxrxluol620y"},{"post_id":"cj7n84lkx000nzxrxu59vrxwe","category_id":"cj7n84llb001qzxrx5v9qwpoz","_id":"cj7n84lle001yzxrx49kac7f3"},{"post_id":"cj7n84lks000hzxrxs8vbvuir","category_id":"cj7n84ll4001dzxrxa5og02yw","_id":"cj7n84llg0022zxrxt2dj1c8z"},{"post_id":"cj7n84lks000hzxrxs8vbvuir","category_id":"cj7n84lld001vzxrxvdbgo0w4","_id":"cj7n84llg0024zxrxw7gyvdao"},{"post_id":"cj7n84lku000jzxrxvx48y4dr","category_id":"cj7n84lkd0006zxrx1598ot66","_id":"cj7n84llg0025zxrxjo0kgw9g"},{"post_id":"cj7n84lku000jzxrxvx48y4dr","category_id":"cj7n84ll0000uzxrxb9ejuqb8","_id":"cj7n84llh0027zxrx3trszq97"},{"post_id":"cj7n84lku000jzxrxvx48y4dr","category_id":"cj7n84lle0020zxrx6dookm13","_id":"cj7n84lli0029zxrxnt9250o4"}],"PostTag":[{"post_id":"cj7n84lko000ezxrxge45ahgw","tag_id":"cj7n84lkf0007zxrxbibzunyi","_id":"cj7n84lku000izxrxmidvanlu"},{"post_id":"cj7n84lko000ezxrxge45ahgw","tag_id":"cj7n84lkm000czxrxa0510ly9","_id":"cj7n84lkw000mzxrxwj3t4919"},{"post_id":"cj7n84lk30002zxrxctq8k01b","tag_id":"cj7n84lkf0007zxrxbibzunyi","_id":"cj7n84lky000ozxrxnvk5lwb5"},{"post_id":"cj7n84lk30002zxrxctq8k01b","tag_id":"cj7n84lkm000czxrxa0510ly9","_id":"cj7n84lkz000qzxrxolztau18"},{"post_id":"cj7n84lk30002zxrxctq8k01b","tag_id":"cj7n84lkr000gzxrxkxap65mb","_id":"cj7n84ll0000szxrx5vx81zh2"},{"post_id":"cj7n84lkb0004zxrxgzphtlvv","tag_id":"cj7n84lkw000lzxrxs4kcgd5z","_id":"cj7n84ll1000xzxrxbrd2liji"},{"post_id":"cj7n84lkb0004zxrxgzphtlvv","tag_id":"cj7n84lkz000rzxrx8dh25max","_id":"cj7n84ll2000zzxrx24waedch"},{"post_id":"cj7n84lkg0008zxrx8vvzp3mk","tag_id":"cj7n84lkz000rzxrx8dh25max","_id":"cj7n84ll4001azxrxuctdzebx"},{"post_id":"cj7n84lkg0008zxrx8vvzp3mk","tag_id":"cj7n84ll20011zxrxfq7u82s0","_id":"cj7n84ll4001czxrxvetqq61s"},{"post_id":"cj7n84lkg0008zxrx8vvzp3mk","tag_id":"cj7n84ll30015zxrx4s8dbpc4","_id":"cj7n84ll5001gzxrxil1aem2d"},{"post_id":"cj7n84lkk0009zxrxntlo43o7","tag_id":"cj7n84lkw000lzxrxs4kcgd5z","_id":"cj7n84ll9001nzxrxsbm3nwje"},{"post_id":"cj7n84lkk0009zxrxntlo43o7","tag_id":"cj7n84ll5001ezxrx7jcprp1e","_id":"cj7n84llb001pzxrxlruw28ct"},{"post_id":"cj7n84lkk0009zxrxntlo43o7","tag_id":"cj7n84ll5001jzxrxno45180b","_id":"cj7n84llc001tzxrxe9kl8fvg"},{"post_id":"cj7n84lkl000azxrxbbtvlejb","tag_id":"cj7n84lkw000lzxrxs4kcgd5z","_id":"cj7n84lle001wzxrxaw0iedef"},{"post_id":"cj7n84lkl000azxrxbbtvlejb","tag_id":"cj7n84ll5001jzxrxno45180b","_id":"cj7n84lle001xzxrxsb8z6jsj"},{"post_id":"cj7n84lkn000dzxrxcgi3azja","tag_id":"cj7n84lld001uzxrxa341pzsh","_id":"cj7n84llf0021zxrxcn437q47"},{"post_id":"cj7n84lks000hzxrxs8vbvuir","tag_id":"cj7n84lle001zzxrxv98i8b39","_id":"cj7n84llh0028zxrx8x84lrih"},{"post_id":"cj7n84lks000hzxrxs8vbvuir","tag_id":"cj7n84llg0023zxrxoeo0v5d9","_id":"cj7n84lli002azxrxeo564t3j"},{"post_id":"cj7n84lku000jzxrxvx48y4dr","tag_id":"cj7n84lkw000lzxrxs4kcgd5z","_id":"cj7n84llj002fzxrxafl15x6t"},{"post_id":"cj7n84lku000jzxrxvx48y4dr","tag_id":"cj7n84lkz000rzxrx8dh25max","_id":"cj7n84llj002gzxrxpcyo16dm"},{"post_id":"cj7n84lku000jzxrxvx48y4dr","tag_id":"cj7n84ll5001jzxrxno45180b","_id":"cj7n84llj002izxrx8kpo53v9"},{"post_id":"cj7n84lku000jzxrxvx48y4dr","tag_id":"cj7n84lli002dzxrxkidumz1p","_id":"cj7n84llj002jzxrxmcfeqxc9"},{"post_id":"cj7n84lkx000nzxrxu59vrxwe","tag_id":"cj7n84llj002ezxrxp8yzzq67","_id":"cj7n84llk002kzxrxvaq26yzr"},{"post_id":"cj7n84lkx000nzxrxu59vrxwe","tag_id":"cj7n84llj002hzxrx32pns3w3","_id":"cj7n84llk002lzxrxmnfmufd0"}],"Tag":[{"name":"IDEA","_id":"cj7n84lkf0007zxrxbibzunyi"},{"name":"Maven","_id":"cj7n84lkm000czxrxa0510ly9"},{"name":"MyBatis","_id":"cj7n84lkr000gzxrxkxap65mb"},{"name":"JAVA","_id":"cj7n84lkw000lzxrxs4kcgd5z"},{"name":"Redis","_id":"cj7n84lkz000rzxrx8dh25max"},{"name":"Sentinel","_id":"cj7n84ll20011zxrxfq7u82s0"},{"name":"Redis 集群","_id":"cj7n84ll30015zxrx4s8dbpc4"},{"name":"Mybatis","_id":"cj7n84ll5001ezxrx7jcprp1e"},{"name":"Spring","_id":"cj7n84ll5001jzxrxno45180b"},{"name":"HEXO","_id":"cj7n84lld001uzxrxa341pzsh"},{"name":"Linux","_id":"cj7n84lle001zzxrxv98i8b39"},{"name":"SCP","_id":"cj7n84llg0023zxrxoeo0v5d9"},{"name":"AOP","_id":"cj7n84lli002dzxrxkidumz1p"},{"name":"MAC OS","_id":"cj7n84llj002ezxrxp8yzzq67"},{"name":"Brew","_id":"cj7n84llj002hzxrx32pns3w3"}]}}